// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "IMClient2ServGroup.pb.h"
// @@protoc_insertion_point(imports)

@implementation Imclient2ServGroupRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [Imclient2ServGroupRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ImbaseDefineRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface C2MGroupListReq ()
@property SInt32 cmdId;
@end

@implementation C2MGroupListReq

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (void) dealloc {
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 256;
  }
  return self;
}
static C2MGroupListReq* defaultC2MGroupListReqInstance = nil;
+ (void) initialize {
  if (self == [C2MGroupListReq class]) {
    defaultC2MGroupListReqInstance = [[C2MGroupListReq alloc] init];
  }
}
+ (C2MGroupListReq*) defaultInstance {
  return defaultC2MGroupListReqInstance;
}
- (C2MGroupListReq*) defaultInstance {
  return defaultC2MGroupListReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MGroupListReq*) parseFromData:(NSData*) data {
  return (C2MGroupListReq*)[[[C2MGroupListReq builder] mergeFromData:data] build];
}
+ (C2MGroupListReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupListReq*)[[[C2MGroupListReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupListReq*) parseFromInputStream:(NSInputStream*) input {
  return (C2MGroupListReq*)[[[C2MGroupListReq builder] mergeFromInputStream:input] build];
}
+ (C2MGroupListReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupListReq*)[[[C2MGroupListReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupListReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MGroupListReq*)[[[C2MGroupListReq builder] mergeFromCodedInputStream:input] build];
}
+ (C2MGroupListReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupListReq*)[[[C2MGroupListReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupListReqBuilder*) builder {
  return [[C2MGroupListReqBuilder alloc] init];
}
+ (C2MGroupListReqBuilder*) builderWithPrototype:(C2MGroupListReq*) prototype {
  return [[C2MGroupListReq builder] mergeFrom:prototype];
}
- (C2MGroupListReqBuilder*) builder {
  return [C2MGroupListReq builder];
}
- (C2MGroupListReqBuilder*) toBuilder {
  return [C2MGroupListReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MGroupListReq class]]) {
    return NO;
  }
  C2MGroupListReq *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MGroupListReqBuilder()
@property (strong) C2MGroupListReq* result;
@end

@implementation C2MGroupListReqBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MGroupListReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MGroupListReqBuilder*) clear {
  self.result = [[C2MGroupListReq alloc] init];
  return self;
}
- (C2MGroupListReqBuilder*) clone {
  return [C2MGroupListReq builderWithPrototype:result];
}
- (C2MGroupListReq*) defaultInstance {
  return [C2MGroupListReq defaultInstance];
}
- (C2MGroupListReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MGroupListReq*) buildPartial {
  C2MGroupListReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MGroupListReqBuilder*) mergeFrom:(C2MGroupListReq*) other {
  if (other == [C2MGroupListReq defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MGroupListReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MGroupListReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MGroupListReqBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MGroupListReqBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 256;
  return self;
}
@end

@interface C2MGroupListRsp ()
@property SInt32 cmdId;
@property (strong) NSMutableArray * groupInfoListArray;
@end

@implementation C2MGroupListRsp

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
@synthesize groupInfoListArray;
@dynamic groupInfoList;
- (void) dealloc {
  self.groupInfoListArray = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 257;
  }
  return self;
}
static C2MGroupListRsp* defaultC2MGroupListRspInstance = nil;
+ (void) initialize {
  if (self == [C2MGroupListRsp class]) {
    defaultC2MGroupListRspInstance = [[C2MGroupListRsp alloc] init];
  }
}
+ (C2MGroupListRsp*) defaultInstance {
  return defaultC2MGroupListRspInstance;
}
- (C2MGroupListRsp*) defaultInstance {
  return defaultC2MGroupListRspInstance;
}
- (NSArray *)groupInfoList {
  return groupInfoListArray;
}
- (ClientGroupInfo*)groupInfoListAtIndex:(NSUInteger)index {
  return [groupInfoListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitgroupInfoList = YES;
   [self.groupInfoList enumerateObjectsUsingBlock:^(ClientGroupInfo *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitgroupInfoList = NO;
      *stop = YES;
    }
  }];
  if (!isInitgroupInfoList) return isInitgroupInfoList;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  [self.groupInfoListArray enumerateObjectsUsingBlock:^(ClientGroupInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  [self.groupInfoListArray enumerateObjectsUsingBlock:^(ClientGroupInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MGroupListRsp*) parseFromData:(NSData*) data {
  return (C2MGroupListRsp*)[[[C2MGroupListRsp builder] mergeFromData:data] build];
}
+ (C2MGroupListRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupListRsp*)[[[C2MGroupListRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupListRsp*) parseFromInputStream:(NSInputStream*) input {
  return (C2MGroupListRsp*)[[[C2MGroupListRsp builder] mergeFromInputStream:input] build];
}
+ (C2MGroupListRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupListRsp*)[[[C2MGroupListRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupListRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MGroupListRsp*)[[[C2MGroupListRsp builder] mergeFromCodedInputStream:input] build];
}
+ (C2MGroupListRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupListRsp*)[[[C2MGroupListRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupListRspBuilder*) builder {
  return [[C2MGroupListRspBuilder alloc] init];
}
+ (C2MGroupListRspBuilder*) builderWithPrototype:(C2MGroupListRsp*) prototype {
  return [[C2MGroupListRsp builder] mergeFrom:prototype];
}
- (C2MGroupListRspBuilder*) builder {
  return [C2MGroupListRsp builder];
}
- (C2MGroupListRspBuilder*) toBuilder {
  return [C2MGroupListRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  [self.groupInfoListArray enumerateObjectsUsingBlock:^(ClientGroupInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"groupInfoList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MGroupListRsp class]]) {
    return NO;
  }
  C2MGroupListRsp *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      [self.groupInfoListArray isEqualToArray:otherMessage.groupInfoListArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  [self.groupInfoListArray enumerateObjectsUsingBlock:^(ClientGroupInfo *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MGroupListRspBuilder()
@property (strong) C2MGroupListRsp* result;
@end

@implementation C2MGroupListRspBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MGroupListRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MGroupListRspBuilder*) clear {
  self.result = [[C2MGroupListRsp alloc] init];
  return self;
}
- (C2MGroupListRspBuilder*) clone {
  return [C2MGroupListRsp builderWithPrototype:result];
}
- (C2MGroupListRsp*) defaultInstance {
  return [C2MGroupListRsp defaultInstance];
}
- (C2MGroupListRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MGroupListRsp*) buildPartial {
  C2MGroupListRsp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MGroupListRspBuilder*) mergeFrom:(C2MGroupListRsp*) other {
  if (other == [C2MGroupListRsp defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.groupInfoListArray.count > 0) {
    if (result.groupInfoListArray == nil) {
      result.groupInfoListArray = [[NSMutableArray alloc] initWithArray:other.groupInfoListArray];
    } else {
      [result.groupInfoListArray addObjectsFromArray:other.groupInfoListArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MGroupListRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MGroupListRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 18: {
        ClientGroupInfoBuilder* subBuilder = [ClientGroupInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroupInfoList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MGroupListRspBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MGroupListRspBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 257;
  return self;
}
- (NSMutableArray *)groupInfoList {
  return result.groupInfoListArray;
}
- (ClientGroupInfo*)groupInfoListAtIndex:(NSUInteger)index {
  return [result groupInfoListAtIndex:index];
}
- (C2MGroupListRspBuilder *)addGroupInfoList:(ClientGroupInfo*)value {
  if (result.groupInfoListArray == nil) {
    result.groupInfoListArray = [[NSMutableArray alloc]init];
  }
  [result.groupInfoListArray addObject:value];
  return self;
}
- (C2MGroupListRspBuilder *)setGroupInfoListArray:(NSArray *)array {
  result.groupInfoListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (C2MGroupListRspBuilder *)clearGroupInfoList {
  result.groupInfoListArray = nil;
  return self;
}
@end

@interface C2MGroupUserListReq ()
@property SInt32 cmdId;
@property (strong) NSString* groupId;
@end

@implementation C2MGroupUserListReq

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) value_ {
  hasGroupId_ = !!value_;
}
@synthesize groupId;
- (void) dealloc {
  self.groupId = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 258;
    self.groupId = @"";
  }
  return self;
}
static C2MGroupUserListReq* defaultC2MGroupUserListReqInstance = nil;
+ (void) initialize {
  if (self == [C2MGroupUserListReq class]) {
    defaultC2MGroupUserListReqInstance = [[C2MGroupUserListReq alloc] init];
  }
}
+ (C2MGroupUserListReq*) defaultInstance {
  return defaultC2MGroupUserListReqInstance;
}
- (C2MGroupUserListReq*) defaultInstance {
  return defaultC2MGroupUserListReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasGroupId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasGroupId) {
    [output writeString:2 value:self.groupId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasGroupId) {
    size_ += computeStringSize(2, self.groupId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MGroupUserListReq*) parseFromData:(NSData*) data {
  return (C2MGroupUserListReq*)[[[C2MGroupUserListReq builder] mergeFromData:data] build];
}
+ (C2MGroupUserListReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupUserListReq*)[[[C2MGroupUserListReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupUserListReq*) parseFromInputStream:(NSInputStream*) input {
  return (C2MGroupUserListReq*)[[[C2MGroupUserListReq builder] mergeFromInputStream:input] build];
}
+ (C2MGroupUserListReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupUserListReq*)[[[C2MGroupUserListReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupUserListReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MGroupUserListReq*)[[[C2MGroupUserListReq builder] mergeFromCodedInputStream:input] build];
}
+ (C2MGroupUserListReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupUserListReq*)[[[C2MGroupUserListReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupUserListReqBuilder*) builder {
  return [[C2MGroupUserListReqBuilder alloc] init];
}
+ (C2MGroupUserListReqBuilder*) builderWithPrototype:(C2MGroupUserListReq*) prototype {
  return [[C2MGroupUserListReq builder] mergeFrom:prototype];
}
- (C2MGroupUserListReqBuilder*) builder {
  return [C2MGroupUserListReq builder];
}
- (C2MGroupUserListReqBuilder*) toBuilder {
  return [C2MGroupUserListReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", self.groupId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MGroupUserListReq class]]) {
    return NO;
  }
  C2MGroupUserListReq *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || [self.groupId isEqual:otherMessage.groupId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [self.groupId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MGroupUserListReqBuilder()
@property (strong) C2MGroupUserListReq* result;
@end

@implementation C2MGroupUserListReqBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MGroupUserListReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MGroupUserListReqBuilder*) clear {
  self.result = [[C2MGroupUserListReq alloc] init];
  return self;
}
- (C2MGroupUserListReqBuilder*) clone {
  return [C2MGroupUserListReq builderWithPrototype:result];
}
- (C2MGroupUserListReq*) defaultInstance {
  return [C2MGroupUserListReq defaultInstance];
}
- (C2MGroupUserListReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MGroupUserListReq*) buildPartial {
  C2MGroupUserListReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MGroupUserListReqBuilder*) mergeFrom:(C2MGroupUserListReq*) other {
  if (other == [C2MGroupUserListReq defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MGroupUserListReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MGroupUserListReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 18: {
        [self setGroupId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MGroupUserListReqBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MGroupUserListReqBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 258;
  return self;
}
- (BOOL) hasGroupId {
  return result.hasGroupId;
}
- (NSString*) groupId {
  return result.groupId;
}
- (C2MGroupUserListReqBuilder*) setGroupId:(NSString*) value {
  result.hasGroupId = YES;
  result.groupId = value;
  return self;
}
- (C2MGroupUserListReqBuilder*) clearGroupId {
  result.hasGroupId = NO;
  result.groupId = @"";
  return self;
}
@end

@interface C2MGroupUserListRsp ()
@property SInt32 cmdId;
@property UInt32 results;
@property (strong) NSString* groupId;
@property (strong) NSString* groupName;
@property (strong) NSString* groupAvatar;
@property (strong) NSString* groupCreatorId;
@property GroupType groupType;
@property (strong) NSMutableArray * groupMemberListArray;
@end

@implementation C2MGroupUserListRsp

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasResults {
  return !!hasResults_;
}
- (void) setHasResults:(BOOL) value_ {
  hasResults_ = !!value_;
}
@synthesize results;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) value_ {
  hasGroupId_ = !!value_;
}
@synthesize groupId;
- (BOOL) hasGroupName {
  return !!hasGroupName_;
}
- (void) setHasGroupName:(BOOL) value_ {
  hasGroupName_ = !!value_;
}
@synthesize groupName;
- (BOOL) hasGroupAvatar {
  return !!hasGroupAvatar_;
}
- (void) setHasGroupAvatar:(BOOL) value_ {
  hasGroupAvatar_ = !!value_;
}
@synthesize groupAvatar;
- (BOOL) hasGroupCreatorId {
  return !!hasGroupCreatorId_;
}
- (void) setHasGroupCreatorId:(BOOL) value_ {
  hasGroupCreatorId_ = !!value_;
}
@synthesize groupCreatorId;
- (BOOL) hasGroupType {
  return !!hasGroupType_;
}
- (void) setHasGroupType:(BOOL) value_ {
  hasGroupType_ = !!value_;
}
@synthesize groupType;
@synthesize groupMemberListArray;
@dynamic groupMemberList;
- (void) dealloc {
  self.groupId = nil;
  self.groupName = nil;
  self.groupAvatar = nil;
  self.groupCreatorId = nil;
  self.groupMemberListArray = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 259;
    self.results = 0;
    self.groupId = @"";
    self.groupName = @"";
    self.groupAvatar = @"";
    self.groupCreatorId = @"";
    self.groupType = GroupTypeNormalGroup;
  }
  return self;
}
static C2MGroupUserListRsp* defaultC2MGroupUserListRspInstance = nil;
+ (void) initialize {
  if (self == [C2MGroupUserListRsp class]) {
    defaultC2MGroupUserListRspInstance = [[C2MGroupUserListRsp alloc] init];
  }
}
+ (C2MGroupUserListRsp*) defaultInstance {
  return defaultC2MGroupUserListRspInstance;
}
- (C2MGroupUserListRsp*) defaultInstance {
  return defaultC2MGroupUserListRspInstance;
}
- (NSArray *)groupMemberList {
  return groupMemberListArray;
}
- (NSString*)groupMemberListAtIndex:(NSUInteger)index {
  return [groupMemberListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasResults) {
    return NO;
  }
  if (!self.hasGroupId) {
    return NO;
  }
  if (!self.hasGroupName) {
    return NO;
  }
  if (!self.hasGroupAvatar) {
    return NO;
  }
  if (!self.hasGroupCreatorId) {
    return NO;
  }
  if (!self.hasGroupType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasResults) {
    [output writeUInt32:2 value:self.results];
  }
  if (self.hasGroupId) {
    [output writeString:3 value:self.groupId];
  }
  if (self.hasGroupName) {
    [output writeString:4 value:self.groupName];
  }
  if (self.hasGroupAvatar) {
    [output writeString:5 value:self.groupAvatar];
  }
  if (self.hasGroupCreatorId) {
    [output writeString:6 value:self.groupCreatorId];
  }
  if (self.hasGroupType) {
    [output writeEnum:7 value:self.groupType];
  }
  [self.groupMemberListArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:8 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasResults) {
    size_ += computeUInt32Size(2, self.results);
  }
  if (self.hasGroupId) {
    size_ += computeStringSize(3, self.groupId);
  }
  if (self.hasGroupName) {
    size_ += computeStringSize(4, self.groupName);
  }
  if (self.hasGroupAvatar) {
    size_ += computeStringSize(5, self.groupAvatar);
  }
  if (self.hasGroupCreatorId) {
    size_ += computeStringSize(6, self.groupCreatorId);
  }
  if (self.hasGroupType) {
    size_ += computeEnumSize(7, self.groupType);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.groupMemberListArray.count;
    [self.groupMemberListArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MGroupUserListRsp*) parseFromData:(NSData*) data {
  return (C2MGroupUserListRsp*)[[[C2MGroupUserListRsp builder] mergeFromData:data] build];
}
+ (C2MGroupUserListRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupUserListRsp*)[[[C2MGroupUserListRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupUserListRsp*) parseFromInputStream:(NSInputStream*) input {
  return (C2MGroupUserListRsp*)[[[C2MGroupUserListRsp builder] mergeFromInputStream:input] build];
}
+ (C2MGroupUserListRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupUserListRsp*)[[[C2MGroupUserListRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupUserListRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MGroupUserListRsp*)[[[C2MGroupUserListRsp builder] mergeFromCodedInputStream:input] build];
}
+ (C2MGroupUserListRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupUserListRsp*)[[[C2MGroupUserListRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupUserListRspBuilder*) builder {
  return [[C2MGroupUserListRspBuilder alloc] init];
}
+ (C2MGroupUserListRspBuilder*) builderWithPrototype:(C2MGroupUserListRsp*) prototype {
  return [[C2MGroupUserListRsp builder] mergeFrom:prototype];
}
- (C2MGroupUserListRspBuilder*) builder {
  return [C2MGroupUserListRsp builder];
}
- (C2MGroupUserListRspBuilder*) toBuilder {
  return [C2MGroupUserListRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasResults) {
    [output appendFormat:@"%@%@: %@\n", indent, @"results", [NSNumber numberWithInteger:self.results]];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", self.groupId];
  }
  if (self.hasGroupName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupName", self.groupName];
  }
  if (self.hasGroupAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupAvatar", self.groupAvatar];
  }
  if (self.hasGroupCreatorId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupCreatorId", self.groupCreatorId];
  }
  if (self.hasGroupType) {
    [output appendFormat:@"%@%@: %d\n", indent, @"groupType", self.groupType];
  }
  [self.groupMemberListArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupMemberList", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MGroupUserListRsp class]]) {
    return NO;
  }
  C2MGroupUserListRsp *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasResults == otherMessage.hasResults &&
      (!self.hasResults || self.results == otherMessage.results) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || [self.groupId isEqual:otherMessage.groupId]) &&
      self.hasGroupName == otherMessage.hasGroupName &&
      (!self.hasGroupName || [self.groupName isEqual:otherMessage.groupName]) &&
      self.hasGroupAvatar == otherMessage.hasGroupAvatar &&
      (!self.hasGroupAvatar || [self.groupAvatar isEqual:otherMessage.groupAvatar]) &&
      self.hasGroupCreatorId == otherMessage.hasGroupCreatorId &&
      (!self.hasGroupCreatorId || [self.groupCreatorId isEqual:otherMessage.groupCreatorId]) &&
      self.hasGroupType == otherMessage.hasGroupType &&
      (!self.hasGroupType || self.groupType == otherMessage.groupType) &&
      [self.groupMemberListArray isEqualToArray:otherMessage.groupMemberListArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasResults) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.results] hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [self.groupId hash];
  }
  if (self.hasGroupName) {
    hashCode = hashCode * 31 + [self.groupName hash];
  }
  if (self.hasGroupAvatar) {
    hashCode = hashCode * 31 + [self.groupAvatar hash];
  }
  if (self.hasGroupCreatorId) {
    hashCode = hashCode * 31 + [self.groupCreatorId hash];
  }
  if (self.hasGroupType) {
    hashCode = hashCode * 31 + self.groupType;
  }
  [self.groupMemberListArray enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MGroupUserListRspBuilder()
@property (strong) C2MGroupUserListRsp* result;
@end

@implementation C2MGroupUserListRspBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MGroupUserListRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MGroupUserListRspBuilder*) clear {
  self.result = [[C2MGroupUserListRsp alloc] init];
  return self;
}
- (C2MGroupUserListRspBuilder*) clone {
  return [C2MGroupUserListRsp builderWithPrototype:result];
}
- (C2MGroupUserListRsp*) defaultInstance {
  return [C2MGroupUserListRsp defaultInstance];
}
- (C2MGroupUserListRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MGroupUserListRsp*) buildPartial {
  C2MGroupUserListRsp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MGroupUserListRspBuilder*) mergeFrom:(C2MGroupUserListRsp*) other {
  if (other == [C2MGroupUserListRsp defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasResults) {
    [self setResults:other.results];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasGroupName) {
    [self setGroupName:other.groupName];
  }
  if (other.hasGroupAvatar) {
    [self setGroupAvatar:other.groupAvatar];
  }
  if (other.hasGroupCreatorId) {
    [self setGroupCreatorId:other.groupCreatorId];
  }
  if (other.hasGroupType) {
    [self setGroupType:other.groupType];
  }
  if (other.groupMemberListArray.count > 0) {
    if (result.groupMemberListArray == nil) {
      result.groupMemberListArray = [[NSMutableArray alloc] initWithArray:other.groupMemberListArray];
    } else {
      [result.groupMemberListArray addObjectsFromArray:other.groupMemberListArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MGroupUserListRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MGroupUserListRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 16: {
        [self setResults:[input readUInt32]];
        break;
      }
      case 26: {
        [self setGroupId:[input readString]];
        break;
      }
      case 34: {
        [self setGroupName:[input readString]];
        break;
      }
      case 42: {
        [self setGroupAvatar:[input readString]];
        break;
      }
      case 50: {
        [self setGroupCreatorId:[input readString]];
        break;
      }
      case 56: {
        GroupType value = (GroupType)[input readEnum];
        if (GroupTypeIsValidValue(value)) {
          [self setGroupType:value];
        } else {
          [unknownFields mergeVarintField:7 value:value];
        }
        break;
      }
      case 66: {
        [self addGroupMemberList:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MGroupUserListRspBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MGroupUserListRspBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 259;
  return self;
}
- (BOOL) hasResults {
  return result.hasResults;
}
- (UInt32) results {
  return result.results;
}
- (C2MGroupUserListRspBuilder*) setResults:(UInt32) value {
  result.hasResults = YES;
  result.results = value;
  return self;
}
- (C2MGroupUserListRspBuilder*) clearResults {
  result.hasResults = NO;
  result.results = 0;
  return self;
}
- (BOOL) hasGroupId {
  return result.hasGroupId;
}
- (NSString*) groupId {
  return result.groupId;
}
- (C2MGroupUserListRspBuilder*) setGroupId:(NSString*) value {
  result.hasGroupId = YES;
  result.groupId = value;
  return self;
}
- (C2MGroupUserListRspBuilder*) clearGroupId {
  result.hasGroupId = NO;
  result.groupId = @"";
  return self;
}
- (BOOL) hasGroupName {
  return result.hasGroupName;
}
- (NSString*) groupName {
  return result.groupName;
}
- (C2MGroupUserListRspBuilder*) setGroupName:(NSString*) value {
  result.hasGroupName = YES;
  result.groupName = value;
  return self;
}
- (C2MGroupUserListRspBuilder*) clearGroupName {
  result.hasGroupName = NO;
  result.groupName = @"";
  return self;
}
- (BOOL) hasGroupAvatar {
  return result.hasGroupAvatar;
}
- (NSString*) groupAvatar {
  return result.groupAvatar;
}
- (C2MGroupUserListRspBuilder*) setGroupAvatar:(NSString*) value {
  result.hasGroupAvatar = YES;
  result.groupAvatar = value;
  return self;
}
- (C2MGroupUserListRspBuilder*) clearGroupAvatar {
  result.hasGroupAvatar = NO;
  result.groupAvatar = @"";
  return self;
}
- (BOOL) hasGroupCreatorId {
  return result.hasGroupCreatorId;
}
- (NSString*) groupCreatorId {
  return result.groupCreatorId;
}
- (C2MGroupUserListRspBuilder*) setGroupCreatorId:(NSString*) value {
  result.hasGroupCreatorId = YES;
  result.groupCreatorId = value;
  return self;
}
- (C2MGroupUserListRspBuilder*) clearGroupCreatorId {
  result.hasGroupCreatorId = NO;
  result.groupCreatorId = @"";
  return self;
}
- (BOOL) hasGroupType {
  return result.hasGroupType;
}
- (GroupType) groupType {
  return result.groupType;
}
- (C2MGroupUserListRspBuilder*) setGroupType:(GroupType) value {
  result.hasGroupType = YES;
  result.groupType = value;
  return self;
}
- (C2MGroupUserListRspBuilder*) clearGroupType {
  result.hasGroupType = NO;
  result.groupType = GroupTypeNormalGroup;
  return self;
}
- (NSMutableArray *)groupMemberList {
  return result.groupMemberListArray;
}
- (NSString*)groupMemberListAtIndex:(NSUInteger)index {
  return [result groupMemberListAtIndex:index];
}
- (C2MGroupUserListRspBuilder *)addGroupMemberList:(NSString*)value {
  if (result.groupMemberListArray == nil) {
    result.groupMemberListArray = [[NSMutableArray alloc]init];
  }
  [result.groupMemberListArray addObject:value];
  return self;
}
- (C2MGroupUserListRspBuilder *)setGroupMemberListArray:(NSArray *)array {
  result.groupMemberListArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (C2MGroupUserListRspBuilder *)clearGroupMemberList {
  result.groupMemberListArray = nil;
  return self;
}
@end

@interface C2MGroupUnReadMsgCntReq ()
@property SInt32 cmdId;
@end

@implementation C2MGroupUnReadMsgCntReq

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (void) dealloc {
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 260;
  }
  return self;
}
static C2MGroupUnReadMsgCntReq* defaultC2MGroupUnReadMsgCntReqInstance = nil;
+ (void) initialize {
  if (self == [C2MGroupUnReadMsgCntReq class]) {
    defaultC2MGroupUnReadMsgCntReqInstance = [[C2MGroupUnReadMsgCntReq alloc] init];
  }
}
+ (C2MGroupUnReadMsgCntReq*) defaultInstance {
  return defaultC2MGroupUnReadMsgCntReqInstance;
}
- (C2MGroupUnReadMsgCntReq*) defaultInstance {
  return defaultC2MGroupUnReadMsgCntReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MGroupUnReadMsgCntReq*) parseFromData:(NSData*) data {
  return (C2MGroupUnReadMsgCntReq*)[[[C2MGroupUnReadMsgCntReq builder] mergeFromData:data] build];
}
+ (C2MGroupUnReadMsgCntReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupUnReadMsgCntReq*)[[[C2MGroupUnReadMsgCntReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupUnReadMsgCntReq*) parseFromInputStream:(NSInputStream*) input {
  return (C2MGroupUnReadMsgCntReq*)[[[C2MGroupUnReadMsgCntReq builder] mergeFromInputStream:input] build];
}
+ (C2MGroupUnReadMsgCntReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupUnReadMsgCntReq*)[[[C2MGroupUnReadMsgCntReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupUnReadMsgCntReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MGroupUnReadMsgCntReq*)[[[C2MGroupUnReadMsgCntReq builder] mergeFromCodedInputStream:input] build];
}
+ (C2MGroupUnReadMsgCntReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupUnReadMsgCntReq*)[[[C2MGroupUnReadMsgCntReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupUnReadMsgCntReqBuilder*) builder {
  return [[C2MGroupUnReadMsgCntReqBuilder alloc] init];
}
+ (C2MGroupUnReadMsgCntReqBuilder*) builderWithPrototype:(C2MGroupUnReadMsgCntReq*) prototype {
  return [[C2MGroupUnReadMsgCntReq builder] mergeFrom:prototype];
}
- (C2MGroupUnReadMsgCntReqBuilder*) builder {
  return [C2MGroupUnReadMsgCntReq builder];
}
- (C2MGroupUnReadMsgCntReqBuilder*) toBuilder {
  return [C2MGroupUnReadMsgCntReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MGroupUnReadMsgCntReq class]]) {
    return NO;
  }
  C2MGroupUnReadMsgCntReq *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MGroupUnReadMsgCntReqBuilder()
@property (strong) C2MGroupUnReadMsgCntReq* result;
@end

@implementation C2MGroupUnReadMsgCntReqBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MGroupUnReadMsgCntReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MGroupUnReadMsgCntReqBuilder*) clear {
  self.result = [[C2MGroupUnReadMsgCntReq alloc] init];
  return self;
}
- (C2MGroupUnReadMsgCntReqBuilder*) clone {
  return [C2MGroupUnReadMsgCntReq builderWithPrototype:result];
}
- (C2MGroupUnReadMsgCntReq*) defaultInstance {
  return [C2MGroupUnReadMsgCntReq defaultInstance];
}
- (C2MGroupUnReadMsgCntReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MGroupUnReadMsgCntReq*) buildPartial {
  C2MGroupUnReadMsgCntReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MGroupUnReadMsgCntReqBuilder*) mergeFrom:(C2MGroupUnReadMsgCntReq*) other {
  if (other == [C2MGroupUnReadMsgCntReq defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MGroupUnReadMsgCntReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MGroupUnReadMsgCntReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MGroupUnReadMsgCntReqBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MGroupUnReadMsgCntReqBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 260;
  return self;
}
@end

@interface C2MGroupUnReadMsgCntRsp ()
@property SInt32 cmdId;
@property (strong) NSMutableArray * groupUnreadMsgCntArray;
@end

@implementation C2MGroupUnReadMsgCntRsp

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
@synthesize groupUnreadMsgCntArray;
@dynamic groupUnreadMsgCnt;
- (void) dealloc {
  self.groupUnreadMsgCntArray = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 261;
  }
  return self;
}
static C2MGroupUnReadMsgCntRsp* defaultC2MGroupUnReadMsgCntRspInstance = nil;
+ (void) initialize {
  if (self == [C2MGroupUnReadMsgCntRsp class]) {
    defaultC2MGroupUnReadMsgCntRspInstance = [[C2MGroupUnReadMsgCntRsp alloc] init];
  }
}
+ (C2MGroupUnReadMsgCntRsp*) defaultInstance {
  return defaultC2MGroupUnReadMsgCntRspInstance;
}
- (C2MGroupUnReadMsgCntRsp*) defaultInstance {
  return defaultC2MGroupUnReadMsgCntRspInstance;
}
- (NSArray *)groupUnreadMsgCnt {
  return groupUnreadMsgCntArray;
}
- (ClientGroupUnReadCnt*)groupUnreadMsgCntAtIndex:(NSUInteger)index {
  return [groupUnreadMsgCntArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitgroupUnreadMsgCnt = YES;
   [self.groupUnreadMsgCnt enumerateObjectsUsingBlock:^(ClientGroupUnReadCnt *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitgroupUnreadMsgCnt = NO;
      *stop = YES;
    }
  }];
  if (!isInitgroupUnreadMsgCnt) return isInitgroupUnreadMsgCnt;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  [self.groupUnreadMsgCntArray enumerateObjectsUsingBlock:^(ClientGroupUnReadCnt *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  [self.groupUnreadMsgCntArray enumerateObjectsUsingBlock:^(ClientGroupUnReadCnt *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MGroupUnReadMsgCntRsp*) parseFromData:(NSData*) data {
  return (C2MGroupUnReadMsgCntRsp*)[[[C2MGroupUnReadMsgCntRsp builder] mergeFromData:data] build];
}
+ (C2MGroupUnReadMsgCntRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupUnReadMsgCntRsp*)[[[C2MGroupUnReadMsgCntRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupUnReadMsgCntRsp*) parseFromInputStream:(NSInputStream*) input {
  return (C2MGroupUnReadMsgCntRsp*)[[[C2MGroupUnReadMsgCntRsp builder] mergeFromInputStream:input] build];
}
+ (C2MGroupUnReadMsgCntRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupUnReadMsgCntRsp*)[[[C2MGroupUnReadMsgCntRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupUnReadMsgCntRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MGroupUnReadMsgCntRsp*)[[[C2MGroupUnReadMsgCntRsp builder] mergeFromCodedInputStream:input] build];
}
+ (C2MGroupUnReadMsgCntRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupUnReadMsgCntRsp*)[[[C2MGroupUnReadMsgCntRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupUnReadMsgCntRspBuilder*) builder {
  return [[C2MGroupUnReadMsgCntRspBuilder alloc] init];
}
+ (C2MGroupUnReadMsgCntRspBuilder*) builderWithPrototype:(C2MGroupUnReadMsgCntRsp*) prototype {
  return [[C2MGroupUnReadMsgCntRsp builder] mergeFrom:prototype];
}
- (C2MGroupUnReadMsgCntRspBuilder*) builder {
  return [C2MGroupUnReadMsgCntRsp builder];
}
- (C2MGroupUnReadMsgCntRspBuilder*) toBuilder {
  return [C2MGroupUnReadMsgCntRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  [self.groupUnreadMsgCntArray enumerateObjectsUsingBlock:^(ClientGroupUnReadCnt *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"groupUnreadMsgCnt"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MGroupUnReadMsgCntRsp class]]) {
    return NO;
  }
  C2MGroupUnReadMsgCntRsp *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      [self.groupUnreadMsgCntArray isEqualToArray:otherMessage.groupUnreadMsgCntArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  [self.groupUnreadMsgCntArray enumerateObjectsUsingBlock:^(ClientGroupUnReadCnt *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MGroupUnReadMsgCntRspBuilder()
@property (strong) C2MGroupUnReadMsgCntRsp* result;
@end

@implementation C2MGroupUnReadMsgCntRspBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MGroupUnReadMsgCntRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MGroupUnReadMsgCntRspBuilder*) clear {
  self.result = [[C2MGroupUnReadMsgCntRsp alloc] init];
  return self;
}
- (C2MGroupUnReadMsgCntRspBuilder*) clone {
  return [C2MGroupUnReadMsgCntRsp builderWithPrototype:result];
}
- (C2MGroupUnReadMsgCntRsp*) defaultInstance {
  return [C2MGroupUnReadMsgCntRsp defaultInstance];
}
- (C2MGroupUnReadMsgCntRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MGroupUnReadMsgCntRsp*) buildPartial {
  C2MGroupUnReadMsgCntRsp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MGroupUnReadMsgCntRspBuilder*) mergeFrom:(C2MGroupUnReadMsgCntRsp*) other {
  if (other == [C2MGroupUnReadMsgCntRsp defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.groupUnreadMsgCntArray.count > 0) {
    if (result.groupUnreadMsgCntArray == nil) {
      result.groupUnreadMsgCntArray = [[NSMutableArray alloc] initWithArray:other.groupUnreadMsgCntArray];
    } else {
      [result.groupUnreadMsgCntArray addObjectsFromArray:other.groupUnreadMsgCntArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MGroupUnReadMsgCntRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MGroupUnReadMsgCntRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 18: {
        ClientGroupUnReadCntBuilder* subBuilder = [ClientGroupUnReadCnt builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroupUnreadMsgCnt:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MGroupUnReadMsgCntRspBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MGroupUnReadMsgCntRspBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 261;
  return self;
}
- (NSMutableArray *)groupUnreadMsgCnt {
  return result.groupUnreadMsgCntArray;
}
- (ClientGroupUnReadCnt*)groupUnreadMsgCntAtIndex:(NSUInteger)index {
  return [result groupUnreadMsgCntAtIndex:index];
}
- (C2MGroupUnReadMsgCntRspBuilder *)addGroupUnreadMsgCnt:(ClientGroupUnReadCnt*)value {
  if (result.groupUnreadMsgCntArray == nil) {
    result.groupUnreadMsgCntArray = [[NSMutableArray alloc]init];
  }
  [result.groupUnreadMsgCntArray addObject:value];
  return self;
}
- (C2MGroupUnReadMsgCntRspBuilder *)setGroupUnreadMsgCntArray:(NSArray *)array {
  result.groupUnreadMsgCntArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (C2MGroupUnReadMsgCntRspBuilder *)clearGroupUnreadMsgCnt {
  result.groupUnreadMsgCntArray = nil;
  return self;
}
@end

@interface C2MGroupUnReadMsgReq ()
@property SInt32 cmdId;
@property (strong) NSString* groupId;
@end

@implementation C2MGroupUnReadMsgReq

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) value_ {
  hasGroupId_ = !!value_;
}
@synthesize groupId;
- (void) dealloc {
  self.groupId = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 262;
    self.groupId = @"";
  }
  return self;
}
static C2MGroupUnReadMsgReq* defaultC2MGroupUnReadMsgReqInstance = nil;
+ (void) initialize {
  if (self == [C2MGroupUnReadMsgReq class]) {
    defaultC2MGroupUnReadMsgReqInstance = [[C2MGroupUnReadMsgReq alloc] init];
  }
}
+ (C2MGroupUnReadMsgReq*) defaultInstance {
  return defaultC2MGroupUnReadMsgReqInstance;
}
- (C2MGroupUnReadMsgReq*) defaultInstance {
  return defaultC2MGroupUnReadMsgReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasGroupId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasGroupId) {
    [output writeString:2 value:self.groupId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasGroupId) {
    size_ += computeStringSize(2, self.groupId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MGroupUnReadMsgReq*) parseFromData:(NSData*) data {
  return (C2MGroupUnReadMsgReq*)[[[C2MGroupUnReadMsgReq builder] mergeFromData:data] build];
}
+ (C2MGroupUnReadMsgReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupUnReadMsgReq*)[[[C2MGroupUnReadMsgReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupUnReadMsgReq*) parseFromInputStream:(NSInputStream*) input {
  return (C2MGroupUnReadMsgReq*)[[[C2MGroupUnReadMsgReq builder] mergeFromInputStream:input] build];
}
+ (C2MGroupUnReadMsgReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupUnReadMsgReq*)[[[C2MGroupUnReadMsgReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupUnReadMsgReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MGroupUnReadMsgReq*)[[[C2MGroupUnReadMsgReq builder] mergeFromCodedInputStream:input] build];
}
+ (C2MGroupUnReadMsgReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupUnReadMsgReq*)[[[C2MGroupUnReadMsgReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupUnReadMsgReqBuilder*) builder {
  return [[C2MGroupUnReadMsgReqBuilder alloc] init];
}
+ (C2MGroupUnReadMsgReqBuilder*) builderWithPrototype:(C2MGroupUnReadMsgReq*) prototype {
  return [[C2MGroupUnReadMsgReq builder] mergeFrom:prototype];
}
- (C2MGroupUnReadMsgReqBuilder*) builder {
  return [C2MGroupUnReadMsgReq builder];
}
- (C2MGroupUnReadMsgReqBuilder*) toBuilder {
  return [C2MGroupUnReadMsgReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", self.groupId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MGroupUnReadMsgReq class]]) {
    return NO;
  }
  C2MGroupUnReadMsgReq *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || [self.groupId isEqual:otherMessage.groupId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [self.groupId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MGroupUnReadMsgReqBuilder()
@property (strong) C2MGroupUnReadMsgReq* result;
@end

@implementation C2MGroupUnReadMsgReqBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MGroupUnReadMsgReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MGroupUnReadMsgReqBuilder*) clear {
  self.result = [[C2MGroupUnReadMsgReq alloc] init];
  return self;
}
- (C2MGroupUnReadMsgReqBuilder*) clone {
  return [C2MGroupUnReadMsgReq builderWithPrototype:result];
}
- (C2MGroupUnReadMsgReq*) defaultInstance {
  return [C2MGroupUnReadMsgReq defaultInstance];
}
- (C2MGroupUnReadMsgReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MGroupUnReadMsgReq*) buildPartial {
  C2MGroupUnReadMsgReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MGroupUnReadMsgReqBuilder*) mergeFrom:(C2MGroupUnReadMsgReq*) other {
  if (other == [C2MGroupUnReadMsgReq defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MGroupUnReadMsgReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MGroupUnReadMsgReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 18: {
        [self setGroupId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MGroupUnReadMsgReqBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MGroupUnReadMsgReqBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 262;
  return self;
}
- (BOOL) hasGroupId {
  return result.hasGroupId;
}
- (NSString*) groupId {
  return result.groupId;
}
- (C2MGroupUnReadMsgReqBuilder*) setGroupId:(NSString*) value {
  result.hasGroupId = YES;
  result.groupId = value;
  return self;
}
- (C2MGroupUnReadMsgReqBuilder*) clearGroupId {
  result.hasGroupId = NO;
  result.groupId = @"";
  return self;
}
@end

@interface C2MGroupHistoryMsgReq ()
@property SInt32 cmdId;
@property (strong) NSString* groupId;
@property UInt32 msgOffset;
@property UInt32 msgCount;
@end

@implementation C2MGroupHistoryMsgReq

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) value_ {
  hasGroupId_ = !!value_;
}
@synthesize groupId;
- (BOOL) hasMsgOffset {
  return !!hasMsgOffset_;
}
- (void) setHasMsgOffset:(BOOL) value_ {
  hasMsgOffset_ = !!value_;
}
@synthesize msgOffset;
- (BOOL) hasMsgCount {
  return !!hasMsgCount_;
}
- (void) setHasMsgCount:(BOOL) value_ {
  hasMsgCount_ = !!value_;
}
@synthesize msgCount;
- (void) dealloc {
  self.groupId = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 263;
    self.groupId = @"";
    self.msgOffset = 0;
    self.msgCount = 0;
  }
  return self;
}
static C2MGroupHistoryMsgReq* defaultC2MGroupHistoryMsgReqInstance = nil;
+ (void) initialize {
  if (self == [C2MGroupHistoryMsgReq class]) {
    defaultC2MGroupHistoryMsgReqInstance = [[C2MGroupHistoryMsgReq alloc] init];
  }
}
+ (C2MGroupHistoryMsgReq*) defaultInstance {
  return defaultC2MGroupHistoryMsgReqInstance;
}
- (C2MGroupHistoryMsgReq*) defaultInstance {
  return defaultC2MGroupHistoryMsgReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasGroupId) {
    return NO;
  }
  if (!self.hasMsgOffset) {
    return NO;
  }
  if (!self.hasMsgCount) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasGroupId) {
    [output writeString:2 value:self.groupId];
  }
  if (self.hasMsgOffset) {
    [output writeUInt32:3 value:self.msgOffset];
  }
  if (self.hasMsgCount) {
    [output writeUInt32:4 value:self.msgCount];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasGroupId) {
    size_ += computeStringSize(2, self.groupId);
  }
  if (self.hasMsgOffset) {
    size_ += computeUInt32Size(3, self.msgOffset);
  }
  if (self.hasMsgCount) {
    size_ += computeUInt32Size(4, self.msgCount);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MGroupHistoryMsgReq*) parseFromData:(NSData*) data {
  return (C2MGroupHistoryMsgReq*)[[[C2MGroupHistoryMsgReq builder] mergeFromData:data] build];
}
+ (C2MGroupHistoryMsgReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupHistoryMsgReq*)[[[C2MGroupHistoryMsgReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupHistoryMsgReq*) parseFromInputStream:(NSInputStream*) input {
  return (C2MGroupHistoryMsgReq*)[[[C2MGroupHistoryMsgReq builder] mergeFromInputStream:input] build];
}
+ (C2MGroupHistoryMsgReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupHistoryMsgReq*)[[[C2MGroupHistoryMsgReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupHistoryMsgReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MGroupHistoryMsgReq*)[[[C2MGroupHistoryMsgReq builder] mergeFromCodedInputStream:input] build];
}
+ (C2MGroupHistoryMsgReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupHistoryMsgReq*)[[[C2MGroupHistoryMsgReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupHistoryMsgReqBuilder*) builder {
  return [[C2MGroupHistoryMsgReqBuilder alloc] init];
}
+ (C2MGroupHistoryMsgReqBuilder*) builderWithPrototype:(C2MGroupHistoryMsgReq*) prototype {
  return [[C2MGroupHistoryMsgReq builder] mergeFrom:prototype];
}
- (C2MGroupHistoryMsgReqBuilder*) builder {
  return [C2MGroupHistoryMsgReq builder];
}
- (C2MGroupHistoryMsgReqBuilder*) toBuilder {
  return [C2MGroupHistoryMsgReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", self.groupId];
  }
  if (self.hasMsgOffset) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgOffset", [NSNumber numberWithInteger:self.msgOffset]];
  }
  if (self.hasMsgCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgCount", [NSNumber numberWithInteger:self.msgCount]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MGroupHistoryMsgReq class]]) {
    return NO;
  }
  C2MGroupHistoryMsgReq *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || [self.groupId isEqual:otherMessage.groupId]) &&
      self.hasMsgOffset == otherMessage.hasMsgOffset &&
      (!self.hasMsgOffset || self.msgOffset == otherMessage.msgOffset) &&
      self.hasMsgCount == otherMessage.hasMsgCount &&
      (!self.hasMsgCount || self.msgCount == otherMessage.msgCount) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [self.groupId hash];
  }
  if (self.hasMsgOffset) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.msgOffset] hash];
  }
  if (self.hasMsgCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.msgCount] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MGroupHistoryMsgReqBuilder()
@property (strong) C2MGroupHistoryMsgReq* result;
@end

@implementation C2MGroupHistoryMsgReqBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MGroupHistoryMsgReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MGroupHistoryMsgReqBuilder*) clear {
  self.result = [[C2MGroupHistoryMsgReq alloc] init];
  return self;
}
- (C2MGroupHistoryMsgReqBuilder*) clone {
  return [C2MGroupHistoryMsgReq builderWithPrototype:result];
}
- (C2MGroupHistoryMsgReq*) defaultInstance {
  return [C2MGroupHistoryMsgReq defaultInstance];
}
- (C2MGroupHistoryMsgReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MGroupHistoryMsgReq*) buildPartial {
  C2MGroupHistoryMsgReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MGroupHistoryMsgReqBuilder*) mergeFrom:(C2MGroupHistoryMsgReq*) other {
  if (other == [C2MGroupHistoryMsgReq defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasMsgOffset) {
    [self setMsgOffset:other.msgOffset];
  }
  if (other.hasMsgCount) {
    [self setMsgCount:other.msgCount];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MGroupHistoryMsgReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MGroupHistoryMsgReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 18: {
        [self setGroupId:[input readString]];
        break;
      }
      case 24: {
        [self setMsgOffset:[input readUInt32]];
        break;
      }
      case 32: {
        [self setMsgCount:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MGroupHistoryMsgReqBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MGroupHistoryMsgReqBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 263;
  return self;
}
- (BOOL) hasGroupId {
  return result.hasGroupId;
}
- (NSString*) groupId {
  return result.groupId;
}
- (C2MGroupHistoryMsgReqBuilder*) setGroupId:(NSString*) value {
  result.hasGroupId = YES;
  result.groupId = value;
  return self;
}
- (C2MGroupHistoryMsgReqBuilder*) clearGroupId {
  result.hasGroupId = NO;
  result.groupId = @"";
  return self;
}
- (BOOL) hasMsgOffset {
  return result.hasMsgOffset;
}
- (UInt32) msgOffset {
  return result.msgOffset;
}
- (C2MGroupHistoryMsgReqBuilder*) setMsgOffset:(UInt32) value {
  result.hasMsgOffset = YES;
  result.msgOffset = value;
  return self;
}
- (C2MGroupHistoryMsgReqBuilder*) clearMsgOffset {
  result.hasMsgOffset = NO;
  result.msgOffset = 0;
  return self;
}
- (BOOL) hasMsgCount {
  return result.hasMsgCount;
}
- (UInt32) msgCount {
  return result.msgCount;
}
- (C2MGroupHistoryMsgReqBuilder*) setMsgCount:(UInt32) value {
  result.hasMsgCount = YES;
  result.msgCount = value;
  return self;
}
- (C2MGroupHistoryMsgReqBuilder*) clearMsgCount {
  result.hasMsgCount = NO;
  result.msgCount = 0;
  return self;
}
@end

@interface C2MGroupMsgListRsp ()
@property SInt32 cmdId;
@property (strong) NSString* groupId;
@property (strong) NSMutableArray * groupMsgListArray;
@end

@implementation C2MGroupMsgListRsp

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) value_ {
  hasGroupId_ = !!value_;
}
@synthesize groupId;
@synthesize groupMsgListArray;
@dynamic groupMsgList;
- (void) dealloc {
  self.groupId = nil;
  self.groupMsgListArray = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 264;
    self.groupId = @"";
  }
  return self;
}
static C2MGroupMsgListRsp* defaultC2MGroupMsgListRspInstance = nil;
+ (void) initialize {
  if (self == [C2MGroupMsgListRsp class]) {
    defaultC2MGroupMsgListRspInstance = [[C2MGroupMsgListRsp alloc] init];
  }
}
+ (C2MGroupMsgListRsp*) defaultInstance {
  return defaultC2MGroupMsgListRspInstance;
}
- (C2MGroupMsgListRsp*) defaultInstance {
  return defaultC2MGroupMsgListRspInstance;
}
- (NSArray *)groupMsgList {
  return groupMsgListArray;
}
- (ClientGroupMsg*)groupMsgListAtIndex:(NSUInteger)index {
  return [groupMsgListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasGroupId) {
    return NO;
  }
  __block BOOL isInitgroupMsgList = YES;
   [self.groupMsgList enumerateObjectsUsingBlock:^(ClientGroupMsg *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitgroupMsgList = NO;
      *stop = YES;
    }
  }];
  if (!isInitgroupMsgList) return isInitgroupMsgList;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasGroupId) {
    [output writeString:2 value:self.groupId];
  }
  [self.groupMsgListArray enumerateObjectsUsingBlock:^(ClientGroupMsg *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasGroupId) {
    size_ += computeStringSize(2, self.groupId);
  }
  [self.groupMsgListArray enumerateObjectsUsingBlock:^(ClientGroupMsg *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MGroupMsgListRsp*) parseFromData:(NSData*) data {
  return (C2MGroupMsgListRsp*)[[[C2MGroupMsgListRsp builder] mergeFromData:data] build];
}
+ (C2MGroupMsgListRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupMsgListRsp*)[[[C2MGroupMsgListRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupMsgListRsp*) parseFromInputStream:(NSInputStream*) input {
  return (C2MGroupMsgListRsp*)[[[C2MGroupMsgListRsp builder] mergeFromInputStream:input] build];
}
+ (C2MGroupMsgListRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupMsgListRsp*)[[[C2MGroupMsgListRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupMsgListRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MGroupMsgListRsp*)[[[C2MGroupMsgListRsp builder] mergeFromCodedInputStream:input] build];
}
+ (C2MGroupMsgListRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupMsgListRsp*)[[[C2MGroupMsgListRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupMsgListRspBuilder*) builder {
  return [[C2MGroupMsgListRspBuilder alloc] init];
}
+ (C2MGroupMsgListRspBuilder*) builderWithPrototype:(C2MGroupMsgListRsp*) prototype {
  return [[C2MGroupMsgListRsp builder] mergeFrom:prototype];
}
- (C2MGroupMsgListRspBuilder*) builder {
  return [C2MGroupMsgListRsp builder];
}
- (C2MGroupMsgListRspBuilder*) toBuilder {
  return [C2MGroupMsgListRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", self.groupId];
  }
  [self.groupMsgListArray enumerateObjectsUsingBlock:^(ClientGroupMsg *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"groupMsgList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MGroupMsgListRsp class]]) {
    return NO;
  }
  C2MGroupMsgListRsp *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || [self.groupId isEqual:otherMessage.groupId]) &&
      [self.groupMsgListArray isEqualToArray:otherMessage.groupMsgListArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [self.groupId hash];
  }
  [self.groupMsgListArray enumerateObjectsUsingBlock:^(ClientGroupMsg *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MGroupMsgListRspBuilder()
@property (strong) C2MGroupMsgListRsp* result;
@end

@implementation C2MGroupMsgListRspBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MGroupMsgListRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MGroupMsgListRspBuilder*) clear {
  self.result = [[C2MGroupMsgListRsp alloc] init];
  return self;
}
- (C2MGroupMsgListRspBuilder*) clone {
  return [C2MGroupMsgListRsp builderWithPrototype:result];
}
- (C2MGroupMsgListRsp*) defaultInstance {
  return [C2MGroupMsgListRsp defaultInstance];
}
- (C2MGroupMsgListRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MGroupMsgListRsp*) buildPartial {
  C2MGroupMsgListRsp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MGroupMsgListRspBuilder*) mergeFrom:(C2MGroupMsgListRsp*) other {
  if (other == [C2MGroupMsgListRsp defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.groupMsgListArray.count > 0) {
    if (result.groupMsgListArray == nil) {
      result.groupMsgListArray = [[NSMutableArray alloc] initWithArray:other.groupMsgListArray];
    } else {
      [result.groupMsgListArray addObjectsFromArray:other.groupMsgListArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MGroupMsgListRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MGroupMsgListRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 18: {
        [self setGroupId:[input readString]];
        break;
      }
      case 26: {
        ClientGroupMsgBuilder* subBuilder = [ClientGroupMsg builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroupMsgList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MGroupMsgListRspBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MGroupMsgListRspBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 264;
  return self;
}
- (BOOL) hasGroupId {
  return result.hasGroupId;
}
- (NSString*) groupId {
  return result.groupId;
}
- (C2MGroupMsgListRspBuilder*) setGroupId:(NSString*) value {
  result.hasGroupId = YES;
  result.groupId = value;
  return self;
}
- (C2MGroupMsgListRspBuilder*) clearGroupId {
  result.hasGroupId = NO;
  result.groupId = @"";
  return self;
}
- (NSMutableArray *)groupMsgList {
  return result.groupMsgListArray;
}
- (ClientGroupMsg*)groupMsgListAtIndex:(NSUInteger)index {
  return [result groupMsgListAtIndex:index];
}
- (C2MGroupMsgListRspBuilder *)addGroupMsgList:(ClientGroupMsg*)value {
  if (result.groupMsgListArray == nil) {
    result.groupMsgListArray = [[NSMutableArray alloc]init];
  }
  [result.groupMsgListArray addObject:value];
  return self;
}
- (C2MGroupMsgListRspBuilder *)setGroupMsgListArray:(NSArray *)array {
  result.groupMsgListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (C2MGroupMsgListRspBuilder *)clearGroupMsgList {
  result.groupMsgListArray = nil;
  return self;
}
@end

@interface C2MGroupMsgReadAck ()
@property SInt32 cmdId;
@property (strong) NSString* groupId;
@end

@implementation C2MGroupMsgReadAck

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) value_ {
  hasGroupId_ = !!value_;
}
@synthesize groupId;
- (void) dealloc {
  self.groupId = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 265;
    self.groupId = @"";
  }
  return self;
}
static C2MGroupMsgReadAck* defaultC2MGroupMsgReadAckInstance = nil;
+ (void) initialize {
  if (self == [C2MGroupMsgReadAck class]) {
    defaultC2MGroupMsgReadAckInstance = [[C2MGroupMsgReadAck alloc] init];
  }
}
+ (C2MGroupMsgReadAck*) defaultInstance {
  return defaultC2MGroupMsgReadAckInstance;
}
- (C2MGroupMsgReadAck*) defaultInstance {
  return defaultC2MGroupMsgReadAckInstance;
}
- (BOOL) isInitialized {
  if (!self.hasGroupId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasGroupId) {
    [output writeString:2 value:self.groupId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasGroupId) {
    size_ += computeStringSize(2, self.groupId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MGroupMsgReadAck*) parseFromData:(NSData*) data {
  return (C2MGroupMsgReadAck*)[[[C2MGroupMsgReadAck builder] mergeFromData:data] build];
}
+ (C2MGroupMsgReadAck*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupMsgReadAck*)[[[C2MGroupMsgReadAck builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupMsgReadAck*) parseFromInputStream:(NSInputStream*) input {
  return (C2MGroupMsgReadAck*)[[[C2MGroupMsgReadAck builder] mergeFromInputStream:input] build];
}
+ (C2MGroupMsgReadAck*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupMsgReadAck*)[[[C2MGroupMsgReadAck builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupMsgReadAck*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MGroupMsgReadAck*)[[[C2MGroupMsgReadAck builder] mergeFromCodedInputStream:input] build];
}
+ (C2MGroupMsgReadAck*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupMsgReadAck*)[[[C2MGroupMsgReadAck builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupMsgReadAckBuilder*) builder {
  return [[C2MGroupMsgReadAckBuilder alloc] init];
}
+ (C2MGroupMsgReadAckBuilder*) builderWithPrototype:(C2MGroupMsgReadAck*) prototype {
  return [[C2MGroupMsgReadAck builder] mergeFrom:prototype];
}
- (C2MGroupMsgReadAckBuilder*) builder {
  return [C2MGroupMsgReadAck builder];
}
- (C2MGroupMsgReadAckBuilder*) toBuilder {
  return [C2MGroupMsgReadAck builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", self.groupId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MGroupMsgReadAck class]]) {
    return NO;
  }
  C2MGroupMsgReadAck *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || [self.groupId isEqual:otherMessage.groupId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [self.groupId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MGroupMsgReadAckBuilder()
@property (strong) C2MGroupMsgReadAck* result;
@end

@implementation C2MGroupMsgReadAckBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MGroupMsgReadAck alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MGroupMsgReadAckBuilder*) clear {
  self.result = [[C2MGroupMsgReadAck alloc] init];
  return self;
}
- (C2MGroupMsgReadAckBuilder*) clone {
  return [C2MGroupMsgReadAck builderWithPrototype:result];
}
- (C2MGroupMsgReadAck*) defaultInstance {
  return [C2MGroupMsgReadAck defaultInstance];
}
- (C2MGroupMsgReadAck*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MGroupMsgReadAck*) buildPartial {
  C2MGroupMsgReadAck* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MGroupMsgReadAckBuilder*) mergeFrom:(C2MGroupMsgReadAck*) other {
  if (other == [C2MGroupMsgReadAck defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MGroupMsgReadAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MGroupMsgReadAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 18: {
        [self setGroupId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MGroupMsgReadAckBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MGroupMsgReadAckBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 265;
  return self;
}
- (BOOL) hasGroupId {
  return result.hasGroupId;
}
- (NSString*) groupId {
  return result.groupId;
}
- (C2MGroupMsgReadAckBuilder*) setGroupId:(NSString*) value {
  result.hasGroupId = YES;
  result.groupId = value;
  return self;
}
- (C2MGroupMsgReadAckBuilder*) clearGroupId {
  result.hasGroupId = NO;
  result.groupId = @"";
  return self;
}
@end

@interface C2MGroupCreateTmpGroupReq ()
@property SInt32 cmdId;
@property (strong) NSString* groupName;
@property (strong) NSString* groupAvatar;
@property (strong) NSMutableArray * userIdListArray;
@end

@implementation C2MGroupCreateTmpGroupReq

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasGroupName {
  return !!hasGroupName_;
}
- (void) setHasGroupName:(BOOL) value_ {
  hasGroupName_ = !!value_;
}
@synthesize groupName;
- (BOOL) hasGroupAvatar {
  return !!hasGroupAvatar_;
}
- (void) setHasGroupAvatar:(BOOL) value_ {
  hasGroupAvatar_ = !!value_;
}
@synthesize groupAvatar;
@synthesize userIdListArray;
@dynamic userIdList;
- (void) dealloc {
  self.groupName = nil;
  self.groupAvatar = nil;
  self.userIdListArray = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 266;
    self.groupName = @"";
    self.groupAvatar = @"";
  }
  return self;
}
static C2MGroupCreateTmpGroupReq* defaultC2MGroupCreateTmpGroupReqInstance = nil;
+ (void) initialize {
  if (self == [C2MGroupCreateTmpGroupReq class]) {
    defaultC2MGroupCreateTmpGroupReqInstance = [[C2MGroupCreateTmpGroupReq alloc] init];
  }
}
+ (C2MGroupCreateTmpGroupReq*) defaultInstance {
  return defaultC2MGroupCreateTmpGroupReqInstance;
}
- (C2MGroupCreateTmpGroupReq*) defaultInstance {
  return defaultC2MGroupCreateTmpGroupReqInstance;
}
- (NSArray *)userIdList {
  return userIdListArray;
}
- (NSString*)userIdListAtIndex:(NSUInteger)index {
  return [userIdListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasGroupName) {
    return NO;
  }
  if (!self.hasGroupAvatar) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasGroupName) {
    [output writeString:2 value:self.groupName];
  }
  if (self.hasGroupAvatar) {
    [output writeString:3 value:self.groupAvatar];
  }
  [self.userIdListArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:4 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasGroupName) {
    size_ += computeStringSize(2, self.groupName);
  }
  if (self.hasGroupAvatar) {
    size_ += computeStringSize(3, self.groupAvatar);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.userIdListArray.count;
    [self.userIdListArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MGroupCreateTmpGroupReq*) parseFromData:(NSData*) data {
  return (C2MGroupCreateTmpGroupReq*)[[[C2MGroupCreateTmpGroupReq builder] mergeFromData:data] build];
}
+ (C2MGroupCreateTmpGroupReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupCreateTmpGroupReq*)[[[C2MGroupCreateTmpGroupReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupCreateTmpGroupReq*) parseFromInputStream:(NSInputStream*) input {
  return (C2MGroupCreateTmpGroupReq*)[[[C2MGroupCreateTmpGroupReq builder] mergeFromInputStream:input] build];
}
+ (C2MGroupCreateTmpGroupReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupCreateTmpGroupReq*)[[[C2MGroupCreateTmpGroupReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupCreateTmpGroupReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MGroupCreateTmpGroupReq*)[[[C2MGroupCreateTmpGroupReq builder] mergeFromCodedInputStream:input] build];
}
+ (C2MGroupCreateTmpGroupReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupCreateTmpGroupReq*)[[[C2MGroupCreateTmpGroupReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupCreateTmpGroupReqBuilder*) builder {
  return [[C2MGroupCreateTmpGroupReqBuilder alloc] init];
}
+ (C2MGroupCreateTmpGroupReqBuilder*) builderWithPrototype:(C2MGroupCreateTmpGroupReq*) prototype {
  return [[C2MGroupCreateTmpGroupReq builder] mergeFrom:prototype];
}
- (C2MGroupCreateTmpGroupReqBuilder*) builder {
  return [C2MGroupCreateTmpGroupReq builder];
}
- (C2MGroupCreateTmpGroupReqBuilder*) toBuilder {
  return [C2MGroupCreateTmpGroupReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasGroupName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupName", self.groupName];
  }
  if (self.hasGroupAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupAvatar", self.groupAvatar];
  }
  [self.userIdListArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userIdList", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MGroupCreateTmpGroupReq class]]) {
    return NO;
  }
  C2MGroupCreateTmpGroupReq *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasGroupName == otherMessage.hasGroupName &&
      (!self.hasGroupName || [self.groupName isEqual:otherMessage.groupName]) &&
      self.hasGroupAvatar == otherMessage.hasGroupAvatar &&
      (!self.hasGroupAvatar || [self.groupAvatar isEqual:otherMessage.groupAvatar]) &&
      [self.userIdListArray isEqualToArray:otherMessage.userIdListArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasGroupName) {
    hashCode = hashCode * 31 + [self.groupName hash];
  }
  if (self.hasGroupAvatar) {
    hashCode = hashCode * 31 + [self.groupAvatar hash];
  }
  [self.userIdListArray enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MGroupCreateTmpGroupReqBuilder()
@property (strong) C2MGroupCreateTmpGroupReq* result;
@end

@implementation C2MGroupCreateTmpGroupReqBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MGroupCreateTmpGroupReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MGroupCreateTmpGroupReqBuilder*) clear {
  self.result = [[C2MGroupCreateTmpGroupReq alloc] init];
  return self;
}
- (C2MGroupCreateTmpGroupReqBuilder*) clone {
  return [C2MGroupCreateTmpGroupReq builderWithPrototype:result];
}
- (C2MGroupCreateTmpGroupReq*) defaultInstance {
  return [C2MGroupCreateTmpGroupReq defaultInstance];
}
- (C2MGroupCreateTmpGroupReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MGroupCreateTmpGroupReq*) buildPartial {
  C2MGroupCreateTmpGroupReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MGroupCreateTmpGroupReqBuilder*) mergeFrom:(C2MGroupCreateTmpGroupReq*) other {
  if (other == [C2MGroupCreateTmpGroupReq defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasGroupName) {
    [self setGroupName:other.groupName];
  }
  if (other.hasGroupAvatar) {
    [self setGroupAvatar:other.groupAvatar];
  }
  if (other.userIdListArray.count > 0) {
    if (result.userIdListArray == nil) {
      result.userIdListArray = [[NSMutableArray alloc] initWithArray:other.userIdListArray];
    } else {
      [result.userIdListArray addObjectsFromArray:other.userIdListArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MGroupCreateTmpGroupReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MGroupCreateTmpGroupReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 18: {
        [self setGroupName:[input readString]];
        break;
      }
      case 26: {
        [self setGroupAvatar:[input readString]];
        break;
      }
      case 34: {
        [self addUserIdList:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MGroupCreateTmpGroupReqBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MGroupCreateTmpGroupReqBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 266;
  return self;
}
- (BOOL) hasGroupName {
  return result.hasGroupName;
}
- (NSString*) groupName {
  return result.groupName;
}
- (C2MGroupCreateTmpGroupReqBuilder*) setGroupName:(NSString*) value {
  result.hasGroupName = YES;
  result.groupName = value;
  return self;
}
- (C2MGroupCreateTmpGroupReqBuilder*) clearGroupName {
  result.hasGroupName = NO;
  result.groupName = @"";
  return self;
}
- (BOOL) hasGroupAvatar {
  return result.hasGroupAvatar;
}
- (NSString*) groupAvatar {
  return result.groupAvatar;
}
- (C2MGroupCreateTmpGroupReqBuilder*) setGroupAvatar:(NSString*) value {
  result.hasGroupAvatar = YES;
  result.groupAvatar = value;
  return self;
}
- (C2MGroupCreateTmpGroupReqBuilder*) clearGroupAvatar {
  result.hasGroupAvatar = NO;
  result.groupAvatar = @"";
  return self;
}
- (NSMutableArray *)userIdList {
  return result.userIdListArray;
}
- (NSString*)userIdListAtIndex:(NSUInteger)index {
  return [result userIdListAtIndex:index];
}
- (C2MGroupCreateTmpGroupReqBuilder *)addUserIdList:(NSString*)value {
  if (result.userIdListArray == nil) {
    result.userIdListArray = [[NSMutableArray alloc]init];
  }
  [result.userIdListArray addObject:value];
  return self;
}
- (C2MGroupCreateTmpGroupReqBuilder *)setUserIdListArray:(NSArray *)array {
  result.userIdListArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (C2MGroupCreateTmpGroupReqBuilder *)clearUserIdList {
  result.userIdListArray = nil;
  return self;
}
@end

@interface C2MGroupCreateTmpGroupRsp ()
@property SInt32 cmdId;
@property UInt32 results;
@property (strong) NSString* groupId;
@property (strong) NSString* groupName;
@property (strong) NSMutableArray * userIdListArray;
@end

@implementation C2MGroupCreateTmpGroupRsp

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasResults {
  return !!hasResults_;
}
- (void) setHasResults:(BOOL) value_ {
  hasResults_ = !!value_;
}
@synthesize results;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) value_ {
  hasGroupId_ = !!value_;
}
@synthesize groupId;
- (BOOL) hasGroupName {
  return !!hasGroupName_;
}
- (void) setHasGroupName:(BOOL) value_ {
  hasGroupName_ = !!value_;
}
@synthesize groupName;
@synthesize userIdListArray;
@dynamic userIdList;
- (void) dealloc {
  self.groupId = nil;
  self.groupName = nil;
  self.userIdListArray = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 267;
    self.results = 0;
    self.groupId = @"";
    self.groupName = @"";
  }
  return self;
}
static C2MGroupCreateTmpGroupRsp* defaultC2MGroupCreateTmpGroupRspInstance = nil;
+ (void) initialize {
  if (self == [C2MGroupCreateTmpGroupRsp class]) {
    defaultC2MGroupCreateTmpGroupRspInstance = [[C2MGroupCreateTmpGroupRsp alloc] init];
  }
}
+ (C2MGroupCreateTmpGroupRsp*) defaultInstance {
  return defaultC2MGroupCreateTmpGroupRspInstance;
}
- (C2MGroupCreateTmpGroupRsp*) defaultInstance {
  return defaultC2MGroupCreateTmpGroupRspInstance;
}
- (NSArray *)userIdList {
  return userIdListArray;
}
- (NSString*)userIdListAtIndex:(NSUInteger)index {
  return [userIdListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasResults) {
    return NO;
  }
  if (!self.hasGroupId) {
    return NO;
  }
  if (!self.hasGroupName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasResults) {
    [output writeUInt32:2 value:self.results];
  }
  if (self.hasGroupId) {
    [output writeString:3 value:self.groupId];
  }
  if (self.hasGroupName) {
    [output writeString:4 value:self.groupName];
  }
  [self.userIdListArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:5 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasResults) {
    size_ += computeUInt32Size(2, self.results);
  }
  if (self.hasGroupId) {
    size_ += computeStringSize(3, self.groupId);
  }
  if (self.hasGroupName) {
    size_ += computeStringSize(4, self.groupName);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.userIdListArray.count;
    [self.userIdListArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MGroupCreateTmpGroupRsp*) parseFromData:(NSData*) data {
  return (C2MGroupCreateTmpGroupRsp*)[[[C2MGroupCreateTmpGroupRsp builder] mergeFromData:data] build];
}
+ (C2MGroupCreateTmpGroupRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupCreateTmpGroupRsp*)[[[C2MGroupCreateTmpGroupRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupCreateTmpGroupRsp*) parseFromInputStream:(NSInputStream*) input {
  return (C2MGroupCreateTmpGroupRsp*)[[[C2MGroupCreateTmpGroupRsp builder] mergeFromInputStream:input] build];
}
+ (C2MGroupCreateTmpGroupRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupCreateTmpGroupRsp*)[[[C2MGroupCreateTmpGroupRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupCreateTmpGroupRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MGroupCreateTmpGroupRsp*)[[[C2MGroupCreateTmpGroupRsp builder] mergeFromCodedInputStream:input] build];
}
+ (C2MGroupCreateTmpGroupRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupCreateTmpGroupRsp*)[[[C2MGroupCreateTmpGroupRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupCreateTmpGroupRspBuilder*) builder {
  return [[C2MGroupCreateTmpGroupRspBuilder alloc] init];
}
+ (C2MGroupCreateTmpGroupRspBuilder*) builderWithPrototype:(C2MGroupCreateTmpGroupRsp*) prototype {
  return [[C2MGroupCreateTmpGroupRsp builder] mergeFrom:prototype];
}
- (C2MGroupCreateTmpGroupRspBuilder*) builder {
  return [C2MGroupCreateTmpGroupRsp builder];
}
- (C2MGroupCreateTmpGroupRspBuilder*) toBuilder {
  return [C2MGroupCreateTmpGroupRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasResults) {
    [output appendFormat:@"%@%@: %@\n", indent, @"results", [NSNumber numberWithInteger:self.results]];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", self.groupId];
  }
  if (self.hasGroupName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupName", self.groupName];
  }
  [self.userIdListArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userIdList", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MGroupCreateTmpGroupRsp class]]) {
    return NO;
  }
  C2MGroupCreateTmpGroupRsp *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasResults == otherMessage.hasResults &&
      (!self.hasResults || self.results == otherMessage.results) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || [self.groupId isEqual:otherMessage.groupId]) &&
      self.hasGroupName == otherMessage.hasGroupName &&
      (!self.hasGroupName || [self.groupName isEqual:otherMessage.groupName]) &&
      [self.userIdListArray isEqualToArray:otherMessage.userIdListArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasResults) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.results] hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [self.groupId hash];
  }
  if (self.hasGroupName) {
    hashCode = hashCode * 31 + [self.groupName hash];
  }
  [self.userIdListArray enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MGroupCreateTmpGroupRspBuilder()
@property (strong) C2MGroupCreateTmpGroupRsp* result;
@end

@implementation C2MGroupCreateTmpGroupRspBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MGroupCreateTmpGroupRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MGroupCreateTmpGroupRspBuilder*) clear {
  self.result = [[C2MGroupCreateTmpGroupRsp alloc] init];
  return self;
}
- (C2MGroupCreateTmpGroupRspBuilder*) clone {
  return [C2MGroupCreateTmpGroupRsp builderWithPrototype:result];
}
- (C2MGroupCreateTmpGroupRsp*) defaultInstance {
  return [C2MGroupCreateTmpGroupRsp defaultInstance];
}
- (C2MGroupCreateTmpGroupRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MGroupCreateTmpGroupRsp*) buildPartial {
  C2MGroupCreateTmpGroupRsp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MGroupCreateTmpGroupRspBuilder*) mergeFrom:(C2MGroupCreateTmpGroupRsp*) other {
  if (other == [C2MGroupCreateTmpGroupRsp defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasResults) {
    [self setResults:other.results];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasGroupName) {
    [self setGroupName:other.groupName];
  }
  if (other.userIdListArray.count > 0) {
    if (result.userIdListArray == nil) {
      result.userIdListArray = [[NSMutableArray alloc] initWithArray:other.userIdListArray];
    } else {
      [result.userIdListArray addObjectsFromArray:other.userIdListArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MGroupCreateTmpGroupRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MGroupCreateTmpGroupRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 16: {
        [self setResults:[input readUInt32]];
        break;
      }
      case 26: {
        [self setGroupId:[input readString]];
        break;
      }
      case 34: {
        [self setGroupName:[input readString]];
        break;
      }
      case 42: {
        [self addUserIdList:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MGroupCreateTmpGroupRspBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MGroupCreateTmpGroupRspBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 267;
  return self;
}
- (BOOL) hasResults {
  return result.hasResults;
}
- (UInt32) results {
  return result.results;
}
- (C2MGroupCreateTmpGroupRspBuilder*) setResults:(UInt32) value {
  result.hasResults = YES;
  result.results = value;
  return self;
}
- (C2MGroupCreateTmpGroupRspBuilder*) clearResults {
  result.hasResults = NO;
  result.results = 0;
  return self;
}
- (BOOL) hasGroupId {
  return result.hasGroupId;
}
- (NSString*) groupId {
  return result.groupId;
}
- (C2MGroupCreateTmpGroupRspBuilder*) setGroupId:(NSString*) value {
  result.hasGroupId = YES;
  result.groupId = value;
  return self;
}
- (C2MGroupCreateTmpGroupRspBuilder*) clearGroupId {
  result.hasGroupId = NO;
  result.groupId = @"";
  return self;
}
- (BOOL) hasGroupName {
  return result.hasGroupName;
}
- (NSString*) groupName {
  return result.groupName;
}
- (C2MGroupCreateTmpGroupRspBuilder*) setGroupName:(NSString*) value {
  result.hasGroupName = YES;
  result.groupName = value;
  return self;
}
- (C2MGroupCreateTmpGroupRspBuilder*) clearGroupName {
  result.hasGroupName = NO;
  result.groupName = @"";
  return self;
}
- (NSMutableArray *)userIdList {
  return result.userIdListArray;
}
- (NSString*)userIdListAtIndex:(NSUInteger)index {
  return [result userIdListAtIndex:index];
}
- (C2MGroupCreateTmpGroupRspBuilder *)addUserIdList:(NSString*)value {
  if (result.userIdListArray == nil) {
    result.userIdListArray = [[NSMutableArray alloc]init];
  }
  [result.userIdListArray addObject:value];
  return self;
}
- (C2MGroupCreateTmpGroupRspBuilder *)setUserIdListArray:(NSArray *)array {
  result.userIdListArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (C2MGroupCreateTmpGroupRspBuilder *)clearUserIdList {
  result.userIdListArray = nil;
  return self;
}
@end

@interface C2MGroupChangeMemberReq ()
@property SInt32 cmdId;
@property UInt32 changeType;
@property (strong) NSString* groupId;
@property (strong) NSMutableArray * userIdListArray;
@end

@implementation C2MGroupChangeMemberReq

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasChangeType {
  return !!hasChangeType_;
}
- (void) setHasChangeType:(BOOL) value_ {
  hasChangeType_ = !!value_;
}
@synthesize changeType;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) value_ {
  hasGroupId_ = !!value_;
}
@synthesize groupId;
@synthesize userIdListArray;
@dynamic userIdList;
- (void) dealloc {
  self.groupId = nil;
  self.userIdListArray = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 268;
    self.changeType = 0;
    self.groupId = @"";
  }
  return self;
}
static C2MGroupChangeMemberReq* defaultC2MGroupChangeMemberReqInstance = nil;
+ (void) initialize {
  if (self == [C2MGroupChangeMemberReq class]) {
    defaultC2MGroupChangeMemberReqInstance = [[C2MGroupChangeMemberReq alloc] init];
  }
}
+ (C2MGroupChangeMemberReq*) defaultInstance {
  return defaultC2MGroupChangeMemberReqInstance;
}
- (C2MGroupChangeMemberReq*) defaultInstance {
  return defaultC2MGroupChangeMemberReqInstance;
}
- (NSArray *)userIdList {
  return userIdListArray;
}
- (NSString*)userIdListAtIndex:(NSUInteger)index {
  return [userIdListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasChangeType) {
    return NO;
  }
  if (!self.hasGroupId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasChangeType) {
    [output writeUInt32:2 value:self.changeType];
  }
  if (self.hasGroupId) {
    [output writeString:3 value:self.groupId];
  }
  [self.userIdListArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:4 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasChangeType) {
    size_ += computeUInt32Size(2, self.changeType);
  }
  if (self.hasGroupId) {
    size_ += computeStringSize(3, self.groupId);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.userIdListArray.count;
    [self.userIdListArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MGroupChangeMemberReq*) parseFromData:(NSData*) data {
  return (C2MGroupChangeMemberReq*)[[[C2MGroupChangeMemberReq builder] mergeFromData:data] build];
}
+ (C2MGroupChangeMemberReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupChangeMemberReq*)[[[C2MGroupChangeMemberReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupChangeMemberReq*) parseFromInputStream:(NSInputStream*) input {
  return (C2MGroupChangeMemberReq*)[[[C2MGroupChangeMemberReq builder] mergeFromInputStream:input] build];
}
+ (C2MGroupChangeMemberReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupChangeMemberReq*)[[[C2MGroupChangeMemberReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupChangeMemberReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MGroupChangeMemberReq*)[[[C2MGroupChangeMemberReq builder] mergeFromCodedInputStream:input] build];
}
+ (C2MGroupChangeMemberReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupChangeMemberReq*)[[[C2MGroupChangeMemberReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupChangeMemberReqBuilder*) builder {
  return [[C2MGroupChangeMemberReqBuilder alloc] init];
}
+ (C2MGroupChangeMemberReqBuilder*) builderWithPrototype:(C2MGroupChangeMemberReq*) prototype {
  return [[C2MGroupChangeMemberReq builder] mergeFrom:prototype];
}
- (C2MGroupChangeMemberReqBuilder*) builder {
  return [C2MGroupChangeMemberReq builder];
}
- (C2MGroupChangeMemberReqBuilder*) toBuilder {
  return [C2MGroupChangeMemberReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasChangeType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"changeType", [NSNumber numberWithInteger:self.changeType]];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", self.groupId];
  }
  [self.userIdListArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userIdList", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MGroupChangeMemberReq class]]) {
    return NO;
  }
  C2MGroupChangeMemberReq *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasChangeType == otherMessage.hasChangeType &&
      (!self.hasChangeType || self.changeType == otherMessage.changeType) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || [self.groupId isEqual:otherMessage.groupId]) &&
      [self.userIdListArray isEqualToArray:otherMessage.userIdListArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasChangeType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.changeType] hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [self.groupId hash];
  }
  [self.userIdListArray enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MGroupChangeMemberReqBuilder()
@property (strong) C2MGroupChangeMemberReq* result;
@end

@implementation C2MGroupChangeMemberReqBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MGroupChangeMemberReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MGroupChangeMemberReqBuilder*) clear {
  self.result = [[C2MGroupChangeMemberReq alloc] init];
  return self;
}
- (C2MGroupChangeMemberReqBuilder*) clone {
  return [C2MGroupChangeMemberReq builderWithPrototype:result];
}
- (C2MGroupChangeMemberReq*) defaultInstance {
  return [C2MGroupChangeMemberReq defaultInstance];
}
- (C2MGroupChangeMemberReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MGroupChangeMemberReq*) buildPartial {
  C2MGroupChangeMemberReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MGroupChangeMemberReqBuilder*) mergeFrom:(C2MGroupChangeMemberReq*) other {
  if (other == [C2MGroupChangeMemberReq defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasChangeType) {
    [self setChangeType:other.changeType];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.userIdListArray.count > 0) {
    if (result.userIdListArray == nil) {
      result.userIdListArray = [[NSMutableArray alloc] initWithArray:other.userIdListArray];
    } else {
      [result.userIdListArray addObjectsFromArray:other.userIdListArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MGroupChangeMemberReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MGroupChangeMemberReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 16: {
        [self setChangeType:[input readUInt32]];
        break;
      }
      case 26: {
        [self setGroupId:[input readString]];
        break;
      }
      case 34: {
        [self addUserIdList:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MGroupChangeMemberReqBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MGroupChangeMemberReqBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 268;
  return self;
}
- (BOOL) hasChangeType {
  return result.hasChangeType;
}
- (UInt32) changeType {
  return result.changeType;
}
- (C2MGroupChangeMemberReqBuilder*) setChangeType:(UInt32) value {
  result.hasChangeType = YES;
  result.changeType = value;
  return self;
}
- (C2MGroupChangeMemberReqBuilder*) clearChangeType {
  result.hasChangeType = NO;
  result.changeType = 0;
  return self;
}
- (BOOL) hasGroupId {
  return result.hasGroupId;
}
- (NSString*) groupId {
  return result.groupId;
}
- (C2MGroupChangeMemberReqBuilder*) setGroupId:(NSString*) value {
  result.hasGroupId = YES;
  result.groupId = value;
  return self;
}
- (C2MGroupChangeMemberReqBuilder*) clearGroupId {
  result.hasGroupId = NO;
  result.groupId = @"";
  return self;
}
- (NSMutableArray *)userIdList {
  return result.userIdListArray;
}
- (NSString*)userIdListAtIndex:(NSUInteger)index {
  return [result userIdListAtIndex:index];
}
- (C2MGroupChangeMemberReqBuilder *)addUserIdList:(NSString*)value {
  if (result.userIdListArray == nil) {
    result.userIdListArray = [[NSMutableArray alloc]init];
  }
  [result.userIdListArray addObject:value];
  return self;
}
- (C2MGroupChangeMemberReqBuilder *)setUserIdListArray:(NSArray *)array {
  result.userIdListArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (C2MGroupChangeMemberReqBuilder *)clearUserIdList {
  result.userIdListArray = nil;
  return self;
}
@end

@interface C2MGroupChangeMemberRsp ()
@property SInt32 cmdId;
@property UInt32 results;
@property UInt32 changeType;
@property (strong) NSString* groupId;
@property (strong) NSMutableArray * userIdListArray;
@end

@implementation C2MGroupChangeMemberRsp

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasResults {
  return !!hasResults_;
}
- (void) setHasResults:(BOOL) value_ {
  hasResults_ = !!value_;
}
@synthesize results;
- (BOOL) hasChangeType {
  return !!hasChangeType_;
}
- (void) setHasChangeType:(BOOL) value_ {
  hasChangeType_ = !!value_;
}
@synthesize changeType;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) value_ {
  hasGroupId_ = !!value_;
}
@synthesize groupId;
@synthesize userIdListArray;
@dynamic userIdList;
- (void) dealloc {
  self.groupId = nil;
  self.userIdListArray = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 269;
    self.results = 0;
    self.changeType = 0;
    self.groupId = @"";
  }
  return self;
}
static C2MGroupChangeMemberRsp* defaultC2MGroupChangeMemberRspInstance = nil;
+ (void) initialize {
  if (self == [C2MGroupChangeMemberRsp class]) {
    defaultC2MGroupChangeMemberRspInstance = [[C2MGroupChangeMemberRsp alloc] init];
  }
}
+ (C2MGroupChangeMemberRsp*) defaultInstance {
  return defaultC2MGroupChangeMemberRspInstance;
}
- (C2MGroupChangeMemberRsp*) defaultInstance {
  return defaultC2MGroupChangeMemberRspInstance;
}
- (NSArray *)userIdList {
  return userIdListArray;
}
- (NSString*)userIdListAtIndex:(NSUInteger)index {
  return [userIdListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasResults) {
    return NO;
  }
  if (!self.hasChangeType) {
    return NO;
  }
  if (!self.hasGroupId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasResults) {
    [output writeUInt32:2 value:self.results];
  }
  if (self.hasChangeType) {
    [output writeUInt32:3 value:self.changeType];
  }
  if (self.hasGroupId) {
    [output writeString:4 value:self.groupId];
  }
  [self.userIdListArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:5 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasResults) {
    size_ += computeUInt32Size(2, self.results);
  }
  if (self.hasChangeType) {
    size_ += computeUInt32Size(3, self.changeType);
  }
  if (self.hasGroupId) {
    size_ += computeStringSize(4, self.groupId);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.userIdListArray.count;
    [self.userIdListArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MGroupChangeMemberRsp*) parseFromData:(NSData*) data {
  return (C2MGroupChangeMemberRsp*)[[[C2MGroupChangeMemberRsp builder] mergeFromData:data] build];
}
+ (C2MGroupChangeMemberRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupChangeMemberRsp*)[[[C2MGroupChangeMemberRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupChangeMemberRsp*) parseFromInputStream:(NSInputStream*) input {
  return (C2MGroupChangeMemberRsp*)[[[C2MGroupChangeMemberRsp builder] mergeFromInputStream:input] build];
}
+ (C2MGroupChangeMemberRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupChangeMemberRsp*)[[[C2MGroupChangeMemberRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupChangeMemberRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MGroupChangeMemberRsp*)[[[C2MGroupChangeMemberRsp builder] mergeFromCodedInputStream:input] build];
}
+ (C2MGroupChangeMemberRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MGroupChangeMemberRsp*)[[[C2MGroupChangeMemberRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MGroupChangeMemberRspBuilder*) builder {
  return [[C2MGroupChangeMemberRspBuilder alloc] init];
}
+ (C2MGroupChangeMemberRspBuilder*) builderWithPrototype:(C2MGroupChangeMemberRsp*) prototype {
  return [[C2MGroupChangeMemberRsp builder] mergeFrom:prototype];
}
- (C2MGroupChangeMemberRspBuilder*) builder {
  return [C2MGroupChangeMemberRsp builder];
}
- (C2MGroupChangeMemberRspBuilder*) toBuilder {
  return [C2MGroupChangeMemberRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasResults) {
    [output appendFormat:@"%@%@: %@\n", indent, @"results", [NSNumber numberWithInteger:self.results]];
  }
  if (self.hasChangeType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"changeType", [NSNumber numberWithInteger:self.changeType]];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", self.groupId];
  }
  [self.userIdListArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userIdList", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MGroupChangeMemberRsp class]]) {
    return NO;
  }
  C2MGroupChangeMemberRsp *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasResults == otherMessage.hasResults &&
      (!self.hasResults || self.results == otherMessage.results) &&
      self.hasChangeType == otherMessage.hasChangeType &&
      (!self.hasChangeType || self.changeType == otherMessage.changeType) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || [self.groupId isEqual:otherMessage.groupId]) &&
      [self.userIdListArray isEqualToArray:otherMessage.userIdListArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasResults) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.results] hash];
  }
  if (self.hasChangeType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.changeType] hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [self.groupId hash];
  }
  [self.userIdListArray enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MGroupChangeMemberRspBuilder()
@property (strong) C2MGroupChangeMemberRsp* result;
@end

@implementation C2MGroupChangeMemberRspBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MGroupChangeMemberRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MGroupChangeMemberRspBuilder*) clear {
  self.result = [[C2MGroupChangeMemberRsp alloc] init];
  return self;
}
- (C2MGroupChangeMemberRspBuilder*) clone {
  return [C2MGroupChangeMemberRsp builderWithPrototype:result];
}
- (C2MGroupChangeMemberRsp*) defaultInstance {
  return [C2MGroupChangeMemberRsp defaultInstance];
}
- (C2MGroupChangeMemberRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MGroupChangeMemberRsp*) buildPartial {
  C2MGroupChangeMemberRsp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MGroupChangeMemberRspBuilder*) mergeFrom:(C2MGroupChangeMemberRsp*) other {
  if (other == [C2MGroupChangeMemberRsp defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasResults) {
    [self setResults:other.results];
  }
  if (other.hasChangeType) {
    [self setChangeType:other.changeType];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.userIdListArray.count > 0) {
    if (result.userIdListArray == nil) {
      result.userIdListArray = [[NSMutableArray alloc] initWithArray:other.userIdListArray];
    } else {
      [result.userIdListArray addObjectsFromArray:other.userIdListArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MGroupChangeMemberRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MGroupChangeMemberRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 16: {
        [self setResults:[input readUInt32]];
        break;
      }
      case 24: {
        [self setChangeType:[input readUInt32]];
        break;
      }
      case 34: {
        [self setGroupId:[input readString]];
        break;
      }
      case 42: {
        [self addUserIdList:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MGroupChangeMemberRspBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MGroupChangeMemberRspBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 269;
  return self;
}
- (BOOL) hasResults {
  return result.hasResults;
}
- (UInt32) results {
  return result.results;
}
- (C2MGroupChangeMemberRspBuilder*) setResults:(UInt32) value {
  result.hasResults = YES;
  result.results = value;
  return self;
}
- (C2MGroupChangeMemberRspBuilder*) clearResults {
  result.hasResults = NO;
  result.results = 0;
  return self;
}
- (BOOL) hasChangeType {
  return result.hasChangeType;
}
- (UInt32) changeType {
  return result.changeType;
}
- (C2MGroupChangeMemberRspBuilder*) setChangeType:(UInt32) value {
  result.hasChangeType = YES;
  result.changeType = value;
  return self;
}
- (C2MGroupChangeMemberRspBuilder*) clearChangeType {
  result.hasChangeType = NO;
  result.changeType = 0;
  return self;
}
- (BOOL) hasGroupId {
  return result.hasGroupId;
}
- (NSString*) groupId {
  return result.groupId;
}
- (C2MGroupChangeMemberRspBuilder*) setGroupId:(NSString*) value {
  result.hasGroupId = YES;
  result.groupId = value;
  return self;
}
- (C2MGroupChangeMemberRspBuilder*) clearGroupId {
  result.hasGroupId = NO;
  result.groupId = @"";
  return self;
}
- (NSMutableArray *)userIdList {
  return result.userIdListArray;
}
- (NSString*)userIdListAtIndex:(NSUInteger)index {
  return [result userIdListAtIndex:index];
}
- (C2MGroupChangeMemberRspBuilder *)addUserIdList:(NSString*)value {
  if (result.userIdListArray == nil) {
    result.userIdListArray = [[NSMutableArray alloc]init];
  }
  [result.userIdListArray addObject:value];
  return self;
}
- (C2MGroupChangeMemberRspBuilder *)setUserIdListArray:(NSArray *)array {
  result.userIdListArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (C2MGroupChangeMemberRspBuilder *)clearUserIdList {
  result.userIdListArray = nil;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
