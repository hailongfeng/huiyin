// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "IMClient2ServBase.pb.h"
// @@protoc_insertion_point(imports)

@implementation Imclient2ServBaseRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [Imclient2ServBaseRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ImbaseDefineRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface C2LMsgServReq ()
@property SInt32 cmdId;
@property UInt32 userType;
@end

@implementation C2LMsgServReq

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasUserType {
  return !!hasUserType_;
}
- (void) setHasUserType:(BOOL) value_ {
  hasUserType_ = !!value_;
}
@synthesize userType;
- (void) dealloc {
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 1;
    self.userType = 0;
  }
  return self;
}
static C2LMsgServReq* defaultC2LMsgServReqInstance = nil;
+ (void) initialize {
  if (self == [C2LMsgServReq class]) {
    defaultC2LMsgServReqInstance = [[C2LMsgServReq alloc] init];
  }
}
+ (C2LMsgServReq*) defaultInstance {
  return defaultC2LMsgServReqInstance;
}
- (C2LMsgServReq*) defaultInstance {
  return defaultC2LMsgServReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasUserType) {
    [output writeUInt32:2 value:self.userType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasUserType) {
    size_ += computeUInt32Size(2, self.userType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2LMsgServReq*) parseFromData:(NSData*) data {
  return (C2LMsgServReq*)[[[C2LMsgServReq builder] mergeFromData:data] build];
}
+ (C2LMsgServReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2LMsgServReq*)[[[C2LMsgServReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2LMsgServReq*) parseFromInputStream:(NSInputStream*) input {
  return (C2LMsgServReq*)[[[C2LMsgServReq builder] mergeFromInputStream:input] build];
}
+ (C2LMsgServReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2LMsgServReq*)[[[C2LMsgServReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2LMsgServReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2LMsgServReq*)[[[C2LMsgServReq builder] mergeFromCodedInputStream:input] build];
}
+ (C2LMsgServReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2LMsgServReq*)[[[C2LMsgServReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2LMsgServReqBuilder*) builder {
  return [[C2LMsgServReqBuilder alloc] init];
}
+ (C2LMsgServReqBuilder*) builderWithPrototype:(C2LMsgServReq*) prototype {
  return [[C2LMsgServReq builder] mergeFrom:prototype];
}
- (C2LMsgServReqBuilder*) builder {
  return [C2LMsgServReq builder];
}
- (C2LMsgServReqBuilder*) toBuilder {
  return [C2LMsgServReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasUserType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userType", [NSNumber numberWithInteger:self.userType]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2LMsgServReq class]]) {
    return NO;
  }
  C2LMsgServReq *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasUserType == otherMessage.hasUserType &&
      (!self.hasUserType || self.userType == otherMessage.userType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasUserType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.userType] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2LMsgServReqBuilder()
@property (strong) C2LMsgServReq* result;
@end

@implementation C2LMsgServReqBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2LMsgServReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2LMsgServReqBuilder*) clear {
  self.result = [[C2LMsgServReq alloc] init];
  return self;
}
- (C2LMsgServReqBuilder*) clone {
  return [C2LMsgServReq builderWithPrototype:result];
}
- (C2LMsgServReq*) defaultInstance {
  return [C2LMsgServReq defaultInstance];
}
- (C2LMsgServReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2LMsgServReq*) buildPartial {
  C2LMsgServReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2LMsgServReqBuilder*) mergeFrom:(C2LMsgServReq*) other {
  if (other == [C2LMsgServReq defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasUserType) {
    [self setUserType:other.userType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2LMsgServReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2LMsgServReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 16: {
        [self setUserType:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2LMsgServReqBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2LMsgServReqBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 1;
  return self;
}
- (BOOL) hasUserType {
  return result.hasUserType;
}
- (UInt32) userType {
  return result.userType;
}
- (C2LMsgServReqBuilder*) setUserType:(UInt32) value {
  result.hasUserType = YES;
  result.userType = value;
  return self;
}
- (C2LMsgServReqBuilder*) clearUserType {
  result.hasUserType = NO;
  result.userType = 0;
  return self;
}
@end

@interface C2LMsgServRsp ()
@property SInt32 cmdId;
@property ResultType results;
@property (strong) NSMutableArray * ipAddrListArray;
@end

@implementation C2LMsgServRsp

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasResults {
  return !!hasResults_;
}
- (void) setHasResults:(BOOL) value_ {
  hasResults_ = !!value_;
}
@synthesize results;
@synthesize ipAddrListArray;
@dynamic ipAddrList;
- (void) dealloc {
  self.ipAddrListArray = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 2;
    self.results = ResultTypeRefuseReasonNone;
  }
  return self;
}
static C2LMsgServRsp* defaultC2LMsgServRspInstance = nil;
+ (void) initialize {
  if (self == [C2LMsgServRsp class]) {
    defaultC2LMsgServRspInstance = [[C2LMsgServRsp alloc] init];
  }
}
+ (C2LMsgServRsp*) defaultInstance {
  return defaultC2LMsgServRspInstance;
}
- (C2LMsgServRsp*) defaultInstance {
  return defaultC2LMsgServRspInstance;
}
- (NSArray *)ipAddrList {
  return ipAddrListArray;
}
- (IpAddr*)ipAddrListAtIndex:(NSUInteger)index {
  return [ipAddrListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasResults) {
    return NO;
  }
  __block BOOL isInitipAddrList = YES;
   [self.ipAddrList enumerateObjectsUsingBlock:^(IpAddr *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitipAddrList = NO;
      *stop = YES;
    }
  }];
  if (!isInitipAddrList) return isInitipAddrList;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasResults) {
    [output writeEnum:2 value:self.results];
  }
  [self.ipAddrListArray enumerateObjectsUsingBlock:^(IpAddr *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasResults) {
    size_ += computeEnumSize(2, self.results);
  }
  [self.ipAddrListArray enumerateObjectsUsingBlock:^(IpAddr *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2LMsgServRsp*) parseFromData:(NSData*) data {
  return (C2LMsgServRsp*)[[[C2LMsgServRsp builder] mergeFromData:data] build];
}
+ (C2LMsgServRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2LMsgServRsp*)[[[C2LMsgServRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2LMsgServRsp*) parseFromInputStream:(NSInputStream*) input {
  return (C2LMsgServRsp*)[[[C2LMsgServRsp builder] mergeFromInputStream:input] build];
}
+ (C2LMsgServRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2LMsgServRsp*)[[[C2LMsgServRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2LMsgServRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2LMsgServRsp*)[[[C2LMsgServRsp builder] mergeFromCodedInputStream:input] build];
}
+ (C2LMsgServRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2LMsgServRsp*)[[[C2LMsgServRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2LMsgServRspBuilder*) builder {
  return [[C2LMsgServRspBuilder alloc] init];
}
+ (C2LMsgServRspBuilder*) builderWithPrototype:(C2LMsgServRsp*) prototype {
  return [[C2LMsgServRsp builder] mergeFrom:prototype];
}
- (C2LMsgServRspBuilder*) builder {
  return [C2LMsgServRsp builder];
}
- (C2LMsgServRspBuilder*) toBuilder {
  return [C2LMsgServRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasResults) {
    [output appendFormat:@"%@%@: %d\n", indent, @"results", self.results];
  }
  [self.ipAddrListArray enumerateObjectsUsingBlock:^(IpAddr *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"ipAddrList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2LMsgServRsp class]]) {
    return NO;
  }
  C2LMsgServRsp *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasResults == otherMessage.hasResults &&
      (!self.hasResults || self.results == otherMessage.results) &&
      [self.ipAddrListArray isEqualToArray:otherMessage.ipAddrListArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasResults) {
    hashCode = hashCode * 31 + self.results;
  }
  [self.ipAddrListArray enumerateObjectsUsingBlock:^(IpAddr *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2LMsgServRspBuilder()
@property (strong) C2LMsgServRsp* result;
@end

@implementation C2LMsgServRspBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2LMsgServRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2LMsgServRspBuilder*) clear {
  self.result = [[C2LMsgServRsp alloc] init];
  return self;
}
- (C2LMsgServRspBuilder*) clone {
  return [C2LMsgServRsp builderWithPrototype:result];
}
- (C2LMsgServRsp*) defaultInstance {
  return [C2LMsgServRsp defaultInstance];
}
- (C2LMsgServRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2LMsgServRsp*) buildPartial {
  C2LMsgServRsp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2LMsgServRspBuilder*) mergeFrom:(C2LMsgServRsp*) other {
  if (other == [C2LMsgServRsp defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasResults) {
    [self setResults:other.results];
  }
  if (other.ipAddrListArray.count > 0) {
    if (result.ipAddrListArray == nil) {
      result.ipAddrListArray = [[NSMutableArray alloc] initWithArray:other.ipAddrListArray];
    } else {
      [result.ipAddrListArray addObjectsFromArray:other.ipAddrListArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2LMsgServRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2LMsgServRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 16: {
        ResultType value = (ResultType)[input readEnum];
        if (ResultTypeIsValidValue(value)) {
          [self setResults:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        IpAddrBuilder* subBuilder = [IpAddr builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addIpAddrList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2LMsgServRspBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2LMsgServRspBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 2;
  return self;
}
- (BOOL) hasResults {
  return result.hasResults;
}
- (ResultType) results {
  return result.results;
}
- (C2LMsgServRspBuilder*) setResults:(ResultType) value {
  result.hasResults = YES;
  result.results = value;
  return self;
}
- (C2LMsgServRspBuilder*) clearResults {
  result.hasResults = NO;
  result.results = ResultTypeRefuseReasonNone;
  return self;
}
- (NSMutableArray *)ipAddrList {
  return result.ipAddrListArray;
}
- (IpAddr*)ipAddrListAtIndex:(NSUInteger)index {
  return [result ipAddrListAtIndex:index];
}
- (C2LMsgServRspBuilder *)addIpAddrList:(IpAddr*)value {
  if (result.ipAddrListArray == nil) {
    result.ipAddrListArray = [[NSMutableArray alloc]init];
  }
  [result.ipAddrListArray addObject:value];
  return self;
}
- (C2LMsgServRspBuilder *)setIpAddrListArray:(NSArray *)array {
  result.ipAddrListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (C2LMsgServRspBuilder *)clearIpAddrList {
  result.ipAddrListArray = nil;
  return self;
}
@end

@interface C2MHeartBeatReq ()
@property SInt32 cmdId;
@end

@implementation C2MHeartBeatReq

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (void) dealloc {
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 3;
  }
  return self;
}
static C2MHeartBeatReq* defaultC2MHeartBeatReqInstance = nil;
+ (void) initialize {
  if (self == [C2MHeartBeatReq class]) {
    defaultC2MHeartBeatReqInstance = [[C2MHeartBeatReq alloc] init];
  }
}
+ (C2MHeartBeatReq*) defaultInstance {
  return defaultC2MHeartBeatReqInstance;
}
- (C2MHeartBeatReq*) defaultInstance {
  return defaultC2MHeartBeatReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MHeartBeatReq*) parseFromData:(NSData*) data {
  return (C2MHeartBeatReq*)[[[C2MHeartBeatReq builder] mergeFromData:data] build];
}
+ (C2MHeartBeatReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MHeartBeatReq*)[[[C2MHeartBeatReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MHeartBeatReq*) parseFromInputStream:(NSInputStream*) input {
  return (C2MHeartBeatReq*)[[[C2MHeartBeatReq builder] mergeFromInputStream:input] build];
}
+ (C2MHeartBeatReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MHeartBeatReq*)[[[C2MHeartBeatReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MHeartBeatReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MHeartBeatReq*)[[[C2MHeartBeatReq builder] mergeFromCodedInputStream:input] build];
}
+ (C2MHeartBeatReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MHeartBeatReq*)[[[C2MHeartBeatReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MHeartBeatReqBuilder*) builder {
  return [[C2MHeartBeatReqBuilder alloc] init];
}
+ (C2MHeartBeatReqBuilder*) builderWithPrototype:(C2MHeartBeatReq*) prototype {
  return [[C2MHeartBeatReq builder] mergeFrom:prototype];
}
- (C2MHeartBeatReqBuilder*) builder {
  return [C2MHeartBeatReq builder];
}
- (C2MHeartBeatReqBuilder*) toBuilder {
  return [C2MHeartBeatReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MHeartBeatReq class]]) {
    return NO;
  }
  C2MHeartBeatReq *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MHeartBeatReqBuilder()
@property (strong) C2MHeartBeatReq* result;
@end

@implementation C2MHeartBeatReqBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MHeartBeatReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MHeartBeatReqBuilder*) clear {
  self.result = [[C2MHeartBeatReq alloc] init];
  return self;
}
- (C2MHeartBeatReqBuilder*) clone {
  return [C2MHeartBeatReq builderWithPrototype:result];
}
- (C2MHeartBeatReq*) defaultInstance {
  return [C2MHeartBeatReq defaultInstance];
}
- (C2MHeartBeatReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MHeartBeatReq*) buildPartial {
  C2MHeartBeatReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MHeartBeatReqBuilder*) mergeFrom:(C2MHeartBeatReq*) other {
  if (other == [C2MHeartBeatReq defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MHeartBeatReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MHeartBeatReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MHeartBeatReqBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MHeartBeatReqBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 3;
  return self;
}
@end

@interface C2MHeartBeatRsp ()
@property SInt32 cmdId;
@end

@implementation C2MHeartBeatRsp

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (void) dealloc {
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 4;
  }
  return self;
}
static C2MHeartBeatRsp* defaultC2MHeartBeatRspInstance = nil;
+ (void) initialize {
  if (self == [C2MHeartBeatRsp class]) {
    defaultC2MHeartBeatRspInstance = [[C2MHeartBeatRsp alloc] init];
  }
}
+ (C2MHeartBeatRsp*) defaultInstance {
  return defaultC2MHeartBeatRspInstance;
}
- (C2MHeartBeatRsp*) defaultInstance {
  return defaultC2MHeartBeatRspInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MHeartBeatRsp*) parseFromData:(NSData*) data {
  return (C2MHeartBeatRsp*)[[[C2MHeartBeatRsp builder] mergeFromData:data] build];
}
+ (C2MHeartBeatRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MHeartBeatRsp*)[[[C2MHeartBeatRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MHeartBeatRsp*) parseFromInputStream:(NSInputStream*) input {
  return (C2MHeartBeatRsp*)[[[C2MHeartBeatRsp builder] mergeFromInputStream:input] build];
}
+ (C2MHeartBeatRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MHeartBeatRsp*)[[[C2MHeartBeatRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MHeartBeatRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MHeartBeatRsp*)[[[C2MHeartBeatRsp builder] mergeFromCodedInputStream:input] build];
}
+ (C2MHeartBeatRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MHeartBeatRsp*)[[[C2MHeartBeatRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MHeartBeatRspBuilder*) builder {
  return [[C2MHeartBeatRspBuilder alloc] init];
}
+ (C2MHeartBeatRspBuilder*) builderWithPrototype:(C2MHeartBeatRsp*) prototype {
  return [[C2MHeartBeatRsp builder] mergeFrom:prototype];
}
- (C2MHeartBeatRspBuilder*) builder {
  return [C2MHeartBeatRsp builder];
}
- (C2MHeartBeatRspBuilder*) toBuilder {
  return [C2MHeartBeatRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MHeartBeatRsp class]]) {
    return NO;
  }
  C2MHeartBeatRsp *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MHeartBeatRspBuilder()
@property (strong) C2MHeartBeatRsp* result;
@end

@implementation C2MHeartBeatRspBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MHeartBeatRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MHeartBeatRspBuilder*) clear {
  self.result = [[C2MHeartBeatRsp alloc] init];
  return self;
}
- (C2MHeartBeatRspBuilder*) clone {
  return [C2MHeartBeatRsp builderWithPrototype:result];
}
- (C2MHeartBeatRsp*) defaultInstance {
  return [C2MHeartBeatRsp defaultInstance];
}
- (C2MHeartBeatRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MHeartBeatRsp*) buildPartial {
  C2MHeartBeatRsp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MHeartBeatRspBuilder*) mergeFrom:(C2MHeartBeatRsp*) other {
  if (other == [C2MHeartBeatRsp defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MHeartBeatRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MHeartBeatRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MHeartBeatRspBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MHeartBeatRspBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 4;
  return self;
}
@end

@interface C2MLoginReq ()
@property SInt32 cmdId;
@property (strong) NSString* userId;
@property (strong) NSString* uuid;
@property UInt32 onlineStatus;
@property (strong) NSString* clientVersion;
@end

@implementation C2MLoginReq

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value_ {
  hasUserId_ = !!value_;
}
@synthesize userId;
- (BOOL) hasUuid {
  return !!hasUuid_;
}
- (void) setHasUuid:(BOOL) value_ {
  hasUuid_ = !!value_;
}
@synthesize uuid;
- (BOOL) hasOnlineStatus {
  return !!hasOnlineStatus_;
}
- (void) setHasOnlineStatus:(BOOL) value_ {
  hasOnlineStatus_ = !!value_;
}
@synthesize onlineStatus;
- (BOOL) hasClientVersion {
  return !!hasClientVersion_;
}
- (void) setHasClientVersion:(BOOL) value_ {
  hasClientVersion_ = !!value_;
}
@synthesize clientVersion;
- (void) dealloc {
  self.userId = nil;
  self.uuid = nil;
  self.clientVersion = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 5;
    self.userId = @"";
    self.uuid = @"";
    self.onlineStatus = 0;
    self.clientVersion = @"";
  }
  return self;
}
static C2MLoginReq* defaultC2MLoginReqInstance = nil;
+ (void) initialize {
  if (self == [C2MLoginReq class]) {
    defaultC2MLoginReqInstance = [[C2MLoginReq alloc] init];
  }
}
+ (C2MLoginReq*) defaultInstance {
  return defaultC2MLoginReqInstance;
}
- (C2MLoginReq*) defaultInstance {
  return defaultC2MLoginReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasUuid) {
    return NO;
  }
  if (!self.hasOnlineStatus) {
    return NO;
  }
  if (!self.hasClientVersion) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasUserId) {
    [output writeString:2 value:self.userId];
  }
  if (self.hasUuid) {
    [output writeString:3 value:self.uuid];
  }
  if (self.hasOnlineStatus) {
    [output writeUInt32:4 value:self.onlineStatus];
  }
  if (self.hasClientVersion) {
    [output writeString:5 value:self.clientVersion];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasUserId) {
    size_ += computeStringSize(2, self.userId);
  }
  if (self.hasUuid) {
    size_ += computeStringSize(3, self.uuid);
  }
  if (self.hasOnlineStatus) {
    size_ += computeUInt32Size(4, self.onlineStatus);
  }
  if (self.hasClientVersion) {
    size_ += computeStringSize(5, self.clientVersion);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MLoginReq*) parseFromData:(NSData*) data {
  return (C2MLoginReq*)[[[C2MLoginReq builder] mergeFromData:data] build];
}
+ (C2MLoginReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MLoginReq*)[[[C2MLoginReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MLoginReq*) parseFromInputStream:(NSInputStream*) input {
  return (C2MLoginReq*)[[[C2MLoginReq builder] mergeFromInputStream:input] build];
}
+ (C2MLoginReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MLoginReq*)[[[C2MLoginReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MLoginReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MLoginReq*)[[[C2MLoginReq builder] mergeFromCodedInputStream:input] build];
}
+ (C2MLoginReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MLoginReq*)[[[C2MLoginReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MLoginReqBuilder*) builder {
  return [[C2MLoginReqBuilder alloc] init];
}
+ (C2MLoginReqBuilder*) builderWithPrototype:(C2MLoginReq*) prototype {
  return [[C2MLoginReq builder] mergeFrom:prototype];
}
- (C2MLoginReqBuilder*) builder {
  return [C2MLoginReq builder];
}
- (C2MLoginReqBuilder*) toBuilder {
  return [C2MLoginReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", self.userId];
  }
  if (self.hasUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uuid", self.uuid];
  }
  if (self.hasOnlineStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"onlineStatus", [NSNumber numberWithInteger:self.onlineStatus]];
  }
  if (self.hasClientVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientVersion", self.clientVersion];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MLoginReq class]]) {
    return NO;
  }
  C2MLoginReq *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || [self.userId isEqual:otherMessage.userId]) &&
      self.hasUuid == otherMessage.hasUuid &&
      (!self.hasUuid || [self.uuid isEqual:otherMessage.uuid]) &&
      self.hasOnlineStatus == otherMessage.hasOnlineStatus &&
      (!self.hasOnlineStatus || self.onlineStatus == otherMessage.onlineStatus) &&
      self.hasClientVersion == otherMessage.hasClientVersion &&
      (!self.hasClientVersion || [self.clientVersion isEqual:otherMessage.clientVersion]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [self.userId hash];
  }
  if (self.hasUuid) {
    hashCode = hashCode * 31 + [self.uuid hash];
  }
  if (self.hasOnlineStatus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.onlineStatus] hash];
  }
  if (self.hasClientVersion) {
    hashCode = hashCode * 31 + [self.clientVersion hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MLoginReqBuilder()
@property (strong) C2MLoginReq* result;
@end

@implementation C2MLoginReqBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MLoginReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MLoginReqBuilder*) clear {
  self.result = [[C2MLoginReq alloc] init];
  return self;
}
- (C2MLoginReqBuilder*) clone {
  return [C2MLoginReq builderWithPrototype:result];
}
- (C2MLoginReq*) defaultInstance {
  return [C2MLoginReq defaultInstance];
}
- (C2MLoginReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MLoginReq*) buildPartial {
  C2MLoginReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MLoginReqBuilder*) mergeFrom:(C2MLoginReq*) other {
  if (other == [C2MLoginReq defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasUuid) {
    [self setUuid:other.uuid];
  }
  if (other.hasOnlineStatus) {
    [self setOnlineStatus:other.onlineStatus];
  }
  if (other.hasClientVersion) {
    [self setClientVersion:other.clientVersion];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MLoginReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MLoginReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 18: {
        [self setUserId:[input readString]];
        break;
      }
      case 26: {
        [self setUuid:[input readString]];
        break;
      }
      case 32: {
        [self setOnlineStatus:[input readUInt32]];
        break;
      }
      case 42: {
        [self setClientVersion:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MLoginReqBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MLoginReqBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 5;
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (NSString*) userId {
  return result.userId;
}
- (C2MLoginReqBuilder*) setUserId:(NSString*) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (C2MLoginReqBuilder*) clearUserId {
  result.hasUserId = NO;
  result.userId = @"";
  return self;
}
- (BOOL) hasUuid {
  return result.hasUuid;
}
- (NSString*) uuid {
  return result.uuid;
}
- (C2MLoginReqBuilder*) setUuid:(NSString*) value {
  result.hasUuid = YES;
  result.uuid = value;
  return self;
}
- (C2MLoginReqBuilder*) clearUuid {
  result.hasUuid = NO;
  result.uuid = @"";
  return self;
}
- (BOOL) hasOnlineStatus {
  return result.hasOnlineStatus;
}
- (UInt32) onlineStatus {
  return result.onlineStatus;
}
- (C2MLoginReqBuilder*) setOnlineStatus:(UInt32) value {
  result.hasOnlineStatus = YES;
  result.onlineStatus = value;
  return self;
}
- (C2MLoginReqBuilder*) clearOnlineStatus {
  result.hasOnlineStatus = NO;
  result.onlineStatus = 0;
  return self;
}
- (BOOL) hasClientVersion {
  return result.hasClientVersion;
}
- (NSString*) clientVersion {
  return result.clientVersion;
}
- (C2MLoginReqBuilder*) setClientVersion:(NSString*) value {
  result.hasClientVersion = YES;
  result.clientVersion = value;
  return self;
}
- (C2MLoginReqBuilder*) clearClientVersion {
  result.hasClientVersion = NO;
  result.clientVersion = @"";
  return self;
}
@end

@interface C2MLoginRsp ()
@property SInt32 cmdId;
@property ResultType results;
@property UInt32 serverTime;
@property UInt32 onlineStatus;
@property (strong) NSString* name;
@property (strong) NSString* nickName;
@property (strong) NSString* avatarUrl;
@property UserType userType;
@end

@implementation C2MLoginRsp

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasResults {
  return !!hasResults_;
}
- (void) setHasResults:(BOOL) value_ {
  hasResults_ = !!value_;
}
@synthesize results;
- (BOOL) hasServerTime {
  return !!hasServerTime_;
}
- (void) setHasServerTime:(BOOL) value_ {
  hasServerTime_ = !!value_;
}
@synthesize serverTime;
- (BOOL) hasOnlineStatus {
  return !!hasOnlineStatus_;
}
- (void) setHasOnlineStatus:(BOOL) value_ {
  hasOnlineStatus_ = !!value_;
}
@synthesize onlineStatus;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasNickName {
  return !!hasNickName_;
}
- (void) setHasNickName:(BOOL) value_ {
  hasNickName_ = !!value_;
}
@synthesize nickName;
- (BOOL) hasAvatarUrl {
  return !!hasAvatarUrl_;
}
- (void) setHasAvatarUrl:(BOOL) value_ {
  hasAvatarUrl_ = !!value_;
}
@synthesize avatarUrl;
- (BOOL) hasUserType {
  return !!hasUserType_;
}
- (void) setHasUserType:(BOOL) value_ {
  hasUserType_ = !!value_;
}
@synthesize userType;
- (void) dealloc {
  self.name = nil;
  self.nickName = nil;
  self.avatarUrl = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 6;
    self.results = ResultTypeRefuseReasonNone;
    self.serverTime = 0;
    self.onlineStatus = 0;
    self.name = @"";
    self.nickName = @"";
    self.avatarUrl = @"";
    self.userType = UserTypeUserTypeNormal;
  }
  return self;
}
static C2MLoginRsp* defaultC2MLoginRspInstance = nil;
+ (void) initialize {
  if (self == [C2MLoginRsp class]) {
    defaultC2MLoginRspInstance = [[C2MLoginRsp alloc] init];
  }
}
+ (C2MLoginRsp*) defaultInstance {
  return defaultC2MLoginRspInstance;
}
- (C2MLoginRsp*) defaultInstance {
  return defaultC2MLoginRspInstance;
}
- (BOOL) isInitialized {
  if (!self.hasResults) {
    return NO;
  }
  if (!self.hasServerTime) {
    return NO;
  }
  if (!self.hasOnlineStatus) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasNickName) {
    return NO;
  }
  if (!self.hasAvatarUrl) {
    return NO;
  }
  if (!self.hasUserType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasResults) {
    [output writeEnum:2 value:self.results];
  }
  if (self.hasServerTime) {
    [output writeUInt32:3 value:self.serverTime];
  }
  if (self.hasOnlineStatus) {
    [output writeUInt32:4 value:self.onlineStatus];
  }
  if (self.hasName) {
    [output writeString:5 value:self.name];
  }
  if (self.hasNickName) {
    [output writeString:6 value:self.nickName];
  }
  if (self.hasAvatarUrl) {
    [output writeString:7 value:self.avatarUrl];
  }
  if (self.hasUserType) {
    [output writeEnum:8 value:self.userType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasResults) {
    size_ += computeEnumSize(2, self.results);
  }
  if (self.hasServerTime) {
    size_ += computeUInt32Size(3, self.serverTime);
  }
  if (self.hasOnlineStatus) {
    size_ += computeUInt32Size(4, self.onlineStatus);
  }
  if (self.hasName) {
    size_ += computeStringSize(5, self.name);
  }
  if (self.hasNickName) {
    size_ += computeStringSize(6, self.nickName);
  }
  if (self.hasAvatarUrl) {
    size_ += computeStringSize(7, self.avatarUrl);
  }
  if (self.hasUserType) {
    size_ += computeEnumSize(8, self.userType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MLoginRsp*) parseFromData:(NSData*) data {
  return (C2MLoginRsp*)[[[C2MLoginRsp builder] mergeFromData:data] build];
}
+ (C2MLoginRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MLoginRsp*)[[[C2MLoginRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MLoginRsp*) parseFromInputStream:(NSInputStream*) input {
  return (C2MLoginRsp*)[[[C2MLoginRsp builder] mergeFromInputStream:input] build];
}
+ (C2MLoginRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MLoginRsp*)[[[C2MLoginRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MLoginRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MLoginRsp*)[[[C2MLoginRsp builder] mergeFromCodedInputStream:input] build];
}
+ (C2MLoginRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MLoginRsp*)[[[C2MLoginRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MLoginRspBuilder*) builder {
  return [[C2MLoginRspBuilder alloc] init];
}
+ (C2MLoginRspBuilder*) builderWithPrototype:(C2MLoginRsp*) prototype {
  return [[C2MLoginRsp builder] mergeFrom:prototype];
}
- (C2MLoginRspBuilder*) builder {
  return [C2MLoginRsp builder];
}
- (C2MLoginRspBuilder*) toBuilder {
  return [C2MLoginRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasResults) {
    [output appendFormat:@"%@%@: %d\n", indent, @"results", self.results];
  }
  if (self.hasServerTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverTime", [NSNumber numberWithInteger:self.serverTime]];
  }
  if (self.hasOnlineStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"onlineStatus", [NSNumber numberWithInteger:self.onlineStatus]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasNickName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"nickName", self.nickName];
  }
  if (self.hasAvatarUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"avatarUrl", self.avatarUrl];
  }
  if (self.hasUserType) {
    [output appendFormat:@"%@%@: %d\n", indent, @"userType", self.userType];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MLoginRsp class]]) {
    return NO;
  }
  C2MLoginRsp *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasResults == otherMessage.hasResults &&
      (!self.hasResults || self.results == otherMessage.results) &&
      self.hasServerTime == otherMessage.hasServerTime &&
      (!self.hasServerTime || self.serverTime == otherMessage.serverTime) &&
      self.hasOnlineStatus == otherMessage.hasOnlineStatus &&
      (!self.hasOnlineStatus || self.onlineStatus == otherMessage.onlineStatus) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasNickName == otherMessage.hasNickName &&
      (!self.hasNickName || [self.nickName isEqual:otherMessage.nickName]) &&
      self.hasAvatarUrl == otherMessage.hasAvatarUrl &&
      (!self.hasAvatarUrl || [self.avatarUrl isEqual:otherMessage.avatarUrl]) &&
      self.hasUserType == otherMessage.hasUserType &&
      (!self.hasUserType || self.userType == otherMessage.userType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasResults) {
    hashCode = hashCode * 31 + self.results;
  }
  if (self.hasServerTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.serverTime] hash];
  }
  if (self.hasOnlineStatus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.onlineStatus] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasNickName) {
    hashCode = hashCode * 31 + [self.nickName hash];
  }
  if (self.hasAvatarUrl) {
    hashCode = hashCode * 31 + [self.avatarUrl hash];
  }
  if (self.hasUserType) {
    hashCode = hashCode * 31 + self.userType;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MLoginRspBuilder()
@property (strong) C2MLoginRsp* result;
@end

@implementation C2MLoginRspBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MLoginRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MLoginRspBuilder*) clear {
  self.result = [[C2MLoginRsp alloc] init];
  return self;
}
- (C2MLoginRspBuilder*) clone {
  return [C2MLoginRsp builderWithPrototype:result];
}
- (C2MLoginRsp*) defaultInstance {
  return [C2MLoginRsp defaultInstance];
}
- (C2MLoginRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MLoginRsp*) buildPartial {
  C2MLoginRsp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MLoginRspBuilder*) mergeFrom:(C2MLoginRsp*) other {
  if (other == [C2MLoginRsp defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasResults) {
    [self setResults:other.results];
  }
  if (other.hasServerTime) {
    [self setServerTime:other.serverTime];
  }
  if (other.hasOnlineStatus) {
    [self setOnlineStatus:other.onlineStatus];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasNickName) {
    [self setNickName:other.nickName];
  }
  if (other.hasAvatarUrl) {
    [self setAvatarUrl:other.avatarUrl];
  }
  if (other.hasUserType) {
    [self setUserType:other.userType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MLoginRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MLoginRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 16: {
        ResultType value = (ResultType)[input readEnum];
        if (ResultTypeIsValidValue(value)) {
          [self setResults:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setServerTime:[input readUInt32]];
        break;
      }
      case 32: {
        [self setOnlineStatus:[input readUInt32]];
        break;
      }
      case 42: {
        [self setName:[input readString]];
        break;
      }
      case 50: {
        [self setNickName:[input readString]];
        break;
      }
      case 58: {
        [self setAvatarUrl:[input readString]];
        break;
      }
      case 64: {
        UserType value = (UserType)[input readEnum];
        if (UserTypeIsValidValue(value)) {
          [self setUserType:value];
        } else {
          [unknownFields mergeVarintField:8 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MLoginRspBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MLoginRspBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 6;
  return self;
}
- (BOOL) hasResults {
  return result.hasResults;
}
- (ResultType) results {
  return result.results;
}
- (C2MLoginRspBuilder*) setResults:(ResultType) value {
  result.hasResults = YES;
  result.results = value;
  return self;
}
- (C2MLoginRspBuilder*) clearResults {
  result.hasResults = NO;
  result.results = ResultTypeRefuseReasonNone;
  return self;
}
- (BOOL) hasServerTime {
  return result.hasServerTime;
}
- (UInt32) serverTime {
  return result.serverTime;
}
- (C2MLoginRspBuilder*) setServerTime:(UInt32) value {
  result.hasServerTime = YES;
  result.serverTime = value;
  return self;
}
- (C2MLoginRspBuilder*) clearServerTime {
  result.hasServerTime = NO;
  result.serverTime = 0;
  return self;
}
- (BOOL) hasOnlineStatus {
  return result.hasOnlineStatus;
}
- (UInt32) onlineStatus {
  return result.onlineStatus;
}
- (C2MLoginRspBuilder*) setOnlineStatus:(UInt32) value {
  result.hasOnlineStatus = YES;
  result.onlineStatus = value;
  return self;
}
- (C2MLoginRspBuilder*) clearOnlineStatus {
  result.hasOnlineStatus = NO;
  result.onlineStatus = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (C2MLoginRspBuilder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (C2MLoginRspBuilder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasNickName {
  return result.hasNickName;
}
- (NSString*) nickName {
  return result.nickName;
}
- (C2MLoginRspBuilder*) setNickName:(NSString*) value {
  result.hasNickName = YES;
  result.nickName = value;
  return self;
}
- (C2MLoginRspBuilder*) clearNickName {
  result.hasNickName = NO;
  result.nickName = @"";
  return self;
}
- (BOOL) hasAvatarUrl {
  return result.hasAvatarUrl;
}
- (NSString*) avatarUrl {
  return result.avatarUrl;
}
- (C2MLoginRspBuilder*) setAvatarUrl:(NSString*) value {
  result.hasAvatarUrl = YES;
  result.avatarUrl = value;
  return self;
}
- (C2MLoginRspBuilder*) clearAvatarUrl {
  result.hasAvatarUrl = NO;
  result.avatarUrl = @"";
  return self;
}
- (BOOL) hasUserType {
  return result.hasUserType;
}
- (UserType) userType {
  return result.userType;
}
- (C2MLoginRspBuilder*) setUserType:(UserType) value {
  result.hasUserType = YES;
  result.userType = value;
  return self;
}
- (C2MLoginRspBuilder*) clearUserType {
  result.hasUserType = NO;
  result.userType = UserTypeUserTypeNormal;
  return self;
}
@end

@interface M2CKickUserNotify ()
@property SInt32 cmdId;
@property (strong) NSString* userId;
@property KickReasonType kickReason;
@end

@implementation M2CKickUserNotify

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value_ {
  hasUserId_ = !!value_;
}
@synthesize userId;
- (BOOL) hasKickReason {
  return !!hasKickReason_;
}
- (void) setHasKickReason:(BOOL) value_ {
  hasKickReason_ = !!value_;
}
@synthesize kickReason;
- (void) dealloc {
  self.userId = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 7;
    self.userId = @"";
    self.kickReason = KickReasonTypeKickReasonDuplicateUser;
  }
  return self;
}
static M2CKickUserNotify* defaultM2CKickUserNotifyInstance = nil;
+ (void) initialize {
  if (self == [M2CKickUserNotify class]) {
    defaultM2CKickUserNotifyInstance = [[M2CKickUserNotify alloc] init];
  }
}
+ (M2CKickUserNotify*) defaultInstance {
  return defaultM2CKickUserNotifyInstance;
}
- (M2CKickUserNotify*) defaultInstance {
  return defaultM2CKickUserNotifyInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasKickReason) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasUserId) {
    [output writeString:2 value:self.userId];
  }
  if (self.hasKickReason) {
    [output writeEnum:3 value:self.kickReason];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasUserId) {
    size_ += computeStringSize(2, self.userId);
  }
  if (self.hasKickReason) {
    size_ += computeEnumSize(3, self.kickReason);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (M2CKickUserNotify*) parseFromData:(NSData*) data {
  return (M2CKickUserNotify*)[[[M2CKickUserNotify builder] mergeFromData:data] build];
}
+ (M2CKickUserNotify*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (M2CKickUserNotify*)[[[M2CKickUserNotify builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (M2CKickUserNotify*) parseFromInputStream:(NSInputStream*) input {
  return (M2CKickUserNotify*)[[[M2CKickUserNotify builder] mergeFromInputStream:input] build];
}
+ (M2CKickUserNotify*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (M2CKickUserNotify*)[[[M2CKickUserNotify builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (M2CKickUserNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (M2CKickUserNotify*)[[[M2CKickUserNotify builder] mergeFromCodedInputStream:input] build];
}
+ (M2CKickUserNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (M2CKickUserNotify*)[[[M2CKickUserNotify builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (M2CKickUserNotifyBuilder*) builder {
  return [[M2CKickUserNotifyBuilder alloc] init];
}
+ (M2CKickUserNotifyBuilder*) builderWithPrototype:(M2CKickUserNotify*) prototype {
  return [[M2CKickUserNotify builder] mergeFrom:prototype];
}
- (M2CKickUserNotifyBuilder*) builder {
  return [M2CKickUserNotify builder];
}
- (M2CKickUserNotifyBuilder*) toBuilder {
  return [M2CKickUserNotify builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", self.userId];
  }
  if (self.hasKickReason) {
    [output appendFormat:@"%@%@: %d\n", indent, @"kickReason", self.kickReason];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[M2CKickUserNotify class]]) {
    return NO;
  }
  M2CKickUserNotify *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || [self.userId isEqual:otherMessage.userId]) &&
      self.hasKickReason == otherMessage.hasKickReason &&
      (!self.hasKickReason || self.kickReason == otherMessage.kickReason) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [self.userId hash];
  }
  if (self.hasKickReason) {
    hashCode = hashCode * 31 + self.kickReason;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface M2CKickUserNotifyBuilder()
@property (strong) M2CKickUserNotify* result;
@end

@implementation M2CKickUserNotifyBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[M2CKickUserNotify alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (M2CKickUserNotifyBuilder*) clear {
  self.result = [[M2CKickUserNotify alloc] init];
  return self;
}
- (M2CKickUserNotifyBuilder*) clone {
  return [M2CKickUserNotify builderWithPrototype:result];
}
- (M2CKickUserNotify*) defaultInstance {
  return [M2CKickUserNotify defaultInstance];
}
- (M2CKickUserNotify*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (M2CKickUserNotify*) buildPartial {
  M2CKickUserNotify* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (M2CKickUserNotifyBuilder*) mergeFrom:(M2CKickUserNotify*) other {
  if (other == [M2CKickUserNotify defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasKickReason) {
    [self setKickReason:other.kickReason];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (M2CKickUserNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (M2CKickUserNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 18: {
        [self setUserId:[input readString]];
        break;
      }
      case 24: {
        KickReasonType value = (KickReasonType)[input readEnum];
        if (KickReasonTypeIsValidValue(value)) {
          [self setKickReason:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (M2CKickUserNotifyBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (M2CKickUserNotifyBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 7;
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (NSString*) userId {
  return result.userId;
}
- (M2CKickUserNotifyBuilder*) setUserId:(NSString*) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (M2CKickUserNotifyBuilder*) clearUserId {
  result.hasUserId = NO;
  result.userId = @"";
  return self;
}
- (BOOL) hasKickReason {
  return result.hasKickReason;
}
- (KickReasonType) kickReason {
  return result.kickReason;
}
- (M2CKickUserNotifyBuilder*) setKickReason:(KickReasonType) value {
  result.hasKickReason = YES;
  result.kickReason = value;
  return self;
}
- (M2CKickUserNotifyBuilder*) clearKickReason {
  result.hasKickReason = NO;
  result.kickReason = KickReasonTypeKickReasonDuplicateUser;
  return self;
}
@end

@interface C2MBuddyListReq ()
@property SInt32 cmdId;
@property UInt32 reqType;
@end

@implementation C2MBuddyListReq

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasReqType {
  return !!hasReqType_;
}
- (void) setHasReqType:(BOOL) value_ {
  hasReqType_ = !!value_;
}
@synthesize reqType;
- (void) dealloc {
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 8;
    self.reqType = 0;
  }
  return self;
}
static C2MBuddyListReq* defaultC2MBuddyListReqInstance = nil;
+ (void) initialize {
  if (self == [C2MBuddyListReq class]) {
    defaultC2MBuddyListReqInstance = [[C2MBuddyListReq alloc] init];
  }
}
+ (C2MBuddyListReq*) defaultInstance {
  return defaultC2MBuddyListReqInstance;
}
- (C2MBuddyListReq*) defaultInstance {
  return defaultC2MBuddyListReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasReqType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasReqType) {
    [output writeUInt32:2 value:self.reqType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasReqType) {
    size_ += computeUInt32Size(2, self.reqType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MBuddyListReq*) parseFromData:(NSData*) data {
  return (C2MBuddyListReq*)[[[C2MBuddyListReq builder] mergeFromData:data] build];
}
+ (C2MBuddyListReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MBuddyListReq*)[[[C2MBuddyListReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MBuddyListReq*) parseFromInputStream:(NSInputStream*) input {
  return (C2MBuddyListReq*)[[[C2MBuddyListReq builder] mergeFromInputStream:input] build];
}
+ (C2MBuddyListReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MBuddyListReq*)[[[C2MBuddyListReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MBuddyListReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MBuddyListReq*)[[[C2MBuddyListReq builder] mergeFromCodedInputStream:input] build];
}
+ (C2MBuddyListReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MBuddyListReq*)[[[C2MBuddyListReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MBuddyListReqBuilder*) builder {
  return [[C2MBuddyListReqBuilder alloc] init];
}
+ (C2MBuddyListReqBuilder*) builderWithPrototype:(C2MBuddyListReq*) prototype {
  return [[C2MBuddyListReq builder] mergeFrom:prototype];
}
- (C2MBuddyListReqBuilder*) builder {
  return [C2MBuddyListReq builder];
}
- (C2MBuddyListReqBuilder*) toBuilder {
  return [C2MBuddyListReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasReqType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"reqType", [NSNumber numberWithInteger:self.reqType]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MBuddyListReq class]]) {
    return NO;
  }
  C2MBuddyListReq *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasReqType == otherMessage.hasReqType &&
      (!self.hasReqType || self.reqType == otherMessage.reqType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasReqType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.reqType] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MBuddyListReqBuilder()
@property (strong) C2MBuddyListReq* result;
@end

@implementation C2MBuddyListReqBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MBuddyListReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MBuddyListReqBuilder*) clear {
  self.result = [[C2MBuddyListReq alloc] init];
  return self;
}
- (C2MBuddyListReqBuilder*) clone {
  return [C2MBuddyListReq builderWithPrototype:result];
}
- (C2MBuddyListReq*) defaultInstance {
  return [C2MBuddyListReq defaultInstance];
}
- (C2MBuddyListReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MBuddyListReq*) buildPartial {
  C2MBuddyListReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MBuddyListReqBuilder*) mergeFrom:(C2MBuddyListReq*) other {
  if (other == [C2MBuddyListReq defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasReqType) {
    [self setReqType:other.reqType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MBuddyListReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MBuddyListReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 16: {
        [self setReqType:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MBuddyListReqBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MBuddyListReqBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 8;
  return self;
}
- (BOOL) hasReqType {
  return result.hasReqType;
}
- (UInt32) reqType {
  return result.reqType;
}
- (C2MBuddyListReqBuilder*) setReqType:(UInt32) value {
  result.hasReqType = YES;
  result.reqType = value;
  return self;
}
- (C2MBuddyListReqBuilder*) clearReqType {
  result.hasReqType = NO;
  result.reqType = 0;
  return self;
}
@end

@interface M2CFriendListNotify ()
@property SInt32 cmdId;
@property (strong) NSMutableArray * friendListArray;
@end

@implementation M2CFriendListNotify

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
@synthesize friendListArray;
@dynamic friendList;
- (void) dealloc {
  self.friendListArray = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 9;
  }
  return self;
}
static M2CFriendListNotify* defaultM2CFriendListNotifyInstance = nil;
+ (void) initialize {
  if (self == [M2CFriendListNotify class]) {
    defaultM2CFriendListNotifyInstance = [[M2CFriendListNotify alloc] init];
  }
}
+ (M2CFriendListNotify*) defaultInstance {
  return defaultM2CFriendListNotifyInstance;
}
- (M2CFriendListNotify*) defaultInstance {
  return defaultM2CFriendListNotifyInstance;
}
- (NSArray *)friendList {
  return friendListArray;
}
- (ClientUserInfo*)friendListAtIndex:(NSUInteger)index {
  return [friendListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitfriendList = YES;
   [self.friendList enumerateObjectsUsingBlock:^(ClientUserInfo *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitfriendList = NO;
      *stop = YES;
    }
  }];
  if (!isInitfriendList) return isInitfriendList;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  [self.friendListArray enumerateObjectsUsingBlock:^(ClientUserInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  [self.friendListArray enumerateObjectsUsingBlock:^(ClientUserInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (M2CFriendListNotify*) parseFromData:(NSData*) data {
  return (M2CFriendListNotify*)[[[M2CFriendListNotify builder] mergeFromData:data] build];
}
+ (M2CFriendListNotify*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (M2CFriendListNotify*)[[[M2CFriendListNotify builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (M2CFriendListNotify*) parseFromInputStream:(NSInputStream*) input {
  return (M2CFriendListNotify*)[[[M2CFriendListNotify builder] mergeFromInputStream:input] build];
}
+ (M2CFriendListNotify*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (M2CFriendListNotify*)[[[M2CFriendListNotify builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (M2CFriendListNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (M2CFriendListNotify*)[[[M2CFriendListNotify builder] mergeFromCodedInputStream:input] build];
}
+ (M2CFriendListNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (M2CFriendListNotify*)[[[M2CFriendListNotify builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (M2CFriendListNotifyBuilder*) builder {
  return [[M2CFriendListNotifyBuilder alloc] init];
}
+ (M2CFriendListNotifyBuilder*) builderWithPrototype:(M2CFriendListNotify*) prototype {
  return [[M2CFriendListNotify builder] mergeFrom:prototype];
}
- (M2CFriendListNotifyBuilder*) builder {
  return [M2CFriendListNotify builder];
}
- (M2CFriendListNotifyBuilder*) toBuilder {
  return [M2CFriendListNotify builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  [self.friendListArray enumerateObjectsUsingBlock:^(ClientUserInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"friendList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[M2CFriendListNotify class]]) {
    return NO;
  }
  M2CFriendListNotify *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      [self.friendListArray isEqualToArray:otherMessage.friendListArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  [self.friendListArray enumerateObjectsUsingBlock:^(ClientUserInfo *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface M2CFriendListNotifyBuilder()
@property (strong) M2CFriendListNotify* result;
@end

@implementation M2CFriendListNotifyBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[M2CFriendListNotify alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (M2CFriendListNotifyBuilder*) clear {
  self.result = [[M2CFriendListNotify alloc] init];
  return self;
}
- (M2CFriendListNotifyBuilder*) clone {
  return [M2CFriendListNotify builderWithPrototype:result];
}
- (M2CFriendListNotify*) defaultInstance {
  return [M2CFriendListNotify defaultInstance];
}
- (M2CFriendListNotify*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (M2CFriendListNotify*) buildPartial {
  M2CFriendListNotify* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (M2CFriendListNotifyBuilder*) mergeFrom:(M2CFriendListNotify*) other {
  if (other == [M2CFriendListNotify defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.friendListArray.count > 0) {
    if (result.friendListArray == nil) {
      result.friendListArray = [[NSMutableArray alloc] initWithArray:other.friendListArray];
    } else {
      [result.friendListArray addObjectsFromArray:other.friendListArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (M2CFriendListNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (M2CFriendListNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 18: {
        ClientUserInfoBuilder* subBuilder = [ClientUserInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFriendList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (M2CFriendListNotifyBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (M2CFriendListNotifyBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 9;
  return self;
}
- (NSMutableArray *)friendList {
  return result.friendListArray;
}
- (ClientUserInfo*)friendListAtIndex:(NSUInteger)index {
  return [result friendListAtIndex:index];
}
- (M2CFriendListNotifyBuilder *)addFriendList:(ClientUserInfo*)value {
  if (result.friendListArray == nil) {
    result.friendListArray = [[NSMutableArray alloc]init];
  }
  [result.friendListArray addObject:value];
  return self;
}
- (M2CFriendListNotifyBuilder *)setFriendListArray:(NSArray *)array {
  result.friendListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (M2CFriendListNotifyBuilder *)clearFriendList {
  result.friendListArray = nil;
  return self;
}
@end

@interface M2COnlineFriendListNotify ()
@property SInt32 cmdId;
@property OnlineListType listType;
@property (strong) NSMutableArray * friendStatusListArray;
@end

@implementation M2COnlineFriendListNotify

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasListType {
  return !!hasListType_;
}
- (void) setHasListType:(BOOL) value_ {
  hasListType_ = !!value_;
}
@synthesize listType;
@synthesize friendStatusListArray;
@dynamic friendStatusList;
- (void) dealloc {
  self.friendStatusListArray = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 10;
    self.listType = OnlineListTypeOnlineListTypeFriendList;
  }
  return self;
}
static M2COnlineFriendListNotify* defaultM2COnlineFriendListNotifyInstance = nil;
+ (void) initialize {
  if (self == [M2COnlineFriendListNotify class]) {
    defaultM2COnlineFriendListNotifyInstance = [[M2COnlineFriendListNotify alloc] init];
  }
}
+ (M2COnlineFriendListNotify*) defaultInstance {
  return defaultM2COnlineFriendListNotifyInstance;
}
- (M2COnlineFriendListNotify*) defaultInstance {
  return defaultM2COnlineFriendListNotifyInstance;
}
- (NSArray *)friendStatusList {
  return friendStatusListArray;
}
- (ClientUserStat*)friendStatusListAtIndex:(NSUInteger)index {
  return [friendStatusListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasListType) {
    return NO;
  }
  __block BOOL isInitfriendStatusList = YES;
   [self.friendStatusList enumerateObjectsUsingBlock:^(ClientUserStat *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitfriendStatusList = NO;
      *stop = YES;
    }
  }];
  if (!isInitfriendStatusList) return isInitfriendStatusList;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasListType) {
    [output writeEnum:2 value:self.listType];
  }
  [self.friendStatusListArray enumerateObjectsUsingBlock:^(ClientUserStat *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasListType) {
    size_ += computeEnumSize(2, self.listType);
  }
  [self.friendStatusListArray enumerateObjectsUsingBlock:^(ClientUserStat *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (M2COnlineFriendListNotify*) parseFromData:(NSData*) data {
  return (M2COnlineFriendListNotify*)[[[M2COnlineFriendListNotify builder] mergeFromData:data] build];
}
+ (M2COnlineFriendListNotify*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (M2COnlineFriendListNotify*)[[[M2COnlineFriendListNotify builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (M2COnlineFriendListNotify*) parseFromInputStream:(NSInputStream*) input {
  return (M2COnlineFriendListNotify*)[[[M2COnlineFriendListNotify builder] mergeFromInputStream:input] build];
}
+ (M2COnlineFriendListNotify*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (M2COnlineFriendListNotify*)[[[M2COnlineFriendListNotify builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (M2COnlineFriendListNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (M2COnlineFriendListNotify*)[[[M2COnlineFriendListNotify builder] mergeFromCodedInputStream:input] build];
}
+ (M2COnlineFriendListNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (M2COnlineFriendListNotify*)[[[M2COnlineFriendListNotify builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (M2COnlineFriendListNotifyBuilder*) builder {
  return [[M2COnlineFriendListNotifyBuilder alloc] init];
}
+ (M2COnlineFriendListNotifyBuilder*) builderWithPrototype:(M2COnlineFriendListNotify*) prototype {
  return [[M2COnlineFriendListNotify builder] mergeFrom:prototype];
}
- (M2COnlineFriendListNotifyBuilder*) builder {
  return [M2COnlineFriendListNotify builder];
}
- (M2COnlineFriendListNotifyBuilder*) toBuilder {
  return [M2COnlineFriendListNotify builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasListType) {
    [output appendFormat:@"%@%@: %d\n", indent, @"listType", self.listType];
  }
  [self.friendStatusListArray enumerateObjectsUsingBlock:^(ClientUserStat *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"friendStatusList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[M2COnlineFriendListNotify class]]) {
    return NO;
  }
  M2COnlineFriendListNotify *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasListType == otherMessage.hasListType &&
      (!self.hasListType || self.listType == otherMessage.listType) &&
      [self.friendStatusListArray isEqualToArray:otherMessage.friendStatusListArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasListType) {
    hashCode = hashCode * 31 + self.listType;
  }
  [self.friendStatusListArray enumerateObjectsUsingBlock:^(ClientUserStat *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface M2COnlineFriendListNotifyBuilder()
@property (strong) M2COnlineFriendListNotify* result;
@end

@implementation M2COnlineFriendListNotifyBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[M2COnlineFriendListNotify alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (M2COnlineFriendListNotifyBuilder*) clear {
  self.result = [[M2COnlineFriendListNotify alloc] init];
  return self;
}
- (M2COnlineFriendListNotifyBuilder*) clone {
  return [M2COnlineFriendListNotify builderWithPrototype:result];
}
- (M2COnlineFriendListNotify*) defaultInstance {
  return [M2COnlineFriendListNotify defaultInstance];
}
- (M2COnlineFriendListNotify*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (M2COnlineFriendListNotify*) buildPartial {
  M2COnlineFriendListNotify* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (M2COnlineFriendListNotifyBuilder*) mergeFrom:(M2COnlineFriendListNotify*) other {
  if (other == [M2COnlineFriendListNotify defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasListType) {
    [self setListType:other.listType];
  }
  if (other.friendStatusListArray.count > 0) {
    if (result.friendStatusListArray == nil) {
      result.friendStatusListArray = [[NSMutableArray alloc] initWithArray:other.friendStatusListArray];
    } else {
      [result.friendStatusListArray addObjectsFromArray:other.friendStatusListArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (M2COnlineFriendListNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (M2COnlineFriendListNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 16: {
        OnlineListType value = (OnlineListType)[input readEnum];
        if (OnlineListTypeIsValidValue(value)) {
          [self setListType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        ClientUserStatBuilder* subBuilder = [ClientUserStat builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFriendStatusList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (M2COnlineFriendListNotifyBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (M2COnlineFriendListNotifyBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 10;
  return self;
}
- (BOOL) hasListType {
  return result.hasListType;
}
- (OnlineListType) listType {
  return result.listType;
}
- (M2COnlineFriendListNotifyBuilder*) setListType:(OnlineListType) value {
  result.hasListType = YES;
  result.listType = value;
  return self;
}
- (M2COnlineFriendListNotifyBuilder*) clearListType {
  result.hasListType = NO;
  result.listType = OnlineListTypeOnlineListTypeFriendList;
  return self;
}
- (NSMutableArray *)friendStatusList {
  return result.friendStatusListArray;
}
- (ClientUserStat*)friendStatusListAtIndex:(NSUInteger)index {
  return [result friendStatusListAtIndex:index];
}
- (M2COnlineFriendListNotifyBuilder *)addFriendStatusList:(ClientUserStat*)value {
  if (result.friendStatusListArray == nil) {
    result.friendStatusListArray = [[NSMutableArray alloc]init];
  }
  [result.friendStatusListArray addObject:value];
  return self;
}
- (M2COnlineFriendListNotifyBuilder *)setFriendStatusListArray:(NSArray *)array {
  result.friendStatusListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (M2COnlineFriendListNotifyBuilder *)clearFriendStatusList {
  result.friendStatusListArray = nil;
  return self;
}
@end

@interface M2CFriendStatNotify ()
@property SInt32 cmdId;
@property (strong) ClientUserStat* userStat;
@end

@implementation M2CFriendStatNotify

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasUserStat {
  return !!hasUserStat_;
}
- (void) setHasUserStat:(BOOL) value_ {
  hasUserStat_ = !!value_;
}
@synthesize userStat;
- (void) dealloc {
  self.userStat = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 11;
    self.userStat = [ClientUserStat defaultInstance];
  }
  return self;
}
static M2CFriendStatNotify* defaultM2CFriendStatNotifyInstance = nil;
+ (void) initialize {
  if (self == [M2CFriendStatNotify class]) {
    defaultM2CFriendStatNotifyInstance = [[M2CFriendStatNotify alloc] init];
  }
}
+ (M2CFriendStatNotify*) defaultInstance {
  return defaultM2CFriendStatNotifyInstance;
}
- (M2CFriendStatNotify*) defaultInstance {
  return defaultM2CFriendStatNotifyInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserStat) {
    return NO;
  }
  if (!self.userStat.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasUserStat) {
    [output writeMessage:2 value:self.userStat];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasUserStat) {
    size_ += computeMessageSize(2, self.userStat);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (M2CFriendStatNotify*) parseFromData:(NSData*) data {
  return (M2CFriendStatNotify*)[[[M2CFriendStatNotify builder] mergeFromData:data] build];
}
+ (M2CFriendStatNotify*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (M2CFriendStatNotify*)[[[M2CFriendStatNotify builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (M2CFriendStatNotify*) parseFromInputStream:(NSInputStream*) input {
  return (M2CFriendStatNotify*)[[[M2CFriendStatNotify builder] mergeFromInputStream:input] build];
}
+ (M2CFriendStatNotify*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (M2CFriendStatNotify*)[[[M2CFriendStatNotify builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (M2CFriendStatNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (M2CFriendStatNotify*)[[[M2CFriendStatNotify builder] mergeFromCodedInputStream:input] build];
}
+ (M2CFriendStatNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (M2CFriendStatNotify*)[[[M2CFriendStatNotify builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (M2CFriendStatNotifyBuilder*) builder {
  return [[M2CFriendStatNotifyBuilder alloc] init];
}
+ (M2CFriendStatNotifyBuilder*) builderWithPrototype:(M2CFriendStatNotify*) prototype {
  return [[M2CFriendStatNotify builder] mergeFrom:prototype];
}
- (M2CFriendStatNotifyBuilder*) builder {
  return [M2CFriendStatNotify builder];
}
- (M2CFriendStatNotifyBuilder*) toBuilder {
  return [M2CFriendStatNotify builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasUserStat) {
    [output appendFormat:@"%@%@ {\n", indent, @"userStat"];
    [self.userStat writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[M2CFriendStatNotify class]]) {
    return NO;
  }
  M2CFriendStatNotify *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasUserStat == otherMessage.hasUserStat &&
      (!self.hasUserStat || [self.userStat isEqual:otherMessage.userStat]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasUserStat) {
    hashCode = hashCode * 31 + [self.userStat hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface M2CFriendStatNotifyBuilder()
@property (strong) M2CFriendStatNotify* result;
@end

@implementation M2CFriendStatNotifyBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[M2CFriendStatNotify alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (M2CFriendStatNotifyBuilder*) clear {
  self.result = [[M2CFriendStatNotify alloc] init];
  return self;
}
- (M2CFriendStatNotifyBuilder*) clone {
  return [M2CFriendStatNotify builderWithPrototype:result];
}
- (M2CFriendStatNotify*) defaultInstance {
  return [M2CFriendStatNotify defaultInstance];
}
- (M2CFriendStatNotify*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (M2CFriendStatNotify*) buildPartial {
  M2CFriendStatNotify* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (M2CFriendStatNotifyBuilder*) mergeFrom:(M2CFriendStatNotify*) other {
  if (other == [M2CFriendStatNotify defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasUserStat) {
    [self mergeUserStat:other.userStat];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (M2CFriendStatNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (M2CFriendStatNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 18: {
        ClientUserStatBuilder* subBuilder = [ClientUserStat builder];
        if (self.hasUserStat) {
          [subBuilder mergeFrom:self.userStat];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserStat:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (M2CFriendStatNotifyBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (M2CFriendStatNotifyBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 11;
  return self;
}
- (BOOL) hasUserStat {
  return result.hasUserStat;
}
- (ClientUserStat*) userStat {
  return result.userStat;
}
- (M2CFriendStatNotifyBuilder*) setUserStat:(ClientUserStat*) value {
  result.hasUserStat = YES;
  result.userStat = value;
  return self;
}
- (M2CFriendStatNotifyBuilder*) setUserStatBuilder:(ClientUserStatBuilder*) builderForValue {
  return [self setUserStat:[builderForValue build]];
}
- (M2CFriendStatNotifyBuilder*) mergeUserStat:(ClientUserStat*) value {
  if (result.hasUserStat &&
      result.userStat != [ClientUserStat defaultInstance]) {
    result.userStat =
      [[[ClientUserStat builderWithPrototype:result.userStat] mergeFrom:value] buildPartial];
  } else {
    result.userStat = value;
  }
  result.hasUserStat = YES;
  return self;
}
- (M2CFriendStatNotifyBuilder*) clearUserStat {
  result.hasUserStat = NO;
  result.userStat = [ClientUserStat defaultInstance];
  return self;
}
@end

@interface C2MUserStatusReq ()
@property SInt32 cmdId;
@property (strong) NSString* userId;
@end

@implementation C2MUserStatusReq

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value_ {
  hasUserId_ = !!value_;
}
@synthesize userId;
- (void) dealloc {
  self.userId = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 12;
    self.userId = @"";
  }
  return self;
}
static C2MUserStatusReq* defaultC2MUserStatusReqInstance = nil;
+ (void) initialize {
  if (self == [C2MUserStatusReq class]) {
    defaultC2MUserStatusReqInstance = [[C2MUserStatusReq alloc] init];
  }
}
+ (C2MUserStatusReq*) defaultInstance {
  return defaultC2MUserStatusReqInstance;
}
- (C2MUserStatusReq*) defaultInstance {
  return defaultC2MUserStatusReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasUserId) {
    [output writeString:2 value:self.userId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasUserId) {
    size_ += computeStringSize(2, self.userId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MUserStatusReq*) parseFromData:(NSData*) data {
  return (C2MUserStatusReq*)[[[C2MUserStatusReq builder] mergeFromData:data] build];
}
+ (C2MUserStatusReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUserStatusReq*)[[[C2MUserStatusReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MUserStatusReq*) parseFromInputStream:(NSInputStream*) input {
  return (C2MUserStatusReq*)[[[C2MUserStatusReq builder] mergeFromInputStream:input] build];
}
+ (C2MUserStatusReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUserStatusReq*)[[[C2MUserStatusReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MUserStatusReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MUserStatusReq*)[[[C2MUserStatusReq builder] mergeFromCodedInputStream:input] build];
}
+ (C2MUserStatusReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUserStatusReq*)[[[C2MUserStatusReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MUserStatusReqBuilder*) builder {
  return [[C2MUserStatusReqBuilder alloc] init];
}
+ (C2MUserStatusReqBuilder*) builderWithPrototype:(C2MUserStatusReq*) prototype {
  return [[C2MUserStatusReq builder] mergeFrom:prototype];
}
- (C2MUserStatusReqBuilder*) builder {
  return [C2MUserStatusReq builder];
}
- (C2MUserStatusReqBuilder*) toBuilder {
  return [C2MUserStatusReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", self.userId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MUserStatusReq class]]) {
    return NO;
  }
  C2MUserStatusReq *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || [self.userId isEqual:otherMessage.userId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [self.userId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MUserStatusReqBuilder()
@property (strong) C2MUserStatusReq* result;
@end

@implementation C2MUserStatusReqBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MUserStatusReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MUserStatusReqBuilder*) clear {
  self.result = [[C2MUserStatusReq alloc] init];
  return self;
}
- (C2MUserStatusReqBuilder*) clone {
  return [C2MUserStatusReq builderWithPrototype:result];
}
- (C2MUserStatusReq*) defaultInstance {
  return [C2MUserStatusReq defaultInstance];
}
- (C2MUserStatusReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MUserStatusReq*) buildPartial {
  C2MUserStatusReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MUserStatusReqBuilder*) mergeFrom:(C2MUserStatusReq*) other {
  if (other == [C2MUserStatusReq defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MUserStatusReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MUserStatusReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 18: {
        [self setUserId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MUserStatusReqBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MUserStatusReqBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 12;
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (NSString*) userId {
  return result.userId;
}
- (C2MUserStatusReqBuilder*) setUserId:(NSString*) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (C2MUserStatusReqBuilder*) clearUserId {
  result.hasUserId = NO;
  result.userId = @"";
  return self;
}
@end

@interface C2MUserStatusRsp ()
@property SInt32 cmdId;
@property (strong) ClientUserStat* userStat;
@end

@implementation C2MUserStatusRsp

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasUserStat {
  return !!hasUserStat_;
}
- (void) setHasUserStat:(BOOL) value_ {
  hasUserStat_ = !!value_;
}
@synthesize userStat;
- (void) dealloc {
  self.userStat = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 13;
    self.userStat = [ClientUserStat defaultInstance];
  }
  return self;
}
static C2MUserStatusRsp* defaultC2MUserStatusRspInstance = nil;
+ (void) initialize {
  if (self == [C2MUserStatusRsp class]) {
    defaultC2MUserStatusRspInstance = [[C2MUserStatusRsp alloc] init];
  }
}
+ (C2MUserStatusRsp*) defaultInstance {
  return defaultC2MUserStatusRspInstance;
}
- (C2MUserStatusRsp*) defaultInstance {
  return defaultC2MUserStatusRspInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserStat) {
    return NO;
  }
  if (!self.userStat.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasUserStat) {
    [output writeMessage:2 value:self.userStat];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasUserStat) {
    size_ += computeMessageSize(2, self.userStat);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MUserStatusRsp*) parseFromData:(NSData*) data {
  return (C2MUserStatusRsp*)[[[C2MUserStatusRsp builder] mergeFromData:data] build];
}
+ (C2MUserStatusRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUserStatusRsp*)[[[C2MUserStatusRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MUserStatusRsp*) parseFromInputStream:(NSInputStream*) input {
  return (C2MUserStatusRsp*)[[[C2MUserStatusRsp builder] mergeFromInputStream:input] build];
}
+ (C2MUserStatusRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUserStatusRsp*)[[[C2MUserStatusRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MUserStatusRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MUserStatusRsp*)[[[C2MUserStatusRsp builder] mergeFromCodedInputStream:input] build];
}
+ (C2MUserStatusRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUserStatusRsp*)[[[C2MUserStatusRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MUserStatusRspBuilder*) builder {
  return [[C2MUserStatusRspBuilder alloc] init];
}
+ (C2MUserStatusRspBuilder*) builderWithPrototype:(C2MUserStatusRsp*) prototype {
  return [[C2MUserStatusRsp builder] mergeFrom:prototype];
}
- (C2MUserStatusRspBuilder*) builder {
  return [C2MUserStatusRsp builder];
}
- (C2MUserStatusRspBuilder*) toBuilder {
  return [C2MUserStatusRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasUserStat) {
    [output appendFormat:@"%@%@ {\n", indent, @"userStat"];
    [self.userStat writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MUserStatusRsp class]]) {
    return NO;
  }
  C2MUserStatusRsp *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasUserStat == otherMessage.hasUserStat &&
      (!self.hasUserStat || [self.userStat isEqual:otherMessage.userStat]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasUserStat) {
    hashCode = hashCode * 31 + [self.userStat hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MUserStatusRspBuilder()
@property (strong) C2MUserStatusRsp* result;
@end

@implementation C2MUserStatusRspBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MUserStatusRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MUserStatusRspBuilder*) clear {
  self.result = [[C2MUserStatusRsp alloc] init];
  return self;
}
- (C2MUserStatusRspBuilder*) clone {
  return [C2MUserStatusRsp builderWithPrototype:result];
}
- (C2MUserStatusRsp*) defaultInstance {
  return [C2MUserStatusRsp defaultInstance];
}
- (C2MUserStatusRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MUserStatusRsp*) buildPartial {
  C2MUserStatusRsp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MUserStatusRspBuilder*) mergeFrom:(C2MUserStatusRsp*) other {
  if (other == [C2MUserStatusRsp defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasUserStat) {
    [self mergeUserStat:other.userStat];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MUserStatusRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MUserStatusRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 18: {
        ClientUserStatBuilder* subBuilder = [ClientUserStat builder];
        if (self.hasUserStat) {
          [subBuilder mergeFrom:self.userStat];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserStat:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MUserStatusRspBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MUserStatusRspBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 13;
  return self;
}
- (BOOL) hasUserStat {
  return result.hasUserStat;
}
- (ClientUserStat*) userStat {
  return result.userStat;
}
- (C2MUserStatusRspBuilder*) setUserStat:(ClientUserStat*) value {
  result.hasUserStat = YES;
  result.userStat = value;
  return self;
}
- (C2MUserStatusRspBuilder*) setUserStatBuilder:(ClientUserStatBuilder*) builderForValue {
  return [self setUserStat:[builderForValue build]];
}
- (C2MUserStatusRspBuilder*) mergeUserStat:(ClientUserStat*) value {
  if (result.hasUserStat &&
      result.userStat != [ClientUserStat defaultInstance]) {
    result.userStat =
      [[[ClientUserStat builderWithPrototype:result.userStat] mergeFrom:value] buildPartial];
  } else {
    result.userStat = value;
  }
  result.hasUserStat = YES;
  return self;
}
- (C2MUserStatusRspBuilder*) clearUserStat {
  result.hasUserStat = NO;
  result.userStat = [ClientUserStat defaultInstance];
  return self;
}
@end

@interface C2MUserListStatReq ()
@property SInt32 cmdId;
@property (strong) NSMutableArray * userListArray;
@end

@implementation C2MUserListStatReq

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
@synthesize userListArray;
@dynamic userList;
- (void) dealloc {
  self.userListArray = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 14;
  }
  return self;
}
static C2MUserListStatReq* defaultC2MUserListStatReqInstance = nil;
+ (void) initialize {
  if (self == [C2MUserListStatReq class]) {
    defaultC2MUserListStatReqInstance = [[C2MUserListStatReq alloc] init];
  }
}
+ (C2MUserListStatReq*) defaultInstance {
  return defaultC2MUserListStatReqInstance;
}
- (C2MUserListStatReq*) defaultInstance {
  return defaultC2MUserListStatReqInstance;
}
- (NSArray *)userList {
  return userListArray;
}
- (NSString*)userListAtIndex:(NSUInteger)index {
  return [userListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  [self.userListArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.userListArray.count;
    [self.userListArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MUserListStatReq*) parseFromData:(NSData*) data {
  return (C2MUserListStatReq*)[[[C2MUserListStatReq builder] mergeFromData:data] build];
}
+ (C2MUserListStatReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUserListStatReq*)[[[C2MUserListStatReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MUserListStatReq*) parseFromInputStream:(NSInputStream*) input {
  return (C2MUserListStatReq*)[[[C2MUserListStatReq builder] mergeFromInputStream:input] build];
}
+ (C2MUserListStatReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUserListStatReq*)[[[C2MUserListStatReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MUserListStatReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MUserListStatReq*)[[[C2MUserListStatReq builder] mergeFromCodedInputStream:input] build];
}
+ (C2MUserListStatReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUserListStatReq*)[[[C2MUserListStatReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MUserListStatReqBuilder*) builder {
  return [[C2MUserListStatReqBuilder alloc] init];
}
+ (C2MUserListStatReqBuilder*) builderWithPrototype:(C2MUserListStatReq*) prototype {
  return [[C2MUserListStatReq builder] mergeFrom:prototype];
}
- (C2MUserListStatReqBuilder*) builder {
  return [C2MUserListStatReq builder];
}
- (C2MUserListStatReqBuilder*) toBuilder {
  return [C2MUserListStatReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  [self.userListArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userList", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MUserListStatReq class]]) {
    return NO;
  }
  C2MUserListStatReq *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      [self.userListArray isEqualToArray:otherMessage.userListArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  [self.userListArray enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MUserListStatReqBuilder()
@property (strong) C2MUserListStatReq* result;
@end

@implementation C2MUserListStatReqBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MUserListStatReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MUserListStatReqBuilder*) clear {
  self.result = [[C2MUserListStatReq alloc] init];
  return self;
}
- (C2MUserListStatReqBuilder*) clone {
  return [C2MUserListStatReq builderWithPrototype:result];
}
- (C2MUserListStatReq*) defaultInstance {
  return [C2MUserListStatReq defaultInstance];
}
- (C2MUserListStatReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MUserListStatReq*) buildPartial {
  C2MUserListStatReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MUserListStatReqBuilder*) mergeFrom:(C2MUserListStatReq*) other {
  if (other == [C2MUserListStatReq defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.userListArray.count > 0) {
    if (result.userListArray == nil) {
      result.userListArray = [[NSMutableArray alloc] initWithArray:other.userListArray];
    } else {
      [result.userListArray addObjectsFromArray:other.userListArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MUserListStatReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MUserListStatReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 18: {
        [self addUserList:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MUserListStatReqBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MUserListStatReqBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 14;
  return self;
}
- (NSMutableArray *)userList {
  return result.userListArray;
}
- (NSString*)userListAtIndex:(NSUInteger)index {
  return [result userListAtIndex:index];
}
- (C2MUserListStatReqBuilder *)addUserList:(NSString*)value {
  if (result.userListArray == nil) {
    result.userListArray = [[NSMutableArray alloc]init];
  }
  [result.userListArray addObject:value];
  return self;
}
- (C2MUserListStatReqBuilder *)setUserListArray:(NSArray *)array {
  result.userListArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (C2MUserListStatReqBuilder *)clearUserList {
  result.userListArray = nil;
  return self;
}
@end

@interface C2MUserListStatRsp ()
@property SInt32 cmdId;
@property (strong) NSMutableArray * userStatListArray;
@end

@implementation C2MUserListStatRsp

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
@synthesize userStatListArray;
@dynamic userStatList;
- (void) dealloc {
  self.userStatListArray = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 15;
  }
  return self;
}
static C2MUserListStatRsp* defaultC2MUserListStatRspInstance = nil;
+ (void) initialize {
  if (self == [C2MUserListStatRsp class]) {
    defaultC2MUserListStatRspInstance = [[C2MUserListStatRsp alloc] init];
  }
}
+ (C2MUserListStatRsp*) defaultInstance {
  return defaultC2MUserListStatRspInstance;
}
- (C2MUserListStatRsp*) defaultInstance {
  return defaultC2MUserListStatRspInstance;
}
- (NSArray *)userStatList {
  return userStatListArray;
}
- (ClientUserStat*)userStatListAtIndex:(NSUInteger)index {
  return [userStatListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInituserStatList = YES;
   [self.userStatList enumerateObjectsUsingBlock:^(ClientUserStat *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInituserStatList = NO;
      *stop = YES;
    }
  }];
  if (!isInituserStatList) return isInituserStatList;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  [self.userStatListArray enumerateObjectsUsingBlock:^(ClientUserStat *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  [self.userStatListArray enumerateObjectsUsingBlock:^(ClientUserStat *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MUserListStatRsp*) parseFromData:(NSData*) data {
  return (C2MUserListStatRsp*)[[[C2MUserListStatRsp builder] mergeFromData:data] build];
}
+ (C2MUserListStatRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUserListStatRsp*)[[[C2MUserListStatRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MUserListStatRsp*) parseFromInputStream:(NSInputStream*) input {
  return (C2MUserListStatRsp*)[[[C2MUserListStatRsp builder] mergeFromInputStream:input] build];
}
+ (C2MUserListStatRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUserListStatRsp*)[[[C2MUserListStatRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MUserListStatRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MUserListStatRsp*)[[[C2MUserListStatRsp builder] mergeFromCodedInputStream:input] build];
}
+ (C2MUserListStatRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUserListStatRsp*)[[[C2MUserListStatRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MUserListStatRspBuilder*) builder {
  return [[C2MUserListStatRspBuilder alloc] init];
}
+ (C2MUserListStatRspBuilder*) builderWithPrototype:(C2MUserListStatRsp*) prototype {
  return [[C2MUserListStatRsp builder] mergeFrom:prototype];
}
- (C2MUserListStatRspBuilder*) builder {
  return [C2MUserListStatRsp builder];
}
- (C2MUserListStatRspBuilder*) toBuilder {
  return [C2MUserListStatRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  [self.userStatListArray enumerateObjectsUsingBlock:^(ClientUserStat *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"userStatList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MUserListStatRsp class]]) {
    return NO;
  }
  C2MUserListStatRsp *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      [self.userStatListArray isEqualToArray:otherMessage.userStatListArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  [self.userStatListArray enumerateObjectsUsingBlock:^(ClientUserStat *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MUserListStatRspBuilder()
@property (strong) C2MUserListStatRsp* result;
@end

@implementation C2MUserListStatRspBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MUserListStatRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MUserListStatRspBuilder*) clear {
  self.result = [[C2MUserListStatRsp alloc] init];
  return self;
}
- (C2MUserListStatRspBuilder*) clone {
  return [C2MUserListStatRsp builderWithPrototype:result];
}
- (C2MUserListStatRsp*) defaultInstance {
  return [C2MUserListStatRsp defaultInstance];
}
- (C2MUserListStatRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MUserListStatRsp*) buildPartial {
  C2MUserListStatRsp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MUserListStatRspBuilder*) mergeFrom:(C2MUserListStatRsp*) other {
  if (other == [C2MUserListStatRsp defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.userStatListArray.count > 0) {
    if (result.userStatListArray == nil) {
      result.userStatListArray = [[NSMutableArray alloc] initWithArray:other.userStatListArray];
    } else {
      [result.userStatListArray addObjectsFromArray:other.userStatListArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MUserListStatRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MUserListStatRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 18: {
        ClientUserStatBuilder* subBuilder = [ClientUserStat builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserStatList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MUserListStatRspBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MUserListStatRspBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 15;
  return self;
}
- (NSMutableArray *)userStatList {
  return result.userStatListArray;
}
- (ClientUserStat*)userStatListAtIndex:(NSUInteger)index {
  return [result userStatListAtIndex:index];
}
- (C2MUserListStatRspBuilder *)addUserStatList:(ClientUserStat*)value {
  if (result.userStatListArray == nil) {
    result.userStatListArray = [[NSMutableArray alloc]init];
  }
  [result.userStatListArray addObject:value];
  return self;
}
- (C2MUserListStatRspBuilder *)setUserStatListArray:(NSArray *)array {
  result.userStatListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (C2MUserListStatRspBuilder *)clearUserStatList {
  result.userStatListArray = nil;
  return self;
}
@end

@interface ClientMsgData ()
@property SInt32 cmdId;
@property UInt32 seqNo;
@property (strong) NSString* fromUserId;
@property (strong) NSString* toUserId;
@property UInt32 createTime;
@property UInt32 msgType;
@property UInt32 renderType;
@property (strong) NSString* msgData;
@property (strong) NSData* attachData;
@end

@implementation ClientMsgData

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasSeqNo {
  return !!hasSeqNo_;
}
- (void) setHasSeqNo:(BOOL) value_ {
  hasSeqNo_ = !!value_;
}
@synthesize seqNo;
- (BOOL) hasFromUserId {
  return !!hasFromUserId_;
}
- (void) setHasFromUserId:(BOOL) value_ {
  hasFromUserId_ = !!value_;
}
@synthesize fromUserId;
- (BOOL) hasToUserId {
  return !!hasToUserId_;
}
- (void) setHasToUserId:(BOOL) value_ {
  hasToUserId_ = !!value_;
}
@synthesize toUserId;
- (BOOL) hasCreateTime {
  return !!hasCreateTime_;
}
- (void) setHasCreateTime:(BOOL) value_ {
  hasCreateTime_ = !!value_;
}
@synthesize createTime;
- (BOOL) hasMsgType {
  return !!hasMsgType_;
}
- (void) setHasMsgType:(BOOL) value_ {
  hasMsgType_ = !!value_;
}
@synthesize msgType;
- (BOOL) hasRenderType {
  return !!hasRenderType_;
}
- (void) setHasRenderType:(BOOL) value_ {
  hasRenderType_ = !!value_;
}
@synthesize renderType;
- (BOOL) hasMsgData {
  return !!hasMsgData_;
}
- (void) setHasMsgData:(BOOL) value_ {
  hasMsgData_ = !!value_;
}
@synthesize msgData;
- (BOOL) hasAttachData {
  return !!hasAttachData_;
}
- (void) setHasAttachData:(BOOL) value_ {
  hasAttachData_ = !!value_;
}
@synthesize attachData;
- (void) dealloc {
  self.fromUserId = nil;
  self.toUserId = nil;
  self.msgData = nil;
  self.attachData = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 16;
    self.seqNo = 0;
    self.fromUserId = @"";
    self.toUserId = @"";
    self.createTime = 0;
    self.msgType = 0;
    self.renderType = 0;
    self.msgData = @"";
    self.attachData = [NSData data];
  }
  return self;
}
static ClientMsgData* defaultClientMsgDataInstance = nil;
+ (void) initialize {
  if (self == [ClientMsgData class]) {
    defaultClientMsgDataInstance = [[ClientMsgData alloc] init];
  }
}
+ (ClientMsgData*) defaultInstance {
  return defaultClientMsgDataInstance;
}
- (ClientMsgData*) defaultInstance {
  return defaultClientMsgDataInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSeqNo) {
    return NO;
  }
  if (!self.hasFromUserId) {
    return NO;
  }
  if (!self.hasToUserId) {
    return NO;
  }
  if (!self.hasCreateTime) {
    return NO;
  }
  if (!self.hasMsgType) {
    return NO;
  }
  if (!self.hasRenderType) {
    return NO;
  }
  if (!self.hasMsgData) {
    return NO;
  }
  if (!self.hasAttachData) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasSeqNo) {
    [output writeUInt32:2 value:self.seqNo];
  }
  if (self.hasFromUserId) {
    [output writeString:3 value:self.fromUserId];
  }
  if (self.hasToUserId) {
    [output writeString:4 value:self.toUserId];
  }
  if (self.hasCreateTime) {
    [output writeUInt32:5 value:self.createTime];
  }
  if (self.hasMsgType) {
    [output writeUInt32:6 value:self.msgType];
  }
  if (self.hasRenderType) {
    [output writeUInt32:7 value:self.renderType];
  }
  if (self.hasMsgData) {
    [output writeString:8 value:self.msgData];
  }
  if (self.hasAttachData) {
    [output writeData:9 value:self.attachData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasSeqNo) {
    size_ += computeUInt32Size(2, self.seqNo);
  }
  if (self.hasFromUserId) {
    size_ += computeStringSize(3, self.fromUserId);
  }
  if (self.hasToUserId) {
    size_ += computeStringSize(4, self.toUserId);
  }
  if (self.hasCreateTime) {
    size_ += computeUInt32Size(5, self.createTime);
  }
  if (self.hasMsgType) {
    size_ += computeUInt32Size(6, self.msgType);
  }
  if (self.hasRenderType) {
    size_ += computeUInt32Size(7, self.renderType);
  }
  if (self.hasMsgData) {
    size_ += computeStringSize(8, self.msgData);
  }
  if (self.hasAttachData) {
    size_ += computeDataSize(9, self.attachData);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ClientMsgData*) parseFromData:(NSData*) data {
  return (ClientMsgData*)[[[ClientMsgData builder] mergeFromData:data] build];
}
+ (ClientMsgData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientMsgData*)[[[ClientMsgData builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClientMsgData*) parseFromInputStream:(NSInputStream*) input {
  return (ClientMsgData*)[[[ClientMsgData builder] mergeFromInputStream:input] build];
}
+ (ClientMsgData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientMsgData*)[[[ClientMsgData builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClientMsgData*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClientMsgData*)[[[ClientMsgData builder] mergeFromCodedInputStream:input] build];
}
+ (ClientMsgData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientMsgData*)[[[ClientMsgData builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClientMsgDataBuilder*) builder {
  return [[ClientMsgDataBuilder alloc] init];
}
+ (ClientMsgDataBuilder*) builderWithPrototype:(ClientMsgData*) prototype {
  return [[ClientMsgData builder] mergeFrom:prototype];
}
- (ClientMsgDataBuilder*) builder {
  return [ClientMsgData builder];
}
- (ClientMsgDataBuilder*) toBuilder {
  return [ClientMsgData builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasSeqNo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"seqNo", [NSNumber numberWithInteger:self.seqNo]];
  }
  if (self.hasFromUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromUserId", self.fromUserId];
  }
  if (self.hasToUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"toUserId", self.toUserId];
  }
  if (self.hasCreateTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createTime", [NSNumber numberWithInteger:self.createTime]];
  }
  if (self.hasMsgType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgType", [NSNumber numberWithInteger:self.msgType]];
  }
  if (self.hasRenderType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"renderType", [NSNumber numberWithInteger:self.renderType]];
  }
  if (self.hasMsgData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgData", self.msgData];
  }
  if (self.hasAttachData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachData", self.attachData];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ClientMsgData class]]) {
    return NO;
  }
  ClientMsgData *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasSeqNo == otherMessage.hasSeqNo &&
      (!self.hasSeqNo || self.seqNo == otherMessage.seqNo) &&
      self.hasFromUserId == otherMessage.hasFromUserId &&
      (!self.hasFromUserId || [self.fromUserId isEqual:otherMessage.fromUserId]) &&
      self.hasToUserId == otherMessage.hasToUserId &&
      (!self.hasToUserId || [self.toUserId isEqual:otherMessage.toUserId]) &&
      self.hasCreateTime == otherMessage.hasCreateTime &&
      (!self.hasCreateTime || self.createTime == otherMessage.createTime) &&
      self.hasMsgType == otherMessage.hasMsgType &&
      (!self.hasMsgType || self.msgType == otherMessage.msgType) &&
      self.hasRenderType == otherMessage.hasRenderType &&
      (!self.hasRenderType || self.renderType == otherMessage.renderType) &&
      self.hasMsgData == otherMessage.hasMsgData &&
      (!self.hasMsgData || [self.msgData isEqual:otherMessage.msgData]) &&
      self.hasAttachData == otherMessage.hasAttachData &&
      (!self.hasAttachData || [self.attachData isEqual:otherMessage.attachData]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasSeqNo) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.seqNo] hash];
  }
  if (self.hasFromUserId) {
    hashCode = hashCode * 31 + [self.fromUserId hash];
  }
  if (self.hasToUserId) {
    hashCode = hashCode * 31 + [self.toUserId hash];
  }
  if (self.hasCreateTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.createTime] hash];
  }
  if (self.hasMsgType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.msgType] hash];
  }
  if (self.hasRenderType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.renderType] hash];
  }
  if (self.hasMsgData) {
    hashCode = hashCode * 31 + [self.msgData hash];
  }
  if (self.hasAttachData) {
    hashCode = hashCode * 31 + [self.attachData hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ClientMsgDataBuilder()
@property (strong) ClientMsgData* result;
@end

@implementation ClientMsgDataBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[ClientMsgData alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ClientMsgDataBuilder*) clear {
  self.result = [[ClientMsgData alloc] init];
  return self;
}
- (ClientMsgDataBuilder*) clone {
  return [ClientMsgData builderWithPrototype:result];
}
- (ClientMsgData*) defaultInstance {
  return [ClientMsgData defaultInstance];
}
- (ClientMsgData*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClientMsgData*) buildPartial {
  ClientMsgData* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ClientMsgDataBuilder*) mergeFrom:(ClientMsgData*) other {
  if (other == [ClientMsgData defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasSeqNo) {
    [self setSeqNo:other.seqNo];
  }
  if (other.hasFromUserId) {
    [self setFromUserId:other.fromUserId];
  }
  if (other.hasToUserId) {
    [self setToUserId:other.toUserId];
  }
  if (other.hasCreateTime) {
    [self setCreateTime:other.createTime];
  }
  if (other.hasMsgType) {
    [self setMsgType:other.msgType];
  }
  if (other.hasRenderType) {
    [self setRenderType:other.renderType];
  }
  if (other.hasMsgData) {
    [self setMsgData:other.msgData];
  }
  if (other.hasAttachData) {
    [self setAttachData:other.attachData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClientMsgDataBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClientMsgDataBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 16: {
        [self setSeqNo:[input readUInt32]];
        break;
      }
      case 26: {
        [self setFromUserId:[input readString]];
        break;
      }
      case 34: {
        [self setToUserId:[input readString]];
        break;
      }
      case 40: {
        [self setCreateTime:[input readUInt32]];
        break;
      }
      case 48: {
        [self setMsgType:[input readUInt32]];
        break;
      }
      case 56: {
        [self setRenderType:[input readUInt32]];
        break;
      }
      case 66: {
        [self setMsgData:[input readString]];
        break;
      }
      case 74: {
        [self setAttachData:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (ClientMsgDataBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (ClientMsgDataBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 16;
  return self;
}
- (BOOL) hasSeqNo {
  return result.hasSeqNo;
}
- (UInt32) seqNo {
  return result.seqNo;
}
- (ClientMsgDataBuilder*) setSeqNo:(UInt32) value {
  result.hasSeqNo = YES;
  result.seqNo = value;
  return self;
}
- (ClientMsgDataBuilder*) clearSeqNo {
  result.hasSeqNo = NO;
  result.seqNo = 0;
  return self;
}
- (BOOL) hasFromUserId {
  return result.hasFromUserId;
}
- (NSString*) fromUserId {
  return result.fromUserId;
}
- (ClientMsgDataBuilder*) setFromUserId:(NSString*) value {
  result.hasFromUserId = YES;
  result.fromUserId = value;
  return self;
}
- (ClientMsgDataBuilder*) clearFromUserId {
  result.hasFromUserId = NO;
  result.fromUserId = @"";
  return self;
}
- (BOOL) hasToUserId {
  return result.hasToUserId;
}
- (NSString*) toUserId {
  return result.toUserId;
}
- (ClientMsgDataBuilder*) setToUserId:(NSString*) value {
  result.hasToUserId = YES;
  result.toUserId = value;
  return self;
}
- (ClientMsgDataBuilder*) clearToUserId {
  result.hasToUserId = NO;
  result.toUserId = @"";
  return self;
}
- (BOOL) hasCreateTime {
  return result.hasCreateTime;
}
- (UInt32) createTime {
  return result.createTime;
}
- (ClientMsgDataBuilder*) setCreateTime:(UInt32) value {
  result.hasCreateTime = YES;
  result.createTime = value;
  return self;
}
- (ClientMsgDataBuilder*) clearCreateTime {
  result.hasCreateTime = NO;
  result.createTime = 0;
  return self;
}
- (BOOL) hasMsgType {
  return result.hasMsgType;
}
- (UInt32) msgType {
  return result.msgType;
}
- (ClientMsgDataBuilder*) setMsgType:(UInt32) value {
  result.hasMsgType = YES;
  result.msgType = value;
  return self;
}
- (ClientMsgDataBuilder*) clearMsgType {
  result.hasMsgType = NO;
  result.msgType = 0;
  return self;
}
- (BOOL) hasRenderType {
  return result.hasRenderType;
}
- (UInt32) renderType {
  return result.renderType;
}
- (ClientMsgDataBuilder*) setRenderType:(UInt32) value {
  result.hasRenderType = YES;
  result.renderType = value;
  return self;
}
- (ClientMsgDataBuilder*) clearRenderType {
  result.hasRenderType = NO;
  result.renderType = 0;
  return self;
}
- (BOOL) hasMsgData {
  return result.hasMsgData;
}
- (NSString*) msgData {
  return result.msgData;
}
- (ClientMsgDataBuilder*) setMsgData:(NSString*) value {
  result.hasMsgData = YES;
  result.msgData = value;
  return self;
}
- (ClientMsgDataBuilder*) clearMsgData {
  result.hasMsgData = NO;
  result.msgData = @"";
  return self;
}
- (BOOL) hasAttachData {
  return result.hasAttachData;
}
- (NSData*) attachData {
  return result.attachData;
}
- (ClientMsgDataBuilder*) setAttachData:(NSData*) value {
  result.hasAttachData = YES;
  result.attachData = value;
  return self;
}
- (ClientMsgDataBuilder*) clearAttachData {
  result.hasAttachData = NO;
  result.attachData = [NSData data];
  return self;
}
@end

@interface ClientMsgDataAck ()
@property SInt32 cmdId;
@property UInt32 seqNo;
@property (strong) NSString* fromUserId;
@end

@implementation ClientMsgDataAck

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasSeqNo {
  return !!hasSeqNo_;
}
- (void) setHasSeqNo:(BOOL) value_ {
  hasSeqNo_ = !!value_;
}
@synthesize seqNo;
- (BOOL) hasFromUserId {
  return !!hasFromUserId_;
}
- (void) setHasFromUserId:(BOOL) value_ {
  hasFromUserId_ = !!value_;
}
@synthesize fromUserId;
- (void) dealloc {
  self.fromUserId = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 17;
    self.seqNo = 0;
    self.fromUserId = @"";
  }
  return self;
}
static ClientMsgDataAck* defaultClientMsgDataAckInstance = nil;
+ (void) initialize {
  if (self == [ClientMsgDataAck class]) {
    defaultClientMsgDataAckInstance = [[ClientMsgDataAck alloc] init];
  }
}
+ (ClientMsgDataAck*) defaultInstance {
  return defaultClientMsgDataAckInstance;
}
- (ClientMsgDataAck*) defaultInstance {
  return defaultClientMsgDataAckInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSeqNo) {
    return NO;
  }
  if (!self.hasFromUserId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasSeqNo) {
    [output writeUInt32:2 value:self.seqNo];
  }
  if (self.hasFromUserId) {
    [output writeString:3 value:self.fromUserId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasSeqNo) {
    size_ += computeUInt32Size(2, self.seqNo);
  }
  if (self.hasFromUserId) {
    size_ += computeStringSize(3, self.fromUserId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ClientMsgDataAck*) parseFromData:(NSData*) data {
  return (ClientMsgDataAck*)[[[ClientMsgDataAck builder] mergeFromData:data] build];
}
+ (ClientMsgDataAck*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientMsgDataAck*)[[[ClientMsgDataAck builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClientMsgDataAck*) parseFromInputStream:(NSInputStream*) input {
  return (ClientMsgDataAck*)[[[ClientMsgDataAck builder] mergeFromInputStream:input] build];
}
+ (ClientMsgDataAck*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientMsgDataAck*)[[[ClientMsgDataAck builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClientMsgDataAck*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClientMsgDataAck*)[[[ClientMsgDataAck builder] mergeFromCodedInputStream:input] build];
}
+ (ClientMsgDataAck*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientMsgDataAck*)[[[ClientMsgDataAck builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClientMsgDataAckBuilder*) builder {
  return [[ClientMsgDataAckBuilder alloc] init];
}
+ (ClientMsgDataAckBuilder*) builderWithPrototype:(ClientMsgDataAck*) prototype {
  return [[ClientMsgDataAck builder] mergeFrom:prototype];
}
- (ClientMsgDataAckBuilder*) builder {
  return [ClientMsgDataAck builder];
}
- (ClientMsgDataAckBuilder*) toBuilder {
  return [ClientMsgDataAck builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasSeqNo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"seqNo", [NSNumber numberWithInteger:self.seqNo]];
  }
  if (self.hasFromUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromUserId", self.fromUserId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ClientMsgDataAck class]]) {
    return NO;
  }
  ClientMsgDataAck *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasSeqNo == otherMessage.hasSeqNo &&
      (!self.hasSeqNo || self.seqNo == otherMessage.seqNo) &&
      self.hasFromUserId == otherMessage.hasFromUserId &&
      (!self.hasFromUserId || [self.fromUserId isEqual:otherMessage.fromUserId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasSeqNo) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.seqNo] hash];
  }
  if (self.hasFromUserId) {
    hashCode = hashCode * 31 + [self.fromUserId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ClientMsgDataAckBuilder()
@property (strong) ClientMsgDataAck* result;
@end

@implementation ClientMsgDataAckBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[ClientMsgDataAck alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ClientMsgDataAckBuilder*) clear {
  self.result = [[ClientMsgDataAck alloc] init];
  return self;
}
- (ClientMsgDataAckBuilder*) clone {
  return [ClientMsgDataAck builderWithPrototype:result];
}
- (ClientMsgDataAck*) defaultInstance {
  return [ClientMsgDataAck defaultInstance];
}
- (ClientMsgDataAck*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClientMsgDataAck*) buildPartial {
  ClientMsgDataAck* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ClientMsgDataAckBuilder*) mergeFrom:(ClientMsgDataAck*) other {
  if (other == [ClientMsgDataAck defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasSeqNo) {
    [self setSeqNo:other.seqNo];
  }
  if (other.hasFromUserId) {
    [self setFromUserId:other.fromUserId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClientMsgDataAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClientMsgDataAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 16: {
        [self setSeqNo:[input readUInt32]];
        break;
      }
      case 26: {
        [self setFromUserId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (ClientMsgDataAckBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (ClientMsgDataAckBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 17;
  return self;
}
- (BOOL) hasSeqNo {
  return result.hasSeqNo;
}
- (UInt32) seqNo {
  return result.seqNo;
}
- (ClientMsgDataAckBuilder*) setSeqNo:(UInt32) value {
  result.hasSeqNo = YES;
  result.seqNo = value;
  return self;
}
- (ClientMsgDataAckBuilder*) clearSeqNo {
  result.hasSeqNo = NO;
  result.seqNo = 0;
  return self;
}
- (BOOL) hasFromUserId {
  return result.hasFromUserId;
}
- (NSString*) fromUserId {
  return result.fromUserId;
}
- (ClientMsgDataAckBuilder*) setFromUserId:(NSString*) value {
  result.hasFromUserId = YES;
  result.fromUserId = value;
  return self;
}
- (ClientMsgDataAckBuilder*) clearFromUserId {
  result.hasFromUserId = NO;
  result.fromUserId = @"";
  return self;
}
@end

@interface ClientMsgReadAck ()
@property SInt32 cmdId;
@property (strong) NSString* fromUserId;
@end

@implementation ClientMsgReadAck

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasFromUserId {
  return !!hasFromUserId_;
}
- (void) setHasFromUserId:(BOOL) value_ {
  hasFromUserId_ = !!value_;
}
@synthesize fromUserId;
- (void) dealloc {
  self.fromUserId = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 18;
    self.fromUserId = @"";
  }
  return self;
}
static ClientMsgReadAck* defaultClientMsgReadAckInstance = nil;
+ (void) initialize {
  if (self == [ClientMsgReadAck class]) {
    defaultClientMsgReadAckInstance = [[ClientMsgReadAck alloc] init];
  }
}
+ (ClientMsgReadAck*) defaultInstance {
  return defaultClientMsgReadAckInstance;
}
- (ClientMsgReadAck*) defaultInstance {
  return defaultClientMsgReadAckInstance;
}
- (BOOL) isInitialized {
  if (!self.hasFromUserId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasFromUserId) {
    [output writeString:2 value:self.fromUserId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasFromUserId) {
    size_ += computeStringSize(2, self.fromUserId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ClientMsgReadAck*) parseFromData:(NSData*) data {
  return (ClientMsgReadAck*)[[[ClientMsgReadAck builder] mergeFromData:data] build];
}
+ (ClientMsgReadAck*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientMsgReadAck*)[[[ClientMsgReadAck builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClientMsgReadAck*) parseFromInputStream:(NSInputStream*) input {
  return (ClientMsgReadAck*)[[[ClientMsgReadAck builder] mergeFromInputStream:input] build];
}
+ (ClientMsgReadAck*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientMsgReadAck*)[[[ClientMsgReadAck builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClientMsgReadAck*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClientMsgReadAck*)[[[ClientMsgReadAck builder] mergeFromCodedInputStream:input] build];
}
+ (ClientMsgReadAck*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientMsgReadAck*)[[[ClientMsgReadAck builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClientMsgReadAckBuilder*) builder {
  return [[ClientMsgReadAckBuilder alloc] init];
}
+ (ClientMsgReadAckBuilder*) builderWithPrototype:(ClientMsgReadAck*) prototype {
  return [[ClientMsgReadAck builder] mergeFrom:prototype];
}
- (ClientMsgReadAckBuilder*) builder {
  return [ClientMsgReadAck builder];
}
- (ClientMsgReadAckBuilder*) toBuilder {
  return [ClientMsgReadAck builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasFromUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromUserId", self.fromUserId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ClientMsgReadAck class]]) {
    return NO;
  }
  ClientMsgReadAck *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasFromUserId == otherMessage.hasFromUserId &&
      (!self.hasFromUserId || [self.fromUserId isEqual:otherMessage.fromUserId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasFromUserId) {
    hashCode = hashCode * 31 + [self.fromUserId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ClientMsgReadAckBuilder()
@property (strong) ClientMsgReadAck* result;
@end

@implementation ClientMsgReadAckBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[ClientMsgReadAck alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ClientMsgReadAckBuilder*) clear {
  self.result = [[ClientMsgReadAck alloc] init];
  return self;
}
- (ClientMsgReadAckBuilder*) clone {
  return [ClientMsgReadAck builderWithPrototype:result];
}
- (ClientMsgReadAck*) defaultInstance {
  return [ClientMsgReadAck defaultInstance];
}
- (ClientMsgReadAck*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClientMsgReadAck*) buildPartial {
  ClientMsgReadAck* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ClientMsgReadAckBuilder*) mergeFrom:(ClientMsgReadAck*) other {
  if (other == [ClientMsgReadAck defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasFromUserId) {
    [self setFromUserId:other.fromUserId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClientMsgReadAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClientMsgReadAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 18: {
        [self setFromUserId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (ClientMsgReadAckBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (ClientMsgReadAckBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 18;
  return self;
}
- (BOOL) hasFromUserId {
  return result.hasFromUserId;
}
- (NSString*) fromUserId {
  return result.fromUserId;
}
- (ClientMsgReadAckBuilder*) setFromUserId:(NSString*) value {
  result.hasFromUserId = YES;
  result.fromUserId = value;
  return self;
}
- (ClientMsgReadAckBuilder*) clearFromUserId {
  result.hasFromUserId = NO;
  result.fromUserId = @"";
  return self;
}
@end

@interface ClientP2PCmdMsg ()
@property SInt32 cmdId;
@property UInt32 seqNo;
@property (strong) NSString* fromUserId;
@property (strong) NSString* toUserId;
@property (strong) NSData* cmdMsgData;
@end

@implementation ClientP2PCmdMsg

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasSeqNo {
  return !!hasSeqNo_;
}
- (void) setHasSeqNo:(BOOL) value_ {
  hasSeqNo_ = !!value_;
}
@synthesize seqNo;
- (BOOL) hasFromUserId {
  return !!hasFromUserId_;
}
- (void) setHasFromUserId:(BOOL) value_ {
  hasFromUserId_ = !!value_;
}
@synthesize fromUserId;
- (BOOL) hasToUserId {
  return !!hasToUserId_;
}
- (void) setHasToUserId:(BOOL) value_ {
  hasToUserId_ = !!value_;
}
@synthesize toUserId;
- (BOOL) hasCmdMsgData {
  return !!hasCmdMsgData_;
}
- (void) setHasCmdMsgData:(BOOL) value_ {
  hasCmdMsgData_ = !!value_;
}
@synthesize cmdMsgData;
- (void) dealloc {
  self.fromUserId = nil;
  self.toUserId = nil;
  self.cmdMsgData = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 19;
    self.seqNo = 0;
    self.fromUserId = @"";
    self.toUserId = @"";
    self.cmdMsgData = [NSData data];
  }
  return self;
}
static ClientP2PCmdMsg* defaultClientP2PCmdMsgInstance = nil;
+ (void) initialize {
  if (self == [ClientP2PCmdMsg class]) {
    defaultClientP2PCmdMsgInstance = [[ClientP2PCmdMsg alloc] init];
  }
}
+ (ClientP2PCmdMsg*) defaultInstance {
  return defaultClientP2PCmdMsgInstance;
}
- (ClientP2PCmdMsg*) defaultInstance {
  return defaultClientP2PCmdMsgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSeqNo) {
    return NO;
  }
  if (!self.hasFromUserId) {
    return NO;
  }
  if (!self.hasToUserId) {
    return NO;
  }
  if (!self.hasCmdMsgData) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasSeqNo) {
    [output writeUInt32:2 value:self.seqNo];
  }
  if (self.hasFromUserId) {
    [output writeString:3 value:self.fromUserId];
  }
  if (self.hasToUserId) {
    [output writeString:4 value:self.toUserId];
  }
  if (self.hasCmdMsgData) {
    [output writeData:5 value:self.cmdMsgData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasSeqNo) {
    size_ += computeUInt32Size(2, self.seqNo);
  }
  if (self.hasFromUserId) {
    size_ += computeStringSize(3, self.fromUserId);
  }
  if (self.hasToUserId) {
    size_ += computeStringSize(4, self.toUserId);
  }
  if (self.hasCmdMsgData) {
    size_ += computeDataSize(5, self.cmdMsgData);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ClientP2PCmdMsg*) parseFromData:(NSData*) data {
  return (ClientP2PCmdMsg*)[[[ClientP2PCmdMsg builder] mergeFromData:data] build];
}
+ (ClientP2PCmdMsg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientP2PCmdMsg*)[[[ClientP2PCmdMsg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClientP2PCmdMsg*) parseFromInputStream:(NSInputStream*) input {
  return (ClientP2PCmdMsg*)[[[ClientP2PCmdMsg builder] mergeFromInputStream:input] build];
}
+ (ClientP2PCmdMsg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientP2PCmdMsg*)[[[ClientP2PCmdMsg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClientP2PCmdMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClientP2PCmdMsg*)[[[ClientP2PCmdMsg builder] mergeFromCodedInputStream:input] build];
}
+ (ClientP2PCmdMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientP2PCmdMsg*)[[[ClientP2PCmdMsg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClientP2PCmdMsgBuilder*) builder {
  return [[ClientP2PCmdMsgBuilder alloc] init];
}
+ (ClientP2PCmdMsgBuilder*) builderWithPrototype:(ClientP2PCmdMsg*) prototype {
  return [[ClientP2PCmdMsg builder] mergeFrom:prototype];
}
- (ClientP2PCmdMsgBuilder*) builder {
  return [ClientP2PCmdMsg builder];
}
- (ClientP2PCmdMsgBuilder*) toBuilder {
  return [ClientP2PCmdMsg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasSeqNo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"seqNo", [NSNumber numberWithInteger:self.seqNo]];
  }
  if (self.hasFromUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromUserId", self.fromUserId];
  }
  if (self.hasToUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"toUserId", self.toUserId];
  }
  if (self.hasCmdMsgData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdMsgData", self.cmdMsgData];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ClientP2PCmdMsg class]]) {
    return NO;
  }
  ClientP2PCmdMsg *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasSeqNo == otherMessage.hasSeqNo &&
      (!self.hasSeqNo || self.seqNo == otherMessage.seqNo) &&
      self.hasFromUserId == otherMessage.hasFromUserId &&
      (!self.hasFromUserId || [self.fromUserId isEqual:otherMessage.fromUserId]) &&
      self.hasToUserId == otherMessage.hasToUserId &&
      (!self.hasToUserId || [self.toUserId isEqual:otherMessage.toUserId]) &&
      self.hasCmdMsgData == otherMessage.hasCmdMsgData &&
      (!self.hasCmdMsgData || [self.cmdMsgData isEqual:otherMessage.cmdMsgData]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasSeqNo) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.seqNo] hash];
  }
  if (self.hasFromUserId) {
    hashCode = hashCode * 31 + [self.fromUserId hash];
  }
  if (self.hasToUserId) {
    hashCode = hashCode * 31 + [self.toUserId hash];
  }
  if (self.hasCmdMsgData) {
    hashCode = hashCode * 31 + [self.cmdMsgData hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ClientP2PCmdMsgBuilder()
@property (strong) ClientP2PCmdMsg* result;
@end

@implementation ClientP2PCmdMsgBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[ClientP2PCmdMsg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ClientP2PCmdMsgBuilder*) clear {
  self.result = [[ClientP2PCmdMsg alloc] init];
  return self;
}
- (ClientP2PCmdMsgBuilder*) clone {
  return [ClientP2PCmdMsg builderWithPrototype:result];
}
- (ClientP2PCmdMsg*) defaultInstance {
  return [ClientP2PCmdMsg defaultInstance];
}
- (ClientP2PCmdMsg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClientP2PCmdMsg*) buildPartial {
  ClientP2PCmdMsg* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ClientP2PCmdMsgBuilder*) mergeFrom:(ClientP2PCmdMsg*) other {
  if (other == [ClientP2PCmdMsg defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasSeqNo) {
    [self setSeqNo:other.seqNo];
  }
  if (other.hasFromUserId) {
    [self setFromUserId:other.fromUserId];
  }
  if (other.hasToUserId) {
    [self setToUserId:other.toUserId];
  }
  if (other.hasCmdMsgData) {
    [self setCmdMsgData:other.cmdMsgData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClientP2PCmdMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClientP2PCmdMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 16: {
        [self setSeqNo:[input readUInt32]];
        break;
      }
      case 26: {
        [self setFromUserId:[input readString]];
        break;
      }
      case 34: {
        [self setToUserId:[input readString]];
        break;
      }
      case 42: {
        [self setCmdMsgData:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (ClientP2PCmdMsgBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (ClientP2PCmdMsgBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 19;
  return self;
}
- (BOOL) hasSeqNo {
  return result.hasSeqNo;
}
- (UInt32) seqNo {
  return result.seqNo;
}
- (ClientP2PCmdMsgBuilder*) setSeqNo:(UInt32) value {
  result.hasSeqNo = YES;
  result.seqNo = value;
  return self;
}
- (ClientP2PCmdMsgBuilder*) clearSeqNo {
  result.hasSeqNo = NO;
  result.seqNo = 0;
  return self;
}
- (BOOL) hasFromUserId {
  return result.hasFromUserId;
}
- (NSString*) fromUserId {
  return result.fromUserId;
}
- (ClientP2PCmdMsgBuilder*) setFromUserId:(NSString*) value {
  result.hasFromUserId = YES;
  result.fromUserId = value;
  return self;
}
- (ClientP2PCmdMsgBuilder*) clearFromUserId {
  result.hasFromUserId = NO;
  result.fromUserId = @"";
  return self;
}
- (BOOL) hasToUserId {
  return result.hasToUserId;
}
- (NSString*) toUserId {
  return result.toUserId;
}
- (ClientP2PCmdMsgBuilder*) setToUserId:(NSString*) value {
  result.hasToUserId = YES;
  result.toUserId = value;
  return self;
}
- (ClientP2PCmdMsgBuilder*) clearToUserId {
  result.hasToUserId = NO;
  result.toUserId = @"";
  return self;
}
- (BOOL) hasCmdMsgData {
  return result.hasCmdMsgData;
}
- (NSData*) cmdMsgData {
  return result.cmdMsgData;
}
- (ClientP2PCmdMsgBuilder*) setCmdMsgData:(NSData*) value {
  result.hasCmdMsgData = YES;
  result.cmdMsgData = value;
  return self;
}
- (ClientP2PCmdMsgBuilder*) clearCmdMsgData {
  result.hasCmdMsgData = NO;
  result.cmdMsgData = [NSData data];
  return self;
}
@end

@interface C2MTimeReq ()
@property SInt32 cmdId;
@end

@implementation C2MTimeReq

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (void) dealloc {
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 20;
  }
  return self;
}
static C2MTimeReq* defaultC2MTimeReqInstance = nil;
+ (void) initialize {
  if (self == [C2MTimeReq class]) {
    defaultC2MTimeReqInstance = [[C2MTimeReq alloc] init];
  }
}
+ (C2MTimeReq*) defaultInstance {
  return defaultC2MTimeReqInstance;
}
- (C2MTimeReq*) defaultInstance {
  return defaultC2MTimeReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MTimeReq*) parseFromData:(NSData*) data {
  return (C2MTimeReq*)[[[C2MTimeReq builder] mergeFromData:data] build];
}
+ (C2MTimeReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MTimeReq*)[[[C2MTimeReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MTimeReq*) parseFromInputStream:(NSInputStream*) input {
  return (C2MTimeReq*)[[[C2MTimeReq builder] mergeFromInputStream:input] build];
}
+ (C2MTimeReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MTimeReq*)[[[C2MTimeReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MTimeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MTimeReq*)[[[C2MTimeReq builder] mergeFromCodedInputStream:input] build];
}
+ (C2MTimeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MTimeReq*)[[[C2MTimeReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MTimeReqBuilder*) builder {
  return [[C2MTimeReqBuilder alloc] init];
}
+ (C2MTimeReqBuilder*) builderWithPrototype:(C2MTimeReq*) prototype {
  return [[C2MTimeReq builder] mergeFrom:prototype];
}
- (C2MTimeReqBuilder*) builder {
  return [C2MTimeReq builder];
}
- (C2MTimeReqBuilder*) toBuilder {
  return [C2MTimeReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MTimeReq class]]) {
    return NO;
  }
  C2MTimeReq *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MTimeReqBuilder()
@property (strong) C2MTimeReq* result;
@end

@implementation C2MTimeReqBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MTimeReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MTimeReqBuilder*) clear {
  self.result = [[C2MTimeReq alloc] init];
  return self;
}
- (C2MTimeReqBuilder*) clone {
  return [C2MTimeReq builderWithPrototype:result];
}
- (C2MTimeReq*) defaultInstance {
  return [C2MTimeReq defaultInstance];
}
- (C2MTimeReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MTimeReq*) buildPartial {
  C2MTimeReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MTimeReqBuilder*) mergeFrom:(C2MTimeReq*) other {
  if (other == [C2MTimeReq defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MTimeReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MTimeReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MTimeReqBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MTimeReqBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 20;
  return self;
}
@end

@interface C2MTimeRsp ()
@property SInt32 cmdId;
@property UInt32 serverTime;
@end

@implementation C2MTimeRsp

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasServerTime {
  return !!hasServerTime_;
}
- (void) setHasServerTime:(BOOL) value_ {
  hasServerTime_ = !!value_;
}
@synthesize serverTime;
- (void) dealloc {
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 21;
    self.serverTime = 0;
  }
  return self;
}
static C2MTimeRsp* defaultC2MTimeRspInstance = nil;
+ (void) initialize {
  if (self == [C2MTimeRsp class]) {
    defaultC2MTimeRspInstance = [[C2MTimeRsp alloc] init];
  }
}
+ (C2MTimeRsp*) defaultInstance {
  return defaultC2MTimeRspInstance;
}
- (C2MTimeRsp*) defaultInstance {
  return defaultC2MTimeRspInstance;
}
- (BOOL) isInitialized {
  if (!self.hasServerTime) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasServerTime) {
    [output writeUInt32:2 value:self.serverTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasServerTime) {
    size_ += computeUInt32Size(2, self.serverTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MTimeRsp*) parseFromData:(NSData*) data {
  return (C2MTimeRsp*)[[[C2MTimeRsp builder] mergeFromData:data] build];
}
+ (C2MTimeRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MTimeRsp*)[[[C2MTimeRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MTimeRsp*) parseFromInputStream:(NSInputStream*) input {
  return (C2MTimeRsp*)[[[C2MTimeRsp builder] mergeFromInputStream:input] build];
}
+ (C2MTimeRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MTimeRsp*)[[[C2MTimeRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MTimeRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MTimeRsp*)[[[C2MTimeRsp builder] mergeFromCodedInputStream:input] build];
}
+ (C2MTimeRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MTimeRsp*)[[[C2MTimeRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MTimeRspBuilder*) builder {
  return [[C2MTimeRspBuilder alloc] init];
}
+ (C2MTimeRspBuilder*) builderWithPrototype:(C2MTimeRsp*) prototype {
  return [[C2MTimeRsp builder] mergeFrom:prototype];
}
- (C2MTimeRspBuilder*) builder {
  return [C2MTimeRsp builder];
}
- (C2MTimeRspBuilder*) toBuilder {
  return [C2MTimeRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasServerTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverTime", [NSNumber numberWithInteger:self.serverTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MTimeRsp class]]) {
    return NO;
  }
  C2MTimeRsp *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasServerTime == otherMessage.hasServerTime &&
      (!self.hasServerTime || self.serverTime == otherMessage.serverTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasServerTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.serverTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MTimeRspBuilder()
@property (strong) C2MTimeRsp* result;
@end

@implementation C2MTimeRspBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MTimeRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MTimeRspBuilder*) clear {
  self.result = [[C2MTimeRsp alloc] init];
  return self;
}
- (C2MTimeRspBuilder*) clone {
  return [C2MTimeRsp builderWithPrototype:result];
}
- (C2MTimeRsp*) defaultInstance {
  return [C2MTimeRsp defaultInstance];
}
- (C2MTimeRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MTimeRsp*) buildPartial {
  C2MTimeRsp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MTimeRspBuilder*) mergeFrom:(C2MTimeRsp*) other {
  if (other == [C2MTimeRsp defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasServerTime) {
    [self setServerTime:other.serverTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MTimeRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MTimeRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 16: {
        [self setServerTime:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MTimeRspBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MTimeRspBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 21;
  return self;
}
- (BOOL) hasServerTime {
  return result.hasServerTime;
}
- (UInt32) serverTime {
  return result.serverTime;
}
- (C2MTimeRspBuilder*) setServerTime:(UInt32) value {
  result.hasServerTime = YES;
  result.serverTime = value;
  return self;
}
- (C2MTimeRspBuilder*) clearServerTime {
  result.hasServerTime = NO;
  result.serverTime = 0;
  return self;
}
@end

@interface C2MUnReadMsgCntReq ()
@property SInt32 cmdId;
@end

@implementation C2MUnReadMsgCntReq

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (void) dealloc {
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 22;
  }
  return self;
}
static C2MUnReadMsgCntReq* defaultC2MUnReadMsgCntReqInstance = nil;
+ (void) initialize {
  if (self == [C2MUnReadMsgCntReq class]) {
    defaultC2MUnReadMsgCntReqInstance = [[C2MUnReadMsgCntReq alloc] init];
  }
}
+ (C2MUnReadMsgCntReq*) defaultInstance {
  return defaultC2MUnReadMsgCntReqInstance;
}
- (C2MUnReadMsgCntReq*) defaultInstance {
  return defaultC2MUnReadMsgCntReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MUnReadMsgCntReq*) parseFromData:(NSData*) data {
  return (C2MUnReadMsgCntReq*)[[[C2MUnReadMsgCntReq builder] mergeFromData:data] build];
}
+ (C2MUnReadMsgCntReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUnReadMsgCntReq*)[[[C2MUnReadMsgCntReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MUnReadMsgCntReq*) parseFromInputStream:(NSInputStream*) input {
  return (C2MUnReadMsgCntReq*)[[[C2MUnReadMsgCntReq builder] mergeFromInputStream:input] build];
}
+ (C2MUnReadMsgCntReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUnReadMsgCntReq*)[[[C2MUnReadMsgCntReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MUnReadMsgCntReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MUnReadMsgCntReq*)[[[C2MUnReadMsgCntReq builder] mergeFromCodedInputStream:input] build];
}
+ (C2MUnReadMsgCntReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUnReadMsgCntReq*)[[[C2MUnReadMsgCntReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MUnReadMsgCntReqBuilder*) builder {
  return [[C2MUnReadMsgCntReqBuilder alloc] init];
}
+ (C2MUnReadMsgCntReqBuilder*) builderWithPrototype:(C2MUnReadMsgCntReq*) prototype {
  return [[C2MUnReadMsgCntReq builder] mergeFrom:prototype];
}
- (C2MUnReadMsgCntReqBuilder*) builder {
  return [C2MUnReadMsgCntReq builder];
}
- (C2MUnReadMsgCntReqBuilder*) toBuilder {
  return [C2MUnReadMsgCntReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MUnReadMsgCntReq class]]) {
    return NO;
  }
  C2MUnReadMsgCntReq *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MUnReadMsgCntReqBuilder()
@property (strong) C2MUnReadMsgCntReq* result;
@end

@implementation C2MUnReadMsgCntReqBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MUnReadMsgCntReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MUnReadMsgCntReqBuilder*) clear {
  self.result = [[C2MUnReadMsgCntReq alloc] init];
  return self;
}
- (C2MUnReadMsgCntReqBuilder*) clone {
  return [C2MUnReadMsgCntReq builderWithPrototype:result];
}
- (C2MUnReadMsgCntReq*) defaultInstance {
  return [C2MUnReadMsgCntReq defaultInstance];
}
- (C2MUnReadMsgCntReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MUnReadMsgCntReq*) buildPartial {
  C2MUnReadMsgCntReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MUnReadMsgCntReqBuilder*) mergeFrom:(C2MUnReadMsgCntReq*) other {
  if (other == [C2MUnReadMsgCntReq defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MUnReadMsgCntReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MUnReadMsgCntReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MUnReadMsgCntReqBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MUnReadMsgCntReqBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 22;
  return self;
}
@end

@interface C2MUnReadMsgCntRsp ()
@property SInt32 cmdId;
@property (strong) NSMutableArray * unreadListArray;
@end

@implementation C2MUnReadMsgCntRsp

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
@synthesize unreadListArray;
@dynamic unreadList;
- (void) dealloc {
  self.unreadListArray = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 23;
  }
  return self;
}
static C2MUnReadMsgCntRsp* defaultC2MUnReadMsgCntRspInstance = nil;
+ (void) initialize {
  if (self == [C2MUnReadMsgCntRsp class]) {
    defaultC2MUnReadMsgCntRspInstance = [[C2MUnReadMsgCntRsp alloc] init];
  }
}
+ (C2MUnReadMsgCntRsp*) defaultInstance {
  return defaultC2MUnReadMsgCntRspInstance;
}
- (C2MUnReadMsgCntRsp*) defaultInstance {
  return defaultC2MUnReadMsgCntRspInstance;
}
- (NSArray *)unreadList {
  return unreadListArray;
}
- (ClientUnReadInfo*)unreadListAtIndex:(NSUInteger)index {
  return [unreadListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitunreadList = YES;
   [self.unreadList enumerateObjectsUsingBlock:^(ClientUnReadInfo *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitunreadList = NO;
      *stop = YES;
    }
  }];
  if (!isInitunreadList) return isInitunreadList;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  [self.unreadListArray enumerateObjectsUsingBlock:^(ClientUnReadInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  [self.unreadListArray enumerateObjectsUsingBlock:^(ClientUnReadInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MUnReadMsgCntRsp*) parseFromData:(NSData*) data {
  return (C2MUnReadMsgCntRsp*)[[[C2MUnReadMsgCntRsp builder] mergeFromData:data] build];
}
+ (C2MUnReadMsgCntRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUnReadMsgCntRsp*)[[[C2MUnReadMsgCntRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MUnReadMsgCntRsp*) parseFromInputStream:(NSInputStream*) input {
  return (C2MUnReadMsgCntRsp*)[[[C2MUnReadMsgCntRsp builder] mergeFromInputStream:input] build];
}
+ (C2MUnReadMsgCntRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUnReadMsgCntRsp*)[[[C2MUnReadMsgCntRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MUnReadMsgCntRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MUnReadMsgCntRsp*)[[[C2MUnReadMsgCntRsp builder] mergeFromCodedInputStream:input] build];
}
+ (C2MUnReadMsgCntRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUnReadMsgCntRsp*)[[[C2MUnReadMsgCntRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MUnReadMsgCntRspBuilder*) builder {
  return [[C2MUnReadMsgCntRspBuilder alloc] init];
}
+ (C2MUnReadMsgCntRspBuilder*) builderWithPrototype:(C2MUnReadMsgCntRsp*) prototype {
  return [[C2MUnReadMsgCntRsp builder] mergeFrom:prototype];
}
- (C2MUnReadMsgCntRspBuilder*) builder {
  return [C2MUnReadMsgCntRsp builder];
}
- (C2MUnReadMsgCntRspBuilder*) toBuilder {
  return [C2MUnReadMsgCntRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  [self.unreadListArray enumerateObjectsUsingBlock:^(ClientUnReadInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"unreadList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MUnReadMsgCntRsp class]]) {
    return NO;
  }
  C2MUnReadMsgCntRsp *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      [self.unreadListArray isEqualToArray:otherMessage.unreadListArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  [self.unreadListArray enumerateObjectsUsingBlock:^(ClientUnReadInfo *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MUnReadMsgCntRspBuilder()
@property (strong) C2MUnReadMsgCntRsp* result;
@end

@implementation C2MUnReadMsgCntRspBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MUnReadMsgCntRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MUnReadMsgCntRspBuilder*) clear {
  self.result = [[C2MUnReadMsgCntRsp alloc] init];
  return self;
}
- (C2MUnReadMsgCntRspBuilder*) clone {
  return [C2MUnReadMsgCntRsp builderWithPrototype:result];
}
- (C2MUnReadMsgCntRsp*) defaultInstance {
  return [C2MUnReadMsgCntRsp defaultInstance];
}
- (C2MUnReadMsgCntRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MUnReadMsgCntRsp*) buildPartial {
  C2MUnReadMsgCntRsp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MUnReadMsgCntRspBuilder*) mergeFrom:(C2MUnReadMsgCntRsp*) other {
  if (other == [C2MUnReadMsgCntRsp defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.unreadListArray.count > 0) {
    if (result.unreadListArray == nil) {
      result.unreadListArray = [[NSMutableArray alloc] initWithArray:other.unreadListArray];
    } else {
      [result.unreadListArray addObjectsFromArray:other.unreadListArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MUnReadMsgCntRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MUnReadMsgCntRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 18: {
        ClientUnReadInfoBuilder* subBuilder = [ClientUnReadInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUnreadList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MUnReadMsgCntRspBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MUnReadMsgCntRspBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 23;
  return self;
}
- (NSMutableArray *)unreadList {
  return result.unreadListArray;
}
- (ClientUnReadInfo*)unreadListAtIndex:(NSUInteger)index {
  return [result unreadListAtIndex:index];
}
- (C2MUnReadMsgCntRspBuilder *)addUnreadList:(ClientUnReadInfo*)value {
  if (result.unreadListArray == nil) {
    result.unreadListArray = [[NSMutableArray alloc]init];
  }
  [result.unreadListArray addObject:value];
  return self;
}
- (C2MUnReadMsgCntRspBuilder *)setUnreadListArray:(NSArray *)array {
  result.unreadListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (C2MUnReadMsgCntRspBuilder *)clearUnreadList {
  result.unreadListArray = nil;
  return self;
}
@end

@interface C2MUnReadMsgReq ()
@property SInt32 cmdId;
@property (strong) NSString* fromUserId;
@end

@implementation C2MUnReadMsgReq

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasFromUserId {
  return !!hasFromUserId_;
}
- (void) setHasFromUserId:(BOOL) value_ {
  hasFromUserId_ = !!value_;
}
@synthesize fromUserId;
- (void) dealloc {
  self.fromUserId = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 24;
    self.fromUserId = @"";
  }
  return self;
}
static C2MUnReadMsgReq* defaultC2MUnReadMsgReqInstance = nil;
+ (void) initialize {
  if (self == [C2MUnReadMsgReq class]) {
    defaultC2MUnReadMsgReqInstance = [[C2MUnReadMsgReq alloc] init];
  }
}
+ (C2MUnReadMsgReq*) defaultInstance {
  return defaultC2MUnReadMsgReqInstance;
}
- (C2MUnReadMsgReq*) defaultInstance {
  return defaultC2MUnReadMsgReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasFromUserId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasFromUserId) {
    [output writeString:2 value:self.fromUserId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasFromUserId) {
    size_ += computeStringSize(2, self.fromUserId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MUnReadMsgReq*) parseFromData:(NSData*) data {
  return (C2MUnReadMsgReq*)[[[C2MUnReadMsgReq builder] mergeFromData:data] build];
}
+ (C2MUnReadMsgReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUnReadMsgReq*)[[[C2MUnReadMsgReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MUnReadMsgReq*) parseFromInputStream:(NSInputStream*) input {
  return (C2MUnReadMsgReq*)[[[C2MUnReadMsgReq builder] mergeFromInputStream:input] build];
}
+ (C2MUnReadMsgReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUnReadMsgReq*)[[[C2MUnReadMsgReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MUnReadMsgReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MUnReadMsgReq*)[[[C2MUnReadMsgReq builder] mergeFromCodedInputStream:input] build];
}
+ (C2MUnReadMsgReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUnReadMsgReq*)[[[C2MUnReadMsgReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MUnReadMsgReqBuilder*) builder {
  return [[C2MUnReadMsgReqBuilder alloc] init];
}
+ (C2MUnReadMsgReqBuilder*) builderWithPrototype:(C2MUnReadMsgReq*) prototype {
  return [[C2MUnReadMsgReq builder] mergeFrom:prototype];
}
- (C2MUnReadMsgReqBuilder*) builder {
  return [C2MUnReadMsgReq builder];
}
- (C2MUnReadMsgReqBuilder*) toBuilder {
  return [C2MUnReadMsgReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasFromUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromUserId", self.fromUserId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MUnReadMsgReq class]]) {
    return NO;
  }
  C2MUnReadMsgReq *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasFromUserId == otherMessage.hasFromUserId &&
      (!self.hasFromUserId || [self.fromUserId isEqual:otherMessage.fromUserId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasFromUserId) {
    hashCode = hashCode * 31 + [self.fromUserId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MUnReadMsgReqBuilder()
@property (strong) C2MUnReadMsgReq* result;
@end

@implementation C2MUnReadMsgReqBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MUnReadMsgReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MUnReadMsgReqBuilder*) clear {
  self.result = [[C2MUnReadMsgReq alloc] init];
  return self;
}
- (C2MUnReadMsgReqBuilder*) clone {
  return [C2MUnReadMsgReq builderWithPrototype:result];
}
- (C2MUnReadMsgReq*) defaultInstance {
  return [C2MUnReadMsgReq defaultInstance];
}
- (C2MUnReadMsgReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MUnReadMsgReq*) buildPartial {
  C2MUnReadMsgReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MUnReadMsgReqBuilder*) mergeFrom:(C2MUnReadMsgReq*) other {
  if (other == [C2MUnReadMsgReq defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasFromUserId) {
    [self setFromUserId:other.fromUserId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MUnReadMsgReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MUnReadMsgReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 18: {
        [self setFromUserId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MUnReadMsgReqBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MUnReadMsgReqBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 24;
  return self;
}
- (BOOL) hasFromUserId {
  return result.hasFromUserId;
}
- (NSString*) fromUserId {
  return result.fromUserId;
}
- (C2MUnReadMsgReqBuilder*) setFromUserId:(NSString*) value {
  result.hasFromUserId = YES;
  result.fromUserId = value;
  return self;
}
- (C2MUnReadMsgReqBuilder*) clearFromUserId {
  result.hasFromUserId = NO;
  result.fromUserId = @"";
  return self;
}
@end

@interface C2MHistoryMsgReq ()
@property SInt32 cmdId;
@property (strong) NSString* fromUserId;
@property UInt32 msgOffset;
@property UInt32 msgCount;
@end

@implementation C2MHistoryMsgReq

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasFromUserId {
  return !!hasFromUserId_;
}
- (void) setHasFromUserId:(BOOL) value_ {
  hasFromUserId_ = !!value_;
}
@synthesize fromUserId;
- (BOOL) hasMsgOffset {
  return !!hasMsgOffset_;
}
- (void) setHasMsgOffset:(BOOL) value_ {
  hasMsgOffset_ = !!value_;
}
@synthesize msgOffset;
- (BOOL) hasMsgCount {
  return !!hasMsgCount_;
}
- (void) setHasMsgCount:(BOOL) value_ {
  hasMsgCount_ = !!value_;
}
@synthesize msgCount;
- (void) dealloc {
  self.fromUserId = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 25;
    self.fromUserId = @"";
    self.msgOffset = 0;
    self.msgCount = 0;
  }
  return self;
}
static C2MHistoryMsgReq* defaultC2MHistoryMsgReqInstance = nil;
+ (void) initialize {
  if (self == [C2MHistoryMsgReq class]) {
    defaultC2MHistoryMsgReqInstance = [[C2MHistoryMsgReq alloc] init];
  }
}
+ (C2MHistoryMsgReq*) defaultInstance {
  return defaultC2MHistoryMsgReqInstance;
}
- (C2MHistoryMsgReq*) defaultInstance {
  return defaultC2MHistoryMsgReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasFromUserId) {
    return NO;
  }
  if (!self.hasMsgOffset) {
    return NO;
  }
  if (!self.hasMsgCount) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasFromUserId) {
    [output writeString:2 value:self.fromUserId];
  }
  if (self.hasMsgOffset) {
    [output writeUInt32:3 value:self.msgOffset];
  }
  if (self.hasMsgCount) {
    [output writeUInt32:4 value:self.msgCount];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasFromUserId) {
    size_ += computeStringSize(2, self.fromUserId);
  }
  if (self.hasMsgOffset) {
    size_ += computeUInt32Size(3, self.msgOffset);
  }
  if (self.hasMsgCount) {
    size_ += computeUInt32Size(4, self.msgCount);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MHistoryMsgReq*) parseFromData:(NSData*) data {
  return (C2MHistoryMsgReq*)[[[C2MHistoryMsgReq builder] mergeFromData:data] build];
}
+ (C2MHistoryMsgReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MHistoryMsgReq*)[[[C2MHistoryMsgReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MHistoryMsgReq*) parseFromInputStream:(NSInputStream*) input {
  return (C2MHistoryMsgReq*)[[[C2MHistoryMsgReq builder] mergeFromInputStream:input] build];
}
+ (C2MHistoryMsgReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MHistoryMsgReq*)[[[C2MHistoryMsgReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MHistoryMsgReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MHistoryMsgReq*)[[[C2MHistoryMsgReq builder] mergeFromCodedInputStream:input] build];
}
+ (C2MHistoryMsgReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MHistoryMsgReq*)[[[C2MHistoryMsgReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MHistoryMsgReqBuilder*) builder {
  return [[C2MHistoryMsgReqBuilder alloc] init];
}
+ (C2MHistoryMsgReqBuilder*) builderWithPrototype:(C2MHistoryMsgReq*) prototype {
  return [[C2MHistoryMsgReq builder] mergeFrom:prototype];
}
- (C2MHistoryMsgReqBuilder*) builder {
  return [C2MHistoryMsgReq builder];
}
- (C2MHistoryMsgReqBuilder*) toBuilder {
  return [C2MHistoryMsgReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasFromUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromUserId", self.fromUserId];
  }
  if (self.hasMsgOffset) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgOffset", [NSNumber numberWithInteger:self.msgOffset]];
  }
  if (self.hasMsgCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgCount", [NSNumber numberWithInteger:self.msgCount]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MHistoryMsgReq class]]) {
    return NO;
  }
  C2MHistoryMsgReq *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasFromUserId == otherMessage.hasFromUserId &&
      (!self.hasFromUserId || [self.fromUserId isEqual:otherMessage.fromUserId]) &&
      self.hasMsgOffset == otherMessage.hasMsgOffset &&
      (!self.hasMsgOffset || self.msgOffset == otherMessage.msgOffset) &&
      self.hasMsgCount == otherMessage.hasMsgCount &&
      (!self.hasMsgCount || self.msgCount == otherMessage.msgCount) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasFromUserId) {
    hashCode = hashCode * 31 + [self.fromUserId hash];
  }
  if (self.hasMsgOffset) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.msgOffset] hash];
  }
  if (self.hasMsgCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.msgCount] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MHistoryMsgReqBuilder()
@property (strong) C2MHistoryMsgReq* result;
@end

@implementation C2MHistoryMsgReqBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MHistoryMsgReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MHistoryMsgReqBuilder*) clear {
  self.result = [[C2MHistoryMsgReq alloc] init];
  return self;
}
- (C2MHistoryMsgReqBuilder*) clone {
  return [C2MHistoryMsgReq builderWithPrototype:result];
}
- (C2MHistoryMsgReq*) defaultInstance {
  return [C2MHistoryMsgReq defaultInstance];
}
- (C2MHistoryMsgReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MHistoryMsgReq*) buildPartial {
  C2MHistoryMsgReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MHistoryMsgReqBuilder*) mergeFrom:(C2MHistoryMsgReq*) other {
  if (other == [C2MHistoryMsgReq defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasFromUserId) {
    [self setFromUserId:other.fromUserId];
  }
  if (other.hasMsgOffset) {
    [self setMsgOffset:other.msgOffset];
  }
  if (other.hasMsgCount) {
    [self setMsgCount:other.msgCount];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MHistoryMsgReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MHistoryMsgReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 18: {
        [self setFromUserId:[input readString]];
        break;
      }
      case 24: {
        [self setMsgOffset:[input readUInt32]];
        break;
      }
      case 32: {
        [self setMsgCount:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MHistoryMsgReqBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MHistoryMsgReqBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 25;
  return self;
}
- (BOOL) hasFromUserId {
  return result.hasFromUserId;
}
- (NSString*) fromUserId {
  return result.fromUserId;
}
- (C2MHistoryMsgReqBuilder*) setFromUserId:(NSString*) value {
  result.hasFromUserId = YES;
  result.fromUserId = value;
  return self;
}
- (C2MHistoryMsgReqBuilder*) clearFromUserId {
  result.hasFromUserId = NO;
  result.fromUserId = @"";
  return self;
}
- (BOOL) hasMsgOffset {
  return result.hasMsgOffset;
}
- (UInt32) msgOffset {
  return result.msgOffset;
}
- (C2MHistoryMsgReqBuilder*) setMsgOffset:(UInt32) value {
  result.hasMsgOffset = YES;
  result.msgOffset = value;
  return self;
}
- (C2MHistoryMsgReqBuilder*) clearMsgOffset {
  result.hasMsgOffset = NO;
  result.msgOffset = 0;
  return self;
}
- (BOOL) hasMsgCount {
  return result.hasMsgCount;
}
- (UInt32) msgCount {
  return result.msgCount;
}
- (C2MHistoryMsgReqBuilder*) setMsgCount:(UInt32) value {
  result.hasMsgCount = YES;
  result.msgCount = value;
  return self;
}
- (C2MHistoryMsgReqBuilder*) clearMsgCount {
  result.hasMsgCount = NO;
  result.msgCount = 0;
  return self;
}
@end

@interface C2MMsgListRsp ()
@property SInt32 cmdId;
@property (strong) NSString* displayUserId;
@property (strong) NSMutableArray * msgListArray;
@end

@implementation C2MMsgListRsp

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasDisplayUserId {
  return !!hasDisplayUserId_;
}
- (void) setHasDisplayUserId:(BOOL) value_ {
  hasDisplayUserId_ = !!value_;
}
@synthesize displayUserId;
@synthesize msgListArray;
@dynamic msgList;
- (void) dealloc {
  self.displayUserId = nil;
  self.msgListArray = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 26;
    self.displayUserId = @"";
  }
  return self;
}
static C2MMsgListRsp* defaultC2MMsgListRspInstance = nil;
+ (void) initialize {
  if (self == [C2MMsgListRsp class]) {
    defaultC2MMsgListRspInstance = [[C2MMsgListRsp alloc] init];
  }
}
+ (C2MMsgListRsp*) defaultInstance {
  return defaultC2MMsgListRspInstance;
}
- (C2MMsgListRsp*) defaultInstance {
  return defaultC2MMsgListRspInstance;
}
- (NSArray *)msgList {
  return msgListArray;
}
- (ClientMsgInfo*)msgListAtIndex:(NSUInteger)index {
  return [msgListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasDisplayUserId) {
    return NO;
  }
  __block BOOL isInitmsgList = YES;
   [self.msgList enumerateObjectsUsingBlock:^(ClientMsgInfo *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitmsgList = NO;
      *stop = YES;
    }
  }];
  if (!isInitmsgList) return isInitmsgList;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasDisplayUserId) {
    [output writeString:2 value:self.displayUserId];
  }
  [self.msgListArray enumerateObjectsUsingBlock:^(ClientMsgInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasDisplayUserId) {
    size_ += computeStringSize(2, self.displayUserId);
  }
  [self.msgListArray enumerateObjectsUsingBlock:^(ClientMsgInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MMsgListRsp*) parseFromData:(NSData*) data {
  return (C2MMsgListRsp*)[[[C2MMsgListRsp builder] mergeFromData:data] build];
}
+ (C2MMsgListRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MMsgListRsp*)[[[C2MMsgListRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MMsgListRsp*) parseFromInputStream:(NSInputStream*) input {
  return (C2MMsgListRsp*)[[[C2MMsgListRsp builder] mergeFromInputStream:input] build];
}
+ (C2MMsgListRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MMsgListRsp*)[[[C2MMsgListRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MMsgListRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MMsgListRsp*)[[[C2MMsgListRsp builder] mergeFromCodedInputStream:input] build];
}
+ (C2MMsgListRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MMsgListRsp*)[[[C2MMsgListRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MMsgListRspBuilder*) builder {
  return [[C2MMsgListRspBuilder alloc] init];
}
+ (C2MMsgListRspBuilder*) builderWithPrototype:(C2MMsgListRsp*) prototype {
  return [[C2MMsgListRsp builder] mergeFrom:prototype];
}
- (C2MMsgListRspBuilder*) builder {
  return [C2MMsgListRsp builder];
}
- (C2MMsgListRspBuilder*) toBuilder {
  return [C2MMsgListRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasDisplayUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"displayUserId", self.displayUserId];
  }
  [self.msgListArray enumerateObjectsUsingBlock:^(ClientMsgInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"msgList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MMsgListRsp class]]) {
    return NO;
  }
  C2MMsgListRsp *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasDisplayUserId == otherMessage.hasDisplayUserId &&
      (!self.hasDisplayUserId || [self.displayUserId isEqual:otherMessage.displayUserId]) &&
      [self.msgListArray isEqualToArray:otherMessage.msgListArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasDisplayUserId) {
    hashCode = hashCode * 31 + [self.displayUserId hash];
  }
  [self.msgListArray enumerateObjectsUsingBlock:^(ClientMsgInfo *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MMsgListRspBuilder()
@property (strong) C2MMsgListRsp* result;
@end

@implementation C2MMsgListRspBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MMsgListRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MMsgListRspBuilder*) clear {
  self.result = [[C2MMsgListRsp alloc] init];
  return self;
}
- (C2MMsgListRspBuilder*) clone {
  return [C2MMsgListRsp builderWithPrototype:result];
}
- (C2MMsgListRsp*) defaultInstance {
  return [C2MMsgListRsp defaultInstance];
}
- (C2MMsgListRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MMsgListRsp*) buildPartial {
  C2MMsgListRsp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MMsgListRspBuilder*) mergeFrom:(C2MMsgListRsp*) other {
  if (other == [C2MMsgListRsp defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasDisplayUserId) {
    [self setDisplayUserId:other.displayUserId];
  }
  if (other.msgListArray.count > 0) {
    if (result.msgListArray == nil) {
      result.msgListArray = [[NSMutableArray alloc] initWithArray:other.msgListArray];
    } else {
      [result.msgListArray addObjectsFromArray:other.msgListArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MMsgListRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MMsgListRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 18: {
        [self setDisplayUserId:[input readString]];
        break;
      }
      case 26: {
        ClientMsgInfoBuilder* subBuilder = [ClientMsgInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMsgList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MMsgListRspBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MMsgListRspBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 26;
  return self;
}
- (BOOL) hasDisplayUserId {
  return result.hasDisplayUserId;
}
- (NSString*) displayUserId {
  return result.displayUserId;
}
- (C2MMsgListRspBuilder*) setDisplayUserId:(NSString*) value {
  result.hasDisplayUserId = YES;
  result.displayUserId = value;
  return self;
}
- (C2MMsgListRspBuilder*) clearDisplayUserId {
  result.hasDisplayUserId = NO;
  result.displayUserId = @"";
  return self;
}
- (NSMutableArray *)msgList {
  return result.msgListArray;
}
- (ClientMsgInfo*)msgListAtIndex:(NSUInteger)index {
  return [result msgListAtIndex:index];
}
- (C2MMsgListRspBuilder *)addMsgList:(ClientMsgInfo*)value {
  if (result.msgListArray == nil) {
    result.msgListArray = [[NSMutableArray alloc]init];
  }
  [result.msgListArray addObject:value];
  return self;
}
- (C2MMsgListRspBuilder *)setMsgListArray:(NSArray *)array {
  result.msgListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (C2MMsgListRspBuilder *)clearMsgList {
  result.msgListArray = nil;
  return self;
}
@end

@interface C2MAllUserReq ()
@property SInt32 cmdId;
@end

@implementation C2MAllUserReq

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (void) dealloc {
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 27;
  }
  return self;
}
static C2MAllUserReq* defaultC2MAllUserReqInstance = nil;
+ (void) initialize {
  if (self == [C2MAllUserReq class]) {
    defaultC2MAllUserReqInstance = [[C2MAllUserReq alloc] init];
  }
}
+ (C2MAllUserReq*) defaultInstance {
  return defaultC2MAllUserReqInstance;
}
- (C2MAllUserReq*) defaultInstance {
  return defaultC2MAllUserReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MAllUserReq*) parseFromData:(NSData*) data {
  return (C2MAllUserReq*)[[[C2MAllUserReq builder] mergeFromData:data] build];
}
+ (C2MAllUserReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MAllUserReq*)[[[C2MAllUserReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MAllUserReq*) parseFromInputStream:(NSInputStream*) input {
  return (C2MAllUserReq*)[[[C2MAllUserReq builder] mergeFromInputStream:input] build];
}
+ (C2MAllUserReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MAllUserReq*)[[[C2MAllUserReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MAllUserReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MAllUserReq*)[[[C2MAllUserReq builder] mergeFromCodedInputStream:input] build];
}
+ (C2MAllUserReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MAllUserReq*)[[[C2MAllUserReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MAllUserReqBuilder*) builder {
  return [[C2MAllUserReqBuilder alloc] init];
}
+ (C2MAllUserReqBuilder*) builderWithPrototype:(C2MAllUserReq*) prototype {
  return [[C2MAllUserReq builder] mergeFrom:prototype];
}
- (C2MAllUserReqBuilder*) builder {
  return [C2MAllUserReq builder];
}
- (C2MAllUserReqBuilder*) toBuilder {
  return [C2MAllUserReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MAllUserReq class]]) {
    return NO;
  }
  C2MAllUserReq *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MAllUserReqBuilder()
@property (strong) C2MAllUserReq* result;
@end

@implementation C2MAllUserReqBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MAllUserReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MAllUserReqBuilder*) clear {
  self.result = [[C2MAllUserReq alloc] init];
  return self;
}
- (C2MAllUserReqBuilder*) clone {
  return [C2MAllUserReq builderWithPrototype:result];
}
- (C2MAllUserReq*) defaultInstance {
  return [C2MAllUserReq defaultInstance];
}
- (C2MAllUserReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MAllUserReq*) buildPartial {
  C2MAllUserReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MAllUserReqBuilder*) mergeFrom:(C2MAllUserReq*) other {
  if (other == [C2MAllUserReq defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MAllUserReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MAllUserReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MAllUserReqBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MAllUserReqBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 27;
  return self;
}
@end

@interface C2MUserInfoReq ()
@property SInt32 cmdId;
@property (strong) NSMutableArray * userIdListArray;
@end

@implementation C2MUserInfoReq

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
@synthesize userIdListArray;
@dynamic userIdList;
- (void) dealloc {
  self.userIdListArray = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 28;
  }
  return self;
}
static C2MUserInfoReq* defaultC2MUserInfoReqInstance = nil;
+ (void) initialize {
  if (self == [C2MUserInfoReq class]) {
    defaultC2MUserInfoReqInstance = [[C2MUserInfoReq alloc] init];
  }
}
+ (C2MUserInfoReq*) defaultInstance {
  return defaultC2MUserInfoReqInstance;
}
- (C2MUserInfoReq*) defaultInstance {
  return defaultC2MUserInfoReqInstance;
}
- (NSArray *)userIdList {
  return userIdListArray;
}
- (NSString*)userIdListAtIndex:(NSUInteger)index {
  return [userIdListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  [self.userIdListArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.userIdListArray.count;
    [self.userIdListArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MUserInfoReq*) parseFromData:(NSData*) data {
  return (C2MUserInfoReq*)[[[C2MUserInfoReq builder] mergeFromData:data] build];
}
+ (C2MUserInfoReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUserInfoReq*)[[[C2MUserInfoReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MUserInfoReq*) parseFromInputStream:(NSInputStream*) input {
  return (C2MUserInfoReq*)[[[C2MUserInfoReq builder] mergeFromInputStream:input] build];
}
+ (C2MUserInfoReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUserInfoReq*)[[[C2MUserInfoReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MUserInfoReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MUserInfoReq*)[[[C2MUserInfoReq builder] mergeFromCodedInputStream:input] build];
}
+ (C2MUserInfoReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUserInfoReq*)[[[C2MUserInfoReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MUserInfoReqBuilder*) builder {
  return [[C2MUserInfoReqBuilder alloc] init];
}
+ (C2MUserInfoReqBuilder*) builderWithPrototype:(C2MUserInfoReq*) prototype {
  return [[C2MUserInfoReq builder] mergeFrom:prototype];
}
- (C2MUserInfoReqBuilder*) builder {
  return [C2MUserInfoReq builder];
}
- (C2MUserInfoReqBuilder*) toBuilder {
  return [C2MUserInfoReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  [self.userIdListArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userIdList", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MUserInfoReq class]]) {
    return NO;
  }
  C2MUserInfoReq *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      [self.userIdListArray isEqualToArray:otherMessage.userIdListArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  [self.userIdListArray enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MUserInfoReqBuilder()
@property (strong) C2MUserInfoReq* result;
@end

@implementation C2MUserInfoReqBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MUserInfoReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MUserInfoReqBuilder*) clear {
  self.result = [[C2MUserInfoReq alloc] init];
  return self;
}
- (C2MUserInfoReqBuilder*) clone {
  return [C2MUserInfoReq builderWithPrototype:result];
}
- (C2MUserInfoReq*) defaultInstance {
  return [C2MUserInfoReq defaultInstance];
}
- (C2MUserInfoReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MUserInfoReq*) buildPartial {
  C2MUserInfoReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MUserInfoReqBuilder*) mergeFrom:(C2MUserInfoReq*) other {
  if (other == [C2MUserInfoReq defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.userIdListArray.count > 0) {
    if (result.userIdListArray == nil) {
      result.userIdListArray = [[NSMutableArray alloc] initWithArray:other.userIdListArray];
    } else {
      [result.userIdListArray addObjectsFromArray:other.userIdListArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MUserInfoReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MUserInfoReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 18: {
        [self addUserIdList:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MUserInfoReqBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MUserInfoReqBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 28;
  return self;
}
- (NSMutableArray *)userIdList {
  return result.userIdListArray;
}
- (NSString*)userIdListAtIndex:(NSUInteger)index {
  return [result userIdListAtIndex:index];
}
- (C2MUserInfoReqBuilder *)addUserIdList:(NSString*)value {
  if (result.userIdListArray == nil) {
    result.userIdListArray = [[NSMutableArray alloc]init];
  }
  [result.userIdListArray addObject:value];
  return self;
}
- (C2MUserInfoReqBuilder *)setUserIdListArray:(NSArray *)array {
  result.userIdListArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (C2MUserInfoReqBuilder *)clearUserIdList {
  result.userIdListArray = nil;
  return self;
}
@end

@interface C2MUserInfoRsp ()
@property SInt32 cmdId;
@property (strong) NSMutableArray * userInfoListArray;
@end

@implementation C2MUserInfoRsp

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
@synthesize userInfoListArray;
@dynamic userInfoList;
- (void) dealloc {
  self.userInfoListArray = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 29;
  }
  return self;
}
static C2MUserInfoRsp* defaultC2MUserInfoRspInstance = nil;
+ (void) initialize {
  if (self == [C2MUserInfoRsp class]) {
    defaultC2MUserInfoRspInstance = [[C2MUserInfoRsp alloc] init];
  }
}
+ (C2MUserInfoRsp*) defaultInstance {
  return defaultC2MUserInfoRspInstance;
}
- (C2MUserInfoRsp*) defaultInstance {
  return defaultC2MUserInfoRspInstance;
}
- (NSArray *)userInfoList {
  return userInfoListArray;
}
- (ClientUserInfo*)userInfoListAtIndex:(NSUInteger)index {
  return [userInfoListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInituserInfoList = YES;
   [self.userInfoList enumerateObjectsUsingBlock:^(ClientUserInfo *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInituserInfoList = NO;
      *stop = YES;
    }
  }];
  if (!isInituserInfoList) return isInituserInfoList;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  [self.userInfoListArray enumerateObjectsUsingBlock:^(ClientUserInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  [self.userInfoListArray enumerateObjectsUsingBlock:^(ClientUserInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MUserInfoRsp*) parseFromData:(NSData*) data {
  return (C2MUserInfoRsp*)[[[C2MUserInfoRsp builder] mergeFromData:data] build];
}
+ (C2MUserInfoRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUserInfoRsp*)[[[C2MUserInfoRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MUserInfoRsp*) parseFromInputStream:(NSInputStream*) input {
  return (C2MUserInfoRsp*)[[[C2MUserInfoRsp builder] mergeFromInputStream:input] build];
}
+ (C2MUserInfoRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUserInfoRsp*)[[[C2MUserInfoRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MUserInfoRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MUserInfoRsp*)[[[C2MUserInfoRsp builder] mergeFromCodedInputStream:input] build];
}
+ (C2MUserInfoRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MUserInfoRsp*)[[[C2MUserInfoRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MUserInfoRspBuilder*) builder {
  return [[C2MUserInfoRspBuilder alloc] init];
}
+ (C2MUserInfoRspBuilder*) builderWithPrototype:(C2MUserInfoRsp*) prototype {
  return [[C2MUserInfoRsp builder] mergeFrom:prototype];
}
- (C2MUserInfoRspBuilder*) builder {
  return [C2MUserInfoRsp builder];
}
- (C2MUserInfoRspBuilder*) toBuilder {
  return [C2MUserInfoRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  [self.userInfoListArray enumerateObjectsUsingBlock:^(ClientUserInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"userInfoList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MUserInfoRsp class]]) {
    return NO;
  }
  C2MUserInfoRsp *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      [self.userInfoListArray isEqualToArray:otherMessage.userInfoListArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  [self.userInfoListArray enumerateObjectsUsingBlock:^(ClientUserInfo *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MUserInfoRspBuilder()
@property (strong) C2MUserInfoRsp* result;
@end

@implementation C2MUserInfoRspBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MUserInfoRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MUserInfoRspBuilder*) clear {
  self.result = [[C2MUserInfoRsp alloc] init];
  return self;
}
- (C2MUserInfoRspBuilder*) clone {
  return [C2MUserInfoRsp builderWithPrototype:result];
}
- (C2MUserInfoRsp*) defaultInstance {
  return [C2MUserInfoRsp defaultInstance];
}
- (C2MUserInfoRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MUserInfoRsp*) buildPartial {
  C2MUserInfoRsp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MUserInfoRspBuilder*) mergeFrom:(C2MUserInfoRsp*) other {
  if (other == [C2MUserInfoRsp defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.userInfoListArray.count > 0) {
    if (result.userInfoListArray == nil) {
      result.userInfoListArray = [[NSMutableArray alloc] initWithArray:other.userInfoListArray];
    } else {
      [result.userInfoListArray addObjectsFromArray:other.userInfoListArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MUserInfoRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MUserInfoRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 18: {
        ClientUserInfoBuilder* subBuilder = [ClientUserInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserInfoList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MUserInfoRspBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MUserInfoRspBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 29;
  return self;
}
- (NSMutableArray *)userInfoList {
  return result.userInfoListArray;
}
- (ClientUserInfo*)userInfoListAtIndex:(NSUInteger)index {
  return [result userInfoListAtIndex:index];
}
- (C2MUserInfoRspBuilder *)addUserInfoList:(ClientUserInfo*)value {
  if (result.userInfoListArray == nil) {
    result.userInfoListArray = [[NSMutableArray alloc]init];
  }
  [result.userInfoListArray addObject:value];
  return self;
}
- (C2MUserInfoRspBuilder *)setUserInfoListArray:(NSArray *)array {
  result.userInfoListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (C2MUserInfoRspBuilder *)clearUserInfoList {
  result.userInfoListArray = nil;
  return self;
}
@end

@interface C2MDBQueryReq ()
@property SInt32 cmdId;
@property UInt32 seqNo;
@property (strong) NSData* queryData;
@end

@implementation C2MDBQueryReq

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasSeqNo {
  return !!hasSeqNo_;
}
- (void) setHasSeqNo:(BOOL) value_ {
  hasSeqNo_ = !!value_;
}
@synthesize seqNo;
- (BOOL) hasQueryData {
  return !!hasQueryData_;
}
- (void) setHasQueryData:(BOOL) value_ {
  hasQueryData_ = !!value_;
}
@synthesize queryData;
- (void) dealloc {
  self.queryData = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 30;
    self.seqNo = 0;
    self.queryData = [NSData data];
  }
  return self;
}
static C2MDBQueryReq* defaultC2MDBQueryReqInstance = nil;
+ (void) initialize {
  if (self == [C2MDBQueryReq class]) {
    defaultC2MDBQueryReqInstance = [[C2MDBQueryReq alloc] init];
  }
}
+ (C2MDBQueryReq*) defaultInstance {
  return defaultC2MDBQueryReqInstance;
}
- (C2MDBQueryReq*) defaultInstance {
  return defaultC2MDBQueryReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSeqNo) {
    return NO;
  }
  if (!self.hasQueryData) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasSeqNo) {
    [output writeUInt32:2 value:self.seqNo];
  }
  if (self.hasQueryData) {
    [output writeData:3 value:self.queryData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasSeqNo) {
    size_ += computeUInt32Size(2, self.seqNo);
  }
  if (self.hasQueryData) {
    size_ += computeDataSize(3, self.queryData);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MDBQueryReq*) parseFromData:(NSData*) data {
  return (C2MDBQueryReq*)[[[C2MDBQueryReq builder] mergeFromData:data] build];
}
+ (C2MDBQueryReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MDBQueryReq*)[[[C2MDBQueryReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MDBQueryReq*) parseFromInputStream:(NSInputStream*) input {
  return (C2MDBQueryReq*)[[[C2MDBQueryReq builder] mergeFromInputStream:input] build];
}
+ (C2MDBQueryReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MDBQueryReq*)[[[C2MDBQueryReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MDBQueryReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MDBQueryReq*)[[[C2MDBQueryReq builder] mergeFromCodedInputStream:input] build];
}
+ (C2MDBQueryReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MDBQueryReq*)[[[C2MDBQueryReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MDBQueryReqBuilder*) builder {
  return [[C2MDBQueryReqBuilder alloc] init];
}
+ (C2MDBQueryReqBuilder*) builderWithPrototype:(C2MDBQueryReq*) prototype {
  return [[C2MDBQueryReq builder] mergeFrom:prototype];
}
- (C2MDBQueryReqBuilder*) builder {
  return [C2MDBQueryReq builder];
}
- (C2MDBQueryReqBuilder*) toBuilder {
  return [C2MDBQueryReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasSeqNo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"seqNo", [NSNumber numberWithInteger:self.seqNo]];
  }
  if (self.hasQueryData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"queryData", self.queryData];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MDBQueryReq class]]) {
    return NO;
  }
  C2MDBQueryReq *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasSeqNo == otherMessage.hasSeqNo &&
      (!self.hasSeqNo || self.seqNo == otherMessage.seqNo) &&
      self.hasQueryData == otherMessage.hasQueryData &&
      (!self.hasQueryData || [self.queryData isEqual:otherMessage.queryData]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasSeqNo) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.seqNo] hash];
  }
  if (self.hasQueryData) {
    hashCode = hashCode * 31 + [self.queryData hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MDBQueryReqBuilder()
@property (strong) C2MDBQueryReq* result;
@end

@implementation C2MDBQueryReqBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MDBQueryReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MDBQueryReqBuilder*) clear {
  self.result = [[C2MDBQueryReq alloc] init];
  return self;
}
- (C2MDBQueryReqBuilder*) clone {
  return [C2MDBQueryReq builderWithPrototype:result];
}
- (C2MDBQueryReq*) defaultInstance {
  return [C2MDBQueryReq defaultInstance];
}
- (C2MDBQueryReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MDBQueryReq*) buildPartial {
  C2MDBQueryReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MDBQueryReqBuilder*) mergeFrom:(C2MDBQueryReq*) other {
  if (other == [C2MDBQueryReq defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasSeqNo) {
    [self setSeqNo:other.seqNo];
  }
  if (other.hasQueryData) {
    [self setQueryData:other.queryData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MDBQueryReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MDBQueryReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 16: {
        [self setSeqNo:[input readUInt32]];
        break;
      }
      case 26: {
        [self setQueryData:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MDBQueryReqBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MDBQueryReqBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 30;
  return self;
}
- (BOOL) hasSeqNo {
  return result.hasSeqNo;
}
- (UInt32) seqNo {
  return result.seqNo;
}
- (C2MDBQueryReqBuilder*) setSeqNo:(UInt32) value {
  result.hasSeqNo = YES;
  result.seqNo = value;
  return self;
}
- (C2MDBQueryReqBuilder*) clearSeqNo {
  result.hasSeqNo = NO;
  result.seqNo = 0;
  return self;
}
- (BOOL) hasQueryData {
  return result.hasQueryData;
}
- (NSData*) queryData {
  return result.queryData;
}
- (C2MDBQueryReqBuilder*) setQueryData:(NSData*) value {
  result.hasQueryData = YES;
  result.queryData = value;
  return self;
}
- (C2MDBQueryReqBuilder*) clearQueryData {
  result.hasQueryData = NO;
  result.queryData = [NSData data];
  return self;
}
@end

@interface C2MDBQueryRsp ()
@property SInt32 cmdId;
@property UInt32 seqNo;
@property (strong) NSData* resultData;
@end

@implementation C2MDBQueryRsp

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasSeqNo {
  return !!hasSeqNo_;
}
- (void) setHasSeqNo:(BOOL) value_ {
  hasSeqNo_ = !!value_;
}
@synthesize seqNo;
- (BOOL) hasResultData {
  return !!hasResultData_;
}
- (void) setHasResultData:(BOOL) value_ {
  hasResultData_ = !!value_;
}
@synthesize resultData;
- (void) dealloc {
  self.resultData = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 31;
    self.seqNo = 0;
    self.resultData = [NSData data];
  }
  return self;
}
static C2MDBQueryRsp* defaultC2MDBQueryRspInstance = nil;
+ (void) initialize {
  if (self == [C2MDBQueryRsp class]) {
    defaultC2MDBQueryRspInstance = [[C2MDBQueryRsp alloc] init];
  }
}
+ (C2MDBQueryRsp*) defaultInstance {
  return defaultC2MDBQueryRspInstance;
}
- (C2MDBQueryRsp*) defaultInstance {
  return defaultC2MDBQueryRspInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSeqNo) {
    return NO;
  }
  if (!self.hasResultData) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasSeqNo) {
    [output writeUInt32:2 value:self.seqNo];
  }
  if (self.hasResultData) {
    [output writeData:3 value:self.resultData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasSeqNo) {
    size_ += computeUInt32Size(2, self.seqNo);
  }
  if (self.hasResultData) {
    size_ += computeDataSize(3, self.resultData);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MDBQueryRsp*) parseFromData:(NSData*) data {
  return (C2MDBQueryRsp*)[[[C2MDBQueryRsp builder] mergeFromData:data] build];
}
+ (C2MDBQueryRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MDBQueryRsp*)[[[C2MDBQueryRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MDBQueryRsp*) parseFromInputStream:(NSInputStream*) input {
  return (C2MDBQueryRsp*)[[[C2MDBQueryRsp builder] mergeFromInputStream:input] build];
}
+ (C2MDBQueryRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MDBQueryRsp*)[[[C2MDBQueryRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MDBQueryRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MDBQueryRsp*)[[[C2MDBQueryRsp builder] mergeFromCodedInputStream:input] build];
}
+ (C2MDBQueryRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MDBQueryRsp*)[[[C2MDBQueryRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MDBQueryRspBuilder*) builder {
  return [[C2MDBQueryRspBuilder alloc] init];
}
+ (C2MDBQueryRspBuilder*) builderWithPrototype:(C2MDBQueryRsp*) prototype {
  return [[C2MDBQueryRsp builder] mergeFrom:prototype];
}
- (C2MDBQueryRspBuilder*) builder {
  return [C2MDBQueryRsp builder];
}
- (C2MDBQueryRspBuilder*) toBuilder {
  return [C2MDBQueryRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasSeqNo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"seqNo", [NSNumber numberWithInteger:self.seqNo]];
  }
  if (self.hasResultData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultData", self.resultData];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MDBQueryRsp class]]) {
    return NO;
  }
  C2MDBQueryRsp *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasSeqNo == otherMessage.hasSeqNo &&
      (!self.hasSeqNo || self.seqNo == otherMessage.seqNo) &&
      self.hasResultData == otherMessage.hasResultData &&
      (!self.hasResultData || [self.resultData isEqual:otherMessage.resultData]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasSeqNo) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.seqNo] hash];
  }
  if (self.hasResultData) {
    hashCode = hashCode * 31 + [self.resultData hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MDBQueryRspBuilder()
@property (strong) C2MDBQueryRsp* result;
@end

@implementation C2MDBQueryRspBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MDBQueryRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MDBQueryRspBuilder*) clear {
  self.result = [[C2MDBQueryRsp alloc] init];
  return self;
}
- (C2MDBQueryRspBuilder*) clone {
  return [C2MDBQueryRsp builderWithPrototype:result];
}
- (C2MDBQueryRsp*) defaultInstance {
  return [C2MDBQueryRsp defaultInstance];
}
- (C2MDBQueryRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MDBQueryRsp*) buildPartial {
  C2MDBQueryRsp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MDBQueryRspBuilder*) mergeFrom:(C2MDBQueryRsp*) other {
  if (other == [C2MDBQueryRsp defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasSeqNo) {
    [self setSeqNo:other.seqNo];
  }
  if (other.hasResultData) {
    [self setResultData:other.resultData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MDBQueryRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MDBQueryRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 16: {
        [self setSeqNo:[input readUInt32]];
        break;
      }
      case 26: {
        [self setResultData:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MDBQueryRspBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MDBQueryRspBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 31;
  return self;
}
- (BOOL) hasSeqNo {
  return result.hasSeqNo;
}
- (UInt32) seqNo {
  return result.seqNo;
}
- (C2MDBQueryRspBuilder*) setSeqNo:(UInt32) value {
  result.hasSeqNo = YES;
  result.seqNo = value;
  return self;
}
- (C2MDBQueryRspBuilder*) clearSeqNo {
  result.hasSeqNo = NO;
  result.seqNo = 0;
  return self;
}
- (BOOL) hasResultData {
  return result.hasResultData;
}
- (NSData*) resultData {
  return result.resultData;
}
- (C2MDBQueryRspBuilder*) setResultData:(NSData*) value {
  result.hasResultData = YES;
  result.resultData = value;
  return self;
}
- (C2MDBQueryRspBuilder*) clearResultData {
  result.hasResultData = NO;
  result.resultData = [NSData data];
  return self;
}
@end

@interface C2MRemoveSessionReq ()
@property SInt32 cmdId;
@property SessionType sessionType;
@property (strong) NSString* sessionId;
@end

@implementation C2MRemoveSessionReq

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasSessionType {
  return !!hasSessionType_;
}
- (void) setHasSessionType:(BOOL) value_ {
  hasSessionType_ = !!value_;
}
@synthesize sessionType;
- (BOOL) hasSessionId {
  return !!hasSessionId_;
}
- (void) setHasSessionId:(BOOL) value_ {
  hasSessionId_ = !!value_;
}
@synthesize sessionId;
- (void) dealloc {
  self.sessionId = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 32;
    self.sessionType = SessionTypeSessionTypeSingle;
    self.sessionId = @"";
  }
  return self;
}
static C2MRemoveSessionReq* defaultC2MRemoveSessionReqInstance = nil;
+ (void) initialize {
  if (self == [C2MRemoveSessionReq class]) {
    defaultC2MRemoveSessionReqInstance = [[C2MRemoveSessionReq alloc] init];
  }
}
+ (C2MRemoveSessionReq*) defaultInstance {
  return defaultC2MRemoveSessionReqInstance;
}
- (C2MRemoveSessionReq*) defaultInstance {
  return defaultC2MRemoveSessionReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSessionType) {
    return NO;
  }
  if (!self.hasSessionId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasSessionType) {
    [output writeEnum:2 value:self.sessionType];
  }
  if (self.hasSessionId) {
    [output writeString:3 value:self.sessionId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasSessionType) {
    size_ += computeEnumSize(2, self.sessionType);
  }
  if (self.hasSessionId) {
    size_ += computeStringSize(3, self.sessionId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MRemoveSessionReq*) parseFromData:(NSData*) data {
  return (C2MRemoveSessionReq*)[[[C2MRemoveSessionReq builder] mergeFromData:data] build];
}
+ (C2MRemoveSessionReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MRemoveSessionReq*)[[[C2MRemoveSessionReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MRemoveSessionReq*) parseFromInputStream:(NSInputStream*) input {
  return (C2MRemoveSessionReq*)[[[C2MRemoveSessionReq builder] mergeFromInputStream:input] build];
}
+ (C2MRemoveSessionReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MRemoveSessionReq*)[[[C2MRemoveSessionReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MRemoveSessionReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MRemoveSessionReq*)[[[C2MRemoveSessionReq builder] mergeFromCodedInputStream:input] build];
}
+ (C2MRemoveSessionReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MRemoveSessionReq*)[[[C2MRemoveSessionReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MRemoveSessionReqBuilder*) builder {
  return [[C2MRemoveSessionReqBuilder alloc] init];
}
+ (C2MRemoveSessionReqBuilder*) builderWithPrototype:(C2MRemoveSessionReq*) prototype {
  return [[C2MRemoveSessionReq builder] mergeFrom:prototype];
}
- (C2MRemoveSessionReqBuilder*) builder {
  return [C2MRemoveSessionReq builder];
}
- (C2MRemoveSessionReqBuilder*) toBuilder {
  return [C2MRemoveSessionReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasSessionType) {
    [output appendFormat:@"%@%@: %d\n", indent, @"sessionType", self.sessionType];
  }
  if (self.hasSessionId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sessionId", self.sessionId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MRemoveSessionReq class]]) {
    return NO;
  }
  C2MRemoveSessionReq *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasSessionType == otherMessage.hasSessionType &&
      (!self.hasSessionType || self.sessionType == otherMessage.sessionType) &&
      self.hasSessionId == otherMessage.hasSessionId &&
      (!self.hasSessionId || [self.sessionId isEqual:otherMessage.sessionId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasSessionType) {
    hashCode = hashCode * 31 + self.sessionType;
  }
  if (self.hasSessionId) {
    hashCode = hashCode * 31 + [self.sessionId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MRemoveSessionReqBuilder()
@property (strong) C2MRemoveSessionReq* result;
@end

@implementation C2MRemoveSessionReqBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MRemoveSessionReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MRemoveSessionReqBuilder*) clear {
  self.result = [[C2MRemoveSessionReq alloc] init];
  return self;
}
- (C2MRemoveSessionReqBuilder*) clone {
  return [C2MRemoveSessionReq builderWithPrototype:result];
}
- (C2MRemoveSessionReq*) defaultInstance {
  return [C2MRemoveSessionReq defaultInstance];
}
- (C2MRemoveSessionReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MRemoveSessionReq*) buildPartial {
  C2MRemoveSessionReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MRemoveSessionReqBuilder*) mergeFrom:(C2MRemoveSessionReq*) other {
  if (other == [C2MRemoveSessionReq defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasSessionType) {
    [self setSessionType:other.sessionType];
  }
  if (other.hasSessionId) {
    [self setSessionId:other.sessionId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MRemoveSessionReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MRemoveSessionReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 16: {
        SessionType value = (SessionType)[input readEnum];
        if (SessionTypeIsValidValue(value)) {
          [self setSessionType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        [self setSessionId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MRemoveSessionReqBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MRemoveSessionReqBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 32;
  return self;
}
- (BOOL) hasSessionType {
  return result.hasSessionType;
}
- (SessionType) sessionType {
  return result.sessionType;
}
- (C2MRemoveSessionReqBuilder*) setSessionType:(SessionType) value {
  result.hasSessionType = YES;
  result.sessionType = value;
  return self;
}
- (C2MRemoveSessionReqBuilder*) clearSessionType {
  result.hasSessionType = NO;
  result.sessionType = SessionTypeSessionTypeSingle;
  return self;
}
- (BOOL) hasSessionId {
  return result.hasSessionId;
}
- (NSString*) sessionId {
  return result.sessionId;
}
- (C2MRemoveSessionReqBuilder*) setSessionId:(NSString*) value {
  result.hasSessionId = YES;
  result.sessionId = value;
  return self;
}
- (C2MRemoveSessionReqBuilder*) clearSessionId {
  result.hasSessionId = NO;
  result.sessionId = @"";
  return self;
}
@end

@interface C2MRemoveSessionRsp ()
@property SInt32 cmdId;
@property UInt32 results;
@property SessionType sessionType;
@property (strong) NSString* sessionId;
@end

@implementation C2MRemoveSessionRsp

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasResults {
  return !!hasResults_;
}
- (void) setHasResults:(BOOL) value_ {
  hasResults_ = !!value_;
}
@synthesize results;
- (BOOL) hasSessionType {
  return !!hasSessionType_;
}
- (void) setHasSessionType:(BOOL) value_ {
  hasSessionType_ = !!value_;
}
@synthesize sessionType;
- (BOOL) hasSessionId {
  return !!hasSessionId_;
}
- (void) setHasSessionId:(BOOL) value_ {
  hasSessionId_ = !!value_;
}
@synthesize sessionId;
- (void) dealloc {
  self.sessionId = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 33;
    self.results = 0;
    self.sessionType = SessionTypeSessionTypeSingle;
    self.sessionId = @"";
  }
  return self;
}
static C2MRemoveSessionRsp* defaultC2MRemoveSessionRspInstance = nil;
+ (void) initialize {
  if (self == [C2MRemoveSessionRsp class]) {
    defaultC2MRemoveSessionRspInstance = [[C2MRemoveSessionRsp alloc] init];
  }
}
+ (C2MRemoveSessionRsp*) defaultInstance {
  return defaultC2MRemoveSessionRspInstance;
}
- (C2MRemoveSessionRsp*) defaultInstance {
  return defaultC2MRemoveSessionRspInstance;
}
- (BOOL) isInitialized {
  if (!self.hasResults) {
    return NO;
  }
  if (!self.hasSessionType) {
    return NO;
  }
  if (!self.hasSessionId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasResults) {
    [output writeUInt32:2 value:self.results];
  }
  if (self.hasSessionType) {
    [output writeEnum:3 value:self.sessionType];
  }
  if (self.hasSessionId) {
    [output writeString:4 value:self.sessionId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasResults) {
    size_ += computeUInt32Size(2, self.results);
  }
  if (self.hasSessionType) {
    size_ += computeEnumSize(3, self.sessionType);
  }
  if (self.hasSessionId) {
    size_ += computeStringSize(4, self.sessionId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MRemoveSessionRsp*) parseFromData:(NSData*) data {
  return (C2MRemoveSessionRsp*)[[[C2MRemoveSessionRsp builder] mergeFromData:data] build];
}
+ (C2MRemoveSessionRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MRemoveSessionRsp*)[[[C2MRemoveSessionRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MRemoveSessionRsp*) parseFromInputStream:(NSInputStream*) input {
  return (C2MRemoveSessionRsp*)[[[C2MRemoveSessionRsp builder] mergeFromInputStream:input] build];
}
+ (C2MRemoveSessionRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MRemoveSessionRsp*)[[[C2MRemoveSessionRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MRemoveSessionRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MRemoveSessionRsp*)[[[C2MRemoveSessionRsp builder] mergeFromCodedInputStream:input] build];
}
+ (C2MRemoveSessionRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MRemoveSessionRsp*)[[[C2MRemoveSessionRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MRemoveSessionRspBuilder*) builder {
  return [[C2MRemoveSessionRspBuilder alloc] init];
}
+ (C2MRemoveSessionRspBuilder*) builderWithPrototype:(C2MRemoveSessionRsp*) prototype {
  return [[C2MRemoveSessionRsp builder] mergeFrom:prototype];
}
- (C2MRemoveSessionRspBuilder*) builder {
  return [C2MRemoveSessionRsp builder];
}
- (C2MRemoveSessionRspBuilder*) toBuilder {
  return [C2MRemoveSessionRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasResults) {
    [output appendFormat:@"%@%@: %@\n", indent, @"results", [NSNumber numberWithInteger:self.results]];
  }
  if (self.hasSessionType) {
    [output appendFormat:@"%@%@: %d\n", indent, @"sessionType", self.sessionType];
  }
  if (self.hasSessionId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sessionId", self.sessionId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MRemoveSessionRsp class]]) {
    return NO;
  }
  C2MRemoveSessionRsp *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasResults == otherMessage.hasResults &&
      (!self.hasResults || self.results == otherMessage.results) &&
      self.hasSessionType == otherMessage.hasSessionType &&
      (!self.hasSessionType || self.sessionType == otherMessage.sessionType) &&
      self.hasSessionId == otherMessage.hasSessionId &&
      (!self.hasSessionId || [self.sessionId isEqual:otherMessage.sessionId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasResults) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.results] hash];
  }
  if (self.hasSessionType) {
    hashCode = hashCode * 31 + self.sessionType;
  }
  if (self.hasSessionId) {
    hashCode = hashCode * 31 + [self.sessionId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MRemoveSessionRspBuilder()
@property (strong) C2MRemoveSessionRsp* result;
@end

@implementation C2MRemoveSessionRspBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MRemoveSessionRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MRemoveSessionRspBuilder*) clear {
  self.result = [[C2MRemoveSessionRsp alloc] init];
  return self;
}
- (C2MRemoveSessionRspBuilder*) clone {
  return [C2MRemoveSessionRsp builderWithPrototype:result];
}
- (C2MRemoveSessionRsp*) defaultInstance {
  return [C2MRemoveSessionRsp defaultInstance];
}
- (C2MRemoveSessionRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MRemoveSessionRsp*) buildPartial {
  C2MRemoveSessionRsp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MRemoveSessionRspBuilder*) mergeFrom:(C2MRemoveSessionRsp*) other {
  if (other == [C2MRemoveSessionRsp defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasResults) {
    [self setResults:other.results];
  }
  if (other.hasSessionType) {
    [self setSessionType:other.sessionType];
  }
  if (other.hasSessionId) {
    [self setSessionId:other.sessionId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MRemoveSessionRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MRemoveSessionRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 16: {
        [self setResults:[input readUInt32]];
        break;
      }
      case 24: {
        SessionType value = (SessionType)[input readEnum];
        if (SessionTypeIsValidValue(value)) {
          [self setSessionType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 34: {
        [self setSessionId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MRemoveSessionRspBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MRemoveSessionRspBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 33;
  return self;
}
- (BOOL) hasResults {
  return result.hasResults;
}
- (UInt32) results {
  return result.results;
}
- (C2MRemoveSessionRspBuilder*) setResults:(UInt32) value {
  result.hasResults = YES;
  result.results = value;
  return self;
}
- (C2MRemoveSessionRspBuilder*) clearResults {
  result.hasResults = NO;
  result.results = 0;
  return self;
}
- (BOOL) hasSessionType {
  return result.hasSessionType;
}
- (SessionType) sessionType {
  return result.sessionType;
}
- (C2MRemoveSessionRspBuilder*) setSessionType:(SessionType) value {
  result.hasSessionType = YES;
  result.sessionType = value;
  return self;
}
- (C2MRemoveSessionRspBuilder*) clearSessionType {
  result.hasSessionType = NO;
  result.sessionType = SessionTypeSessionTypeSingle;
  return self;
}
- (BOOL) hasSessionId {
  return result.hasSessionId;
}
- (NSString*) sessionId {
  return result.sessionId;
}
- (C2MRemoveSessionRspBuilder*) setSessionId:(NSString*) value {
  result.hasSessionId = YES;
  result.sessionId = value;
  return self;
}
- (C2MRemoveSessionRspBuilder*) clearSessionId {
  result.hasSessionId = NO;
  result.sessionId = @"";
  return self;
}
@end

@interface C2MServiceSetting ()
@property SInt32 cmdId;
@property UInt32 key;
@property UInt32 value;
@end

@implementation C2MServiceSetting

- (BOOL) hasCmdId {
  return !!hasCmdId_;
}
- (void) setHasCmdId:(BOOL) value_ {
  hasCmdId_ = !!value_;
}
@synthesize cmdId;
- (BOOL) hasKey {
  return !!hasKey_;
}
- (void) setHasKey:(BOOL) value_ {
  hasKey_ = !!value_;
}
@synthesize key;
- (BOOL) hasValue {
  return !!hasValue_;
}
- (void) setHasValue:(BOOL) value_ {
  hasValue_ = !!value_;
}
@synthesize value;
- (void) dealloc {
}
- (id) init {
  if ((self = [super init])) {
    self.cmdId = 34;
    self.key = 0;
    self.value = 0;
  }
  return self;
}
static C2MServiceSetting* defaultC2MServiceSettingInstance = nil;
+ (void) initialize {
  if (self == [C2MServiceSetting class]) {
    defaultC2MServiceSettingInstance = [[C2MServiceSetting alloc] init];
  }
}
+ (C2MServiceSetting*) defaultInstance {
  return defaultC2MServiceSettingInstance;
}
- (C2MServiceSetting*) defaultInstance {
  return defaultC2MServiceSettingInstance;
}
- (BOOL) isInitialized {
  if (!self.hasKey) {
    return NO;
  }
  if (!self.hasValue) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCmdId) {
    [output writeInt32:1 value:self.cmdId];
  }
  if (self.hasKey) {
    [output writeUInt32:2 value:self.key];
  }
  if (self.hasValue) {
    [output writeUInt32:3 value:self.value];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCmdId) {
    size_ += computeInt32Size(1, self.cmdId);
  }
  if (self.hasKey) {
    size_ += computeUInt32Size(2, self.key);
  }
  if (self.hasValue) {
    size_ += computeUInt32Size(3, self.value);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (C2MServiceSetting*) parseFromData:(NSData*) data {
  return (C2MServiceSetting*)[[[C2MServiceSetting builder] mergeFromData:data] build];
}
+ (C2MServiceSetting*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MServiceSetting*)[[[C2MServiceSetting builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (C2MServiceSetting*) parseFromInputStream:(NSInputStream*) input {
  return (C2MServiceSetting*)[[[C2MServiceSetting builder] mergeFromInputStream:input] build];
}
+ (C2MServiceSetting*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MServiceSetting*)[[[C2MServiceSetting builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MServiceSetting*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (C2MServiceSetting*)[[[C2MServiceSetting builder] mergeFromCodedInputStream:input] build];
}
+ (C2MServiceSetting*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (C2MServiceSetting*)[[[C2MServiceSetting builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (C2MServiceSettingBuilder*) builder {
  return [[C2MServiceSettingBuilder alloc] init];
}
+ (C2MServiceSettingBuilder*) builderWithPrototype:(C2MServiceSetting*) prototype {
  return [[C2MServiceSetting builder] mergeFrom:prototype];
}
- (C2MServiceSettingBuilder*) builder {
  return [C2MServiceSetting builder];
}
- (C2MServiceSettingBuilder*) toBuilder {
  return [C2MServiceSetting builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCmdId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cmdId", [NSNumber numberWithInteger:self.cmdId]];
  }
  if (self.hasKey) {
    [output appendFormat:@"%@%@: %@\n", indent, @"key", [NSNumber numberWithInteger:self.key]];
  }
  if (self.hasValue) {
    [output appendFormat:@"%@%@: %@\n", indent, @"value", [NSNumber numberWithInteger:self.value]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[C2MServiceSetting class]]) {
    return NO;
  }
  C2MServiceSetting *otherMessage = other;
  return
      self.hasCmdId == otherMessage.hasCmdId &&
      (!self.hasCmdId || self.cmdId == otherMessage.cmdId) &&
      self.hasKey == otherMessage.hasKey &&
      (!self.hasKey || self.key == otherMessage.key) &&
      self.hasValue == otherMessage.hasValue &&
      (!self.hasValue || self.value == otherMessage.value) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCmdId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cmdId] hash];
  }
  if (self.hasKey) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.key] hash];
  }
  if (self.hasValue) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.value] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface C2MServiceSettingBuilder()
@property (strong) C2MServiceSetting* result;
@end

@implementation C2MServiceSettingBuilder
@synthesize result;
- (void) dealloc {
  self.result = nil;
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[C2MServiceSetting alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (C2MServiceSettingBuilder*) clear {
  self.result = [[C2MServiceSetting alloc] init];
  return self;
}
- (C2MServiceSettingBuilder*) clone {
  return [C2MServiceSetting builderWithPrototype:result];
}
- (C2MServiceSetting*) defaultInstance {
  return [C2MServiceSetting defaultInstance];
}
- (C2MServiceSetting*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (C2MServiceSetting*) buildPartial {
  C2MServiceSetting* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (C2MServiceSettingBuilder*) mergeFrom:(C2MServiceSetting*) other {
  if (other == [C2MServiceSetting defaultInstance]) {
    return self;
  }
  if (other.hasCmdId) {
    [self setCmdId:other.cmdId];
  }
  if (other.hasKey) {
    [self setKey:other.key];
  }
  if (other.hasValue) {
    [self setValue:other.value];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (C2MServiceSettingBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (C2MServiceSettingBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCmdId:[input readInt32]];
        break;
      }
      case 16: {
        [self setKey:[input readUInt32]];
        break;
      }
      case 24: {
        [self setValue:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCmdId {
  return result.hasCmdId;
}
- (SInt32) cmdId {
  return result.cmdId;
}
- (C2MServiceSettingBuilder*) setCmdId:(SInt32) value {
  result.hasCmdId = YES;
  result.cmdId = value;
  return self;
}
- (C2MServiceSettingBuilder*) clearCmdId {
  result.hasCmdId = NO;
  result.cmdId = 34;
  return self;
}
- (BOOL) hasKey {
  return result.hasKey;
}
- (UInt32) key {
  return result.key;
}
- (C2MServiceSettingBuilder*) setKey:(UInt32) value {
  result.hasKey = YES;
  result.key = value;
  return self;
}
- (C2MServiceSettingBuilder*) clearKey {
  result.hasKey = NO;
  result.key = 0;
  return self;
}
- (BOOL) hasValue {
  return result.hasValue;
}
- (UInt32) value {
  return result.value;
}
- (C2MServiceSettingBuilder*) setValue:(UInt32) value {
  result.hasValue = YES;
  result.value = value;
  return self;
}
- (C2MServiceSettingBuilder*) clearValue {
  result.hasValue = NO;
  result.value = 0;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
